{
  "contractName": "CosmosStaking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_community",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_chainId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_delegatee",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "UpdateStaking",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accountBindMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegatee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_chainId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_delegatee",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_bindAccount",
          "type": "address"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCommunity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserDepositInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasDeposited",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "bindAccount",
              "type": "address"
            }
          ],
          "internalType": "struct CosmosStaking.StakingInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_community\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_chainId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_delegatee\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdateStaking\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountBindMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegatee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommunity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasDeposited\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bindAccount\",\"type\":\"address\"}],\"internalType\":\"struct CosmosStaking.StakingInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_chainId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_delegatee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_bindAccount\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Template contract of Atom staking pool. Delegation only can be updated through update() by bridge.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/cosmos-atom/CosmosStaking.sol\":\"CosmosStaking\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/Community.sol\":{\"keccak256\":\"0xc1919ce46dcc08ad71b99cdefbdd8fb4454da1f14b1214f217d252493a427b44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd57c0598327d311ef069b9ba244fc3c62f35cffa3e5cae3f976eeddd2b5f507\",\"dweb:/ipfs/QmPMNAW3ftnCbgP16naDdP25ZGz1Nuimk88SHr2iPPSPtr\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol\":{\"keccak256\":\"0x651020221943be888ac06515c91ba57fb85a427ee46fe23e86db6eadfb3a2bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c05ef23811ecbda8079d230bc0e69c0b6fd8eb8411d10883c4313a786e78cbbb\",\"dweb:/ipfs/QmNms3YHXUFuY2nE5HkGHFtkRmpj5qffyXgSpmC4pZYgC6\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xddf2a441a9c0714ecc5c14ad5ee6c3ffa2e8155292229574369156004d2bcd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167987fa430b1303ad04b831fa610d31ca3f4202ad847e87cd9bb01156cfe9e0\",\"dweb:/ipfs/Qmf7a5unwgdUWTPfWZ94QRxVVxic12feERMNeC6krcmLmZ\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/community-token/MintableERC20.sol\":{\"keccak256\":\"0xd49c97ab428cd65d2326ad6875aed0082716bbfd094e5fd11cfafc6f778adcf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87da6adb416be4cfa38f6e08989390558297791f362cc237bee8c33080d3bd20\",\"dweb:/ipfs/QmYgQbaazS4L9KVvUhDq7pMxZGhCM8USrgJyjAsLkXDfLX\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/cosmos-atom/CosmosStaking.sol\":{\"keccak256\":\"0xaef5d30c62f8d081edda1aa60e4a5528f8cdd581ac1c03e8b495fdf84de0ed8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bf81f6e7b162b723d0c2a00ea8cabc04b1886e5605c8945e5849167bc46513e\",\"dweb:/ipfs/QmaZNX5nQQMrm2wBw887wJ3Bym6MvizXRTXA7PRiuLSVsZ\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/cosmos-atom/CosmosStakingFactory.sol\":{\"keccak256\":\"0xaaa20fb7bc305081ac902906e422cbe677c18388e235692059b82517cb21a3f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f8b46941c67ec628f37dc18d03459e797929aca5720e133185cfa66e0f3f9e3\",\"dweb:/ipfs/QmZ1AXeYCWqoAbECE16qyDo1Chy2ZreCNpSCqiKtv1mZCe\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ArbSys.sol\":{\"keccak256\":\"0x22f1cf1781c0d8828112ee5cce04e10bcc56dbb3fa668ceb10895393b21c70b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20f6c6a7c3b39241ebbb40490b70398ed8e013d061354447aba23553fd2a6ddc\",\"dweb:/ipfs/QmWzt87GoVDbz27AnbsZdAAoSK6763Jao7FEULLZfPY5by\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICalculator.sol\":{\"keccak256\":\"0x85e62c5ec77229d1e44b2c838b259829093e616ddbb887261eeaadd11c83c70a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8433eb15b4035948768e8707cae178742fc32fd60813dbba845d177ea87a89c7\",\"dweb:/ipfs/QmRByWaN4DZcSUyJABp1PViBDkBfQuHVAvqeU6FwqTPW9K\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommittee.sol\":{\"keccak256\":\"0x2190b0279cab5723ca36a492c45aad3b43f4f705d1df7d81e2932733b371397e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccd2ccfbbb75866a710e334056949888006443fd92404c66f22a2ffbd3a41acf\",\"dweb:/ipfs/QmUE1FEe5qLTp4TTrv9YBPgo97bdjABwUsRkZxkVcmXkUv\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunity.sol\":{\"keccak256\":\"0xffca71db30ce904d411ce19e250e66278c3547ec466e3263b1e4666b37c3b65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aec1e649127ab1f4812273dadc10d56d9c055f376ef1081b2b9885293cf18ca\",\"dweb:/ipfs/QmamXoeyTcakstJdc9cUfnRChGJtxxV2uA1y3HAg3Scyx9\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunityTokenFactory.sol\":{\"keccak256\":\"0x9a69a2d0752d3002d55ec2734724891fdab03de0a88e15ff297d85a3878924b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54fcdeb38c2292e11b14d0ff2b2d772ab8e14ce56d080685fede2f38749ff1d\",\"dweb:/ipfs/QmZdUicfe2kiGG5WaYpYN9yzNoXN7X3AmCMaosF4Vj6kzz\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IGauge.sol\":{\"keccak256\":\"0xafa9311f14cf7617763940d265d51448c613e574e6cbcdbb4412bd76ca7ae1fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d69b9acd6a010f1e8f5e0f3f533633a360c3f9d128d43c5191cc7e3d0864244\",\"dweb:/ipfs/QmQfwcyuTHGaw8xM9jwA9YzrxaKUSXTKNYobGwXLeCYus8\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xedea7672bb9703bcf57a6bbf386e4b528f55a698a08bc7c4481400738671ac83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20c0e753aa731e11ebe3e2918c863a4e72400983bb466660d3580ce4d9fbcf4\",\"dweb:/ipfs/QmUi3uZ9HVmZDAgyTTvWTPMtov2SudhFdSJ7jGLf8w3eis\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0x690fa318a561b45e70ceee542a68746d8b72a98c4ff83abb177c3e3710190fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91b6a4e9de1e1f01065c329d197dfd1f4d9a0996397f9f79b846804d75b1d2bd\",\"dweb:/ipfs/Qmc1eCVjE1xnQx2uMPkhAz5i3ohDDjEoVmJ5SZ8mdytScP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b506040516200124c3803806200124c833981016040819052620000349162000189565b33606090811b60805284901b6001600160601b03191660a052825162000062906002906020860190620000b4565b50600380546001600160a01b0319166001600160a01b039290921691909117905560f81b7fff000000000000000000000000000000000000000000000000000000000000001660c05250620003199050565b828054620000c29062000294565b90600052602060002090601f016020900481019282620000e6576000855562000131565b82601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b5b808211156200013f576000815560010162000144565b80516001600160a01b03811681146200017257600080fd5b919050565b805160ff811681146200017257600080fd5b600080600080608085870312156200019f578384fd5b620001aa856200015a565b602086810151919550906001600160401b0380821115620001c9578586fd5b818801915088601f830112620001dd578586fd5b815181811115620001f257620001f2620002ea565b604051601f8201601f1916810185018381118282101715620002185762000218620002ea565b60405281815283820185018b10156200022f578788fd5b8792505b8183101562000252578383018501518184018601529184019162000233565b818311156200026357878583830101525b8097505050505050620002796040860162000177565b915062000289606086016200015a565b905092959194509250565b600281046001821680620002a957607f821691505b60208210811415620002e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60805160601c60a05160601c60c05160f81c610ebb6200039160003960006102c40152600081816103d901528181610546015281816105f6015281816106a00152818161078801528181610840015281816108e901526109f80152600081816102120152818161057301526109610152610ebb6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806388cc58e41161006657806388cc58e41461010857806394465b2114610110578063b3a7834d14610123578063c51db6b214610143578063e73df6741461014b5761009e565b806306fdde03146100a35780631e31d053146100c15780632b8509a7146100d657806338adb6f0146100eb578063567e98f914610100575b600080fd5b6100ab61015e565b6040516100b89190610ba0565b60405180910390f35b6100c96101ec565b6040516100b89190610b59565b6100e96100e4366004610af5565b6101fb565b005b6100f3610953565b6040516100b89190610d93565b6100f3610959565b6100c961095f565b6100f361011e366004610aa3565b610983565b610136610131366004610aa3565b6109a6565b6040516100b89190610d67565b6100c96109f6565b6100c9610159366004610aa3565b610a1a565b6002805461016b90610e34565b80601f016020809104026020016040519081016040528092919081815260200182805461019790610e34565b80156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b505050505081565b6003546001600160a01b031681565b6040516372923f6d60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e5247eda906102499088903390600401610daa565b60206040518083038186803b15801561026157600080fd5b505afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610abd565b6102be5760405162461bcd60e51b81526004016102b590610c9a565b60405180910390fd5b8460ff167f000000000000000000000000000000000000000000000000000000000000000060ff16146103035760405162461bcd60e51b81526004016102b590610d08565b6003546001600160a01b038581169116146103305760405162461bcd60e51b81526004016102b590610c63565b6001600160a01b0381811660009081526020819052604090205416158061037357506001600160a01b038181166000908152602081905260409020548116908416145b61038f5760405162461bcd60e51b81526004016102b590610cd1565b6001600160a01b03831660009081526001602081905260409091200154828114156103ba575061094c565b8281101561047a57604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a9061040e903090600401610b59565b60206040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610abd565b61047a5760405162461bcd60e51b81526004016102b590610c22565b6001600160a01b03841660009081526001602052604090205460ff166104f0576001600160a01b038085166000818152600160208181526040808420805460ff19169093178355600290920180549588166001600160a01b0319968716811790915583528290529020805490921617905561052f565b6001600160a01b0384811660009081526001602052604090206002015481169083161461052f5760405162461bcd60e51b81526004016102b590610d30565b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f29061059b907f000000000000000000000000000000000000000000000000000000000000000090600401610bf3565b600060405180830381600087803b1580156105b557600080fd5b505af11580156105c9573d6000803e3d6000fd5b505050506001600160a01b03841660009081526001602081905260409091200154156107f45760006107697f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630886040518363ffffffff1660e01b8152600401610642929190610b6d565b60206040518083038186803b15801561065a57600080fd5b505afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610add565b61076364e8d4a5100061075d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016106ea9190610b59565b60206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610add565b6001600160a01b038b166000908152600160208190526040909120015490610a35565b90610a48565b90610a54565b905080156107f257604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b7208906107bf9088908590600401610b87565b600060405180830381600087803b1580156107d957600080fd5b505af11580156107ed573d6000803e3d6000fd5b505050505b505b61080d8161076385600454610a6090919063ffffffff16565b60049081556001600160a01b03808616600090815260016020819052604091829020018690555163286a276f60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169163bf16c3c291879161088e9164e8d4a510009161075d91879163a1a89dbc916106ea91309101610b59565b6040518363ffffffff1660e01b81526004016108ab929190610b87565b600060405180830381600087803b1580156108c557600080fd5b505af11580156108d9573d6000803e3d6000fd5b50505050836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8572960e25f62a888f92ba98fda1ca3cba3fc98b664e8ae79fdc97a644c7bae48386604051610942929190610d9c565b60405180910390a3505b5050505050565b60045490565b60045481565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038116600090815260016020819052604090912001545b919050565b6109ae610a6c565b506001600160a01b039081166000908152600160208181526040928390208351606081018552815460ff16151581529281015491830191909152600201549092169082015290565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000602081905290815260409020546001600160a01b031681565b6000610a418284610dfe565b9392505050565b6000610a418284610dde565b6000610a418284610e1d565b6000610a418284610dc6565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b03811681146109a157600080fd5b600060208284031215610ab4578081fd5b610a4182610a8c565b600060208284031215610ace578081fd5b81518015158114610a41578182fd5b600060208284031215610aee578081fd5b5051919050565b600080600080600060a08688031215610b0c578081fd5b853560ff81168114610b1c578182fd5b9450610b2a60208701610a8c565b9350610b3860408701610a8c565b925060608601359150610b4d60808701610a8c565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080835283518082850152825b81811015610bcc57858101830151858201604001528201610bb0565b81811115610bdd5783604083870101525b50601f01601f1916929092016040019392505050565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b60208082526017908201527f57726f6e672064656c656761746565206163636f756e74000000000000000000604082015260600190565b6020808252601d908201527f4f6e6c79207665726966696564206272696467652063616e2063616c6c000000604082015260600190565b6020808252601a908201527f426f756e6420627363206163636f756e74206469736d61746368000000000000604082015260600190565b6020808252600e908201526d15dc9bdb99c818da185a5b881a5960921b604082015260600190565b6020808252601d908201527f426f756e6420636f736d6f73206163636f756e74206469736d61746368000000604082015260600190565b815115158152602080830151908201526040918201516001600160a01b03169181019190915260600190565b90815260200190565b918252602082015260400190565b60ff9290921682526001600160a01b0316602082015260400190565b60008219821115610dd957610dd9610e6f565b500190565b600082610df957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e1857610e18610e6f565b500290565b600082821015610e2f57610e2f610e6f565b500390565b600281046001821680610e4857607f821691505b60208210811415610e6957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202b029e5f4489a9e4d7dc3f122358a9407c4d30ced986e0cc0f0babc38d149fba64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806388cc58e41161006657806388cc58e41461010857806394465b2114610110578063b3a7834d14610123578063c51db6b214610143578063e73df6741461014b5761009e565b806306fdde03146100a35780631e31d053146100c15780632b8509a7146100d657806338adb6f0146100eb578063567e98f914610100575b600080fd5b6100ab61015e565b6040516100b89190610ba0565b60405180910390f35b6100c96101ec565b6040516100b89190610b59565b6100e96100e4366004610af5565b6101fb565b005b6100f3610953565b6040516100b89190610d93565b6100f3610959565b6100c961095f565b6100f361011e366004610aa3565b610983565b610136610131366004610aa3565b6109a6565b6040516100b89190610d67565b6100c96109f6565b6100c9610159366004610aa3565b610a1a565b6002805461016b90610e34565b80601f016020809104026020016040519081016040528092919081815260200182805461019790610e34565b80156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b505050505081565b6003546001600160a01b031681565b6040516372923f6d60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e5247eda906102499088903390600401610daa565b60206040518083038186803b15801561026157600080fd5b505afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610abd565b6102be5760405162461bcd60e51b81526004016102b590610c9a565b60405180910390fd5b8460ff167f000000000000000000000000000000000000000000000000000000000000000060ff16146103035760405162461bcd60e51b81526004016102b590610d08565b6003546001600160a01b038581169116146103305760405162461bcd60e51b81526004016102b590610c63565b6001600160a01b0381811660009081526020819052604090205416158061037357506001600160a01b038181166000908152602081905260409020548116908416145b61038f5760405162461bcd60e51b81526004016102b590610cd1565b6001600160a01b03831660009081526001602081905260409091200154828114156103ba575061094c565b8281101561047a57604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a9061040e903090600401610b59565b60206040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610abd565b61047a5760405162461bcd60e51b81526004016102b590610c22565b6001600160a01b03841660009081526001602052604090205460ff166104f0576001600160a01b038085166000818152600160208181526040808420805460ff19169093178355600290920180549588166001600160a01b0319968716811790915583528290529020805490921617905561052f565b6001600160a01b0384811660009081526001602052604090206002015481169083161461052f5760405162461bcd60e51b81526004016102b590610d30565b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f29061059b907f000000000000000000000000000000000000000000000000000000000000000090600401610bf3565b600060405180830381600087803b1580156105b557600080fd5b505af11580156105c9573d6000803e3d6000fd5b505050506001600160a01b03841660009081526001602081905260409091200154156107f45760006107697f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630886040518363ffffffff1660e01b8152600401610642929190610b6d565b60206040518083038186803b15801561065a57600080fd5b505afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610add565b61076364e8d4a5100061075d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016106ea9190610b59565b60206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610add565b6001600160a01b038b166000908152600160208190526040909120015490610a35565b90610a48565b90610a54565b905080156107f257604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b7208906107bf9088908590600401610b87565b600060405180830381600087803b1580156107d957600080fd5b505af11580156107ed573d6000803e3d6000fd5b505050505b505b61080d8161076385600454610a6090919063ffffffff16565b60049081556001600160a01b03808616600090815260016020819052604091829020018690555163286a276f60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169163bf16c3c291879161088e9164e8d4a510009161075d91879163a1a89dbc916106ea91309101610b59565b6040518363ffffffff1660e01b81526004016108ab929190610b87565b600060405180830381600087803b1580156108c557600080fd5b505af11580156108d9573d6000803e3d6000fd5b50505050836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8572960e25f62a888f92ba98fda1ca3cba3fc98b664e8ae79fdc97a644c7bae48386604051610942929190610d9c565b60405180910390a3505b5050505050565b60045490565b60045481565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038116600090815260016020819052604090912001545b919050565b6109ae610a6c565b506001600160a01b039081166000908152600160208181526040928390208351606081018552815460ff16151581529281015491830191909152600201549092169082015290565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000602081905290815260409020546001600160a01b031681565b6000610a418284610dfe565b9392505050565b6000610a418284610dde565b6000610a418284610e1d565b6000610a418284610dc6565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b03811681146109a157600080fd5b600060208284031215610ab4578081fd5b610a4182610a8c565b600060208284031215610ace578081fd5b81518015158114610a41578182fd5b600060208284031215610aee578081fd5b5051919050565b600080600080600060a08688031215610b0c578081fd5b853560ff81168114610b1c578182fd5b9450610b2a60208701610a8c565b9350610b3860408701610a8c565b925060608601359150610b4d60808701610a8c565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080835283518082850152825b81811015610bcc57858101830151858201604001528201610bb0565b81811115610bdd5783604083870101525b50601f01601f1916929092016040019392505050565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b60208082526017908201527f57726f6e672064656c656761746565206163636f756e74000000000000000000604082015260600190565b6020808252601d908201527f4f6e6c79207665726966696564206272696467652063616e2063616c6c000000604082015260600190565b6020808252601a908201527f426f756e6420627363206163636f756e74206469736d61746368000000000000604082015260600190565b6020808252600e908201526d15dc9bdb99c818da185a5b881a5960921b604082015260600190565b6020808252601d908201527f426f756e6420636f736d6f73206163636f756e74206469736d61746368000000604082015260600190565b815115158152602080830151908201526040918201516001600160a01b03169181019190915260600190565b90815260200190565b918252602082015260400190565b60ff9290921682526001600160a01b0316602082015260400190565b60008219821115610dd957610dd9610e6f565b500190565b600082610df957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e1857610e18610e6f565b500290565b600082821015610e2f57610e2f610e6f565b500390565b600281046001821680610e4857607f821691505b60208210811415610e6957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202b029e5f4489a9e4d7dc3f122358a9407c4d30ced986e0cc0f0babc38d149fba64736f6c63430008000033",
  "immutableReferences": {
    "7912": [
      {
        "length": 32,
        "start": 530
      },
      {
        "length": 32,
        "start": 1395
      },
      {
        "length": 32,
        "start": 2401
      }
    ],
    "7916": [
      {
        "length": 32,
        "start": 985
      },
      {
        "length": 32,
        "start": 1350
      },
      {
        "length": 32,
        "start": 1526
      },
      {
        "length": 32,
        "start": 1696
      },
      {
        "length": 32,
        "start": 1928
      },
      {
        "length": 32,
        "start": 2112
      },
      {
        "length": 32,
        "start": 2281
      },
      {
        "length": 32,
        "start": 2552
      }
    ],
    "7920": [
      {
        "length": 32,
        "start": 708
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2363:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "76:117:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "86:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "101:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "95:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "95:13:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "171:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "180:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "183:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "173:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "173:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "173:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "130:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "141:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "156:3:67",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "161:1:67",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "152:3:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "152:11:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "165:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "148:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "148:19:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "137:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "137:31:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "127:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:42:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:50:67"
                  },
                  "nodeType": "YulIf",
                  "src": "117:2:67"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "55:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "66:5:67",
                "type": ""
              }
            ],
            "src": "14:179:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "258:102:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "268:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "283:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "277:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:13:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "268:5:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "312:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "323:5:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "330:4:67",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "319:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "319:16:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "309:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "309:27:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:35:67"
                  },
                  "nodeType": "YulIf",
                  "src": "299:2:67"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "237:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "248:5:67",
                "type": ""
              }
            ],
            "src": "198:162:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "505:1225:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "552:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "561:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "569:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "554:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "554:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "554:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "526:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "535:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "522:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "522:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "547:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "518:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "518:33:67"
                  },
                  "nodeType": "YulIf",
                  "src": "515:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "587:52:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "629:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "597:31:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:42:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "587:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "648:12:67",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "658:2:67",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "652:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "669:39:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "693:9:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "704:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "689:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "689:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "683:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:25:67"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "673:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "717:28:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "735:2:67",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "739:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "731:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "731:10:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "743:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "727:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:18:67"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "721:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "772:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "781:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "789:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "774:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "774:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "774:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "760:6:67"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "768:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "757:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "757:14:67"
                  },
                  "nodeType": "YulIf",
                  "src": "754:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "807:32:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "821:9:67"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "832:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "817:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:22:67"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "811:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "887:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "896:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "904:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "889:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "889:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "889:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "866:2:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "870:4:67",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "862:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "862:13:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "877:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "858:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "858:27:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "851:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "851:35:67"
                  },
                  "nodeType": "YulIf",
                  "src": "848:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "922:19:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "938:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "932:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "932:9:67"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "926:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "964:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "966:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "966:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "966:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "956:2:67"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "960:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "953:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:10:67"
                  },
                  "nodeType": "YulIf",
                  "src": "950:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "995:23:67",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1015:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1009:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:9:67"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "999:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1027:67:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1053:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1069:2:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1073:4:67",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1065:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1065:13:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1084:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1080:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1080:7:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1061:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1061:27:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1049:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1049:40:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1091:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1045:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1045:49:67"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1031:10:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1153:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1155:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1155:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1155:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1112:10:67"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1124:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1109:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1109:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1132:10:67"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1144:6:67"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1129:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1129:22:67"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1106:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:46:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1103:2:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1191:2:67",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1195:10:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1184:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1184:22:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1184:22:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1222:6:67"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1230:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1215:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:18:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1215:18:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1279:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1288:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1296:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1281:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1281:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1281:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1256:2:67"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1260:2:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1252:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1252:11:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1265:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1248:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1248:20:67"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1270:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1245:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1245:33:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1242:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1314:15:67",
                  "value": {
                    "name": "value1",
                    "nodeType": "YulIdentifier",
                    "src": "1323:6:67"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1318:1:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1384:83:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1413:6:67"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1421:1:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1409:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1409:14:67"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1425:2:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1405:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1405:23:67"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1444:2:67"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1448:1:67"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1440:3:67"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1440:10:67"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1452:2:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1436:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1436:19:67"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1430:5:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1430:26:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1398:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1398:59:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1398:59:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1349:1:67"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1352:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1346:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:9:67"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1356:19:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1358:15:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1367:1:67"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1370:2:67"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1363:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1363:10:67"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1358:1:67"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1342:3:67",
                    "statements": []
                  },
                  "src": "1338:129:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1497:64:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1526:6:67"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1534:2:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1522:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1522:15:67"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1539:2:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1518:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1518:24:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1544:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1511:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1511:40:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1511:40:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1482:1:67"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1485:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1479:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1479:9:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1476:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1570:16:67",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1580:6:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1570:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1595:59:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1639:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1650:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1635:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1635:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_uint8_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1605:29:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1605:49:67"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1595:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1663:61:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1709:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1720:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1705:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1705:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1673:31:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1673:51:67"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1663:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_uint8t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "447:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "458:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "470:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "478:6:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "486:6:67",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "494:6:67",
                "type": ""
              }
            ],
            "src": "365:1365:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1790:382:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1800:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1814:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1820:1:67",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1810:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1810:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1800:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1831:38:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1861:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1867:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1857:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1857:12:67"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1835:18:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1908:31:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1910:27:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1924:6:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1932:4:67",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1920:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1920:17:67"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1910:6:67"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1888:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1881:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1881:26:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1878:2:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1998:168:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2019:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2022:77:67",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2012:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2012:88:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2012:88:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2120:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2123:4:67",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2113:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2113:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2113:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2148:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2151:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2141:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2141:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2141:15:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1954:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1977:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1985:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1974:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1974:14:67"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1951:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1951:38:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1948:2:67"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1770:4:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1779:6:67",
                "type": ""
              }
            ],
            "src": "1735:437:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2209:152:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2226:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2229:77:67",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2219:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2219:88:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2219:88:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2323:1:67",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2326:4:67",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2316:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2316:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2316:15:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2347:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2350:4:67",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2340:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2340:15:67"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2177:184:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint8t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value1)\n        }\n        value1 := memPtr\n        value2 := abi_decode_t_uint8_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_address_fromMemory(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7802:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:67",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:67",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:67"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:67"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:67",
                "type": ""
              }
            ],
            "src": "14:175:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:67",
                "type": ""
              }
            ],
            "src": "194:198:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "475:219:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "521:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "530:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "538:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "523:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "523:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "523:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "496:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "505:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "492:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "492:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "488:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "485:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "556:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "575:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "569:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "569:16:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "560:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "647:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "655:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "640:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "640:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "640:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "607:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "628:5:67"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "621:6:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "621:13:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "614:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "614:21:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "604:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "597:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:40:67"
                  },
                  "nodeType": "YulIf",
                  "src": "594:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "673:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "683:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "673:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "441:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "452:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "464:6:67",
                "type": ""
              }
            ],
            "src": "397:297:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:113:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "877:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "871:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:16:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "746:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "757:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "769:6:67",
                "type": ""
              }
            ],
            "src": "699:194:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1034:451:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1081:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1090:6:67"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1098:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1083:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1083:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1083:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1055:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1064:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1051:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1051:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1076:3:67",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1047:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1047:33:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1044:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1116:36:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1142:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1129:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1129:23:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1120:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1200:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1209:6:67"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1217:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1202:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1202:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1202:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1174:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1185:5:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1192:4:67",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1181:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1181:16:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1171:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:27:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1164:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1164:35:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1161:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1235:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1245:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1235:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1259:50:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1294:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1305:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1290:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1290:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1269:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1269:40:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1259:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1318:50:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1353:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1364:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1349:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1349:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1328:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1328:40:67"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1318:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1377:42:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1404:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1415:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1400:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1400:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1387:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:32:67"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1377:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1428:51:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1463:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1474:3:67",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1459:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1459:19:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1438:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:41:67"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1428:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_addresst_addresst_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "968:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "979:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "991:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "999:6:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1007:6:67",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1015:6:67",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1023:6:67",
                "type": ""
              }
            ],
            "src": "898:587:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1591:102:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1601:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1613:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1624:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1609:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1609:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1601:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1643:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1658:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1674:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1679:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1670:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1670:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1683:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1666:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1666:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1654:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1654:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1636:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1636:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1636:51:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1560:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1571:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1582:4:67",
                "type": ""
              }
            ],
            "src": "1490:203:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1827:175:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1837:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1849:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1860:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1845:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1837:4:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1872:29:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1890:3:67",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1895:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1886:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1886:11:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1899:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:19:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1876:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1917:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1932:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1940:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1928:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1928:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1910:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1910:34:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1964:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1975:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1960:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1960:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1984:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1992:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1980:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1980:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1953:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1953:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1953:43:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1788:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1799:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1807:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1818:4:67",
                "type": ""
              }
            ],
            "src": "1698:304:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2136:145:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2146:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2158:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2169:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2154:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2154:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2146:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2188:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2203:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2219:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2224:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2215:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2215:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2228:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2211:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2211:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2199:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2199:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2181:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2181:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2181:51:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2252:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2263:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2248:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2248:18:67"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2268:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2241:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2241:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2241:34:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2097:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2108:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2116:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2127:4:67",
                "type": ""
              }
            ],
            "src": "2007:274:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2407:482:67",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2417:12:67",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2427:2:67",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2421:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2445:9:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2456:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2438:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2438:21:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2468:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2488:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2482:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2482:13:67"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2472:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2515:9:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2526:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2511:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2511:18:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2531:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2504:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2504:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2504:34:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2547:13:67",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "2556:4:67"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2551:1:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2619:90:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2648:9:67"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2659:1:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2644:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2644:17:67"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2663:2:67",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2640:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2640:26:67"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2682:6:67"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2690:1:67"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2678:3:67"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2678:14:67"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2694:2:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2674:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2674:23:67"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2668:5:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2668:30:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2633:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2633:66:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2633:66:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2580:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2583:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2577:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2577:13:67"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2591:19:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2593:15:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2602:1:67"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2605:2:67"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2598:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2598:10:67"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2593:1:67"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2573:3:67",
                    "statements": []
                  },
                  "src": "2569:140:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2743:69:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2772:9:67"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2783:6:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2768:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2768:22:67"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2792:2:67",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2764:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2764:31:67"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2797:4:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2757:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2757:45:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2757:45:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2724:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2727:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2721:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2721:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2718:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2821:62:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2837:9:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2856:6:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2864:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2852:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2852:15:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2873:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2869:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2869:7:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2848:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2848:29:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2833:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2833:45:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2880:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2829:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2829:54:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2821:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2376:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2387:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2398:4:67",
                "type": ""
              }
            ],
            "src": "2286:603:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3096:225:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3113:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3124:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3106:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3106:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3106:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3147:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3158:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3143:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3143:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3163:1:67",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3136:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:29:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3136:29:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3185:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3196:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3181:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3181:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3201:6:67",
                        "type": "",
                        "value": "USER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3174:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3174:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3174:34:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3217:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3229:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3240:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3225:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3225:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3217:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3264:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3275:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3260:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3260:20:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3286:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3302:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3307:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3298:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3298:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3311:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3294:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3294:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3282:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3282:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3253:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3253:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3253:62:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3065:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3076:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3087:4:67",
                "type": ""
              }
            ],
            "src": "2894:427:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3500:223:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3517:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3528:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3510:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3510:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3510:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3551:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3562:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3547:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3547:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3567:2:67",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3540:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3540:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3540:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3590:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3601:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3586:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3586:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3606:34:67",
                        "type": "",
                        "value": "Can not deposit to a closed pool"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3579:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3579:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3579:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3661:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3672:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3657:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3657:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3677:3:67",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3650:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3650:31:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3650:31:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3690:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3702:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3713:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3698:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3690:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3477:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3491:4:67",
                "type": ""
              }
            ],
            "src": "3326:397:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3902:173:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3919:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3930:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3912:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3912:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3912:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3953:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3964:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3949:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3949:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3969:2:67",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3942:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3942:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3942:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3992:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4003:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3988:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3988:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4008:25:67",
                        "type": "",
                        "value": "Wrong delegatee account"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3981:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3981:53:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3981:53:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4043:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4055:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4066:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4051:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4051:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4043:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3879:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3893:4:67",
                "type": ""
              }
            ],
            "src": "3728:347:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4254:179:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4271:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4282:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4264:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4264:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4264:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4305:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4316:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4301:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4301:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4321:2:67",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4294:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4294:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4344:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4355:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4340:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4340:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4360:31:67",
                        "type": "",
                        "value": "Only verified bridge can call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4333:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4333:59:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4333:59:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4401:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4413:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4424:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4409:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4409:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4401:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4231:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4245:4:67",
                "type": ""
              }
            ],
            "src": "4080:353:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4612:176:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4629:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4640:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4622:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4622:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4622:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4663:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4674:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4659:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4659:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4679:2:67",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4652:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4652:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4652:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4702:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4713:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4698:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4698:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4718:28:67",
                        "type": "",
                        "value": "Bound bsc account dismatch"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4691:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4691:56:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4691:56:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4756:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4768:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4779:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4764:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4764:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4756:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4589:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4603:4:67",
                "type": ""
              }
            ],
            "src": "4438:350:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4967:164:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4984:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4995:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4977:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4977:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4977:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5018:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5029:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5014:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5014:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5034:2:67",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5007:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5007:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5007:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5057:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5068:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5053:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5053:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5073:16:67",
                        "type": "",
                        "value": "Wrong chain id"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5046:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5046:44:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5046:44:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5099:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5111:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5122:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5107:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5107:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5099:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4944:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4958:4:67",
                "type": ""
              }
            ],
            "src": "4793:338:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5310:179:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5327:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5338:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5320:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5320:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5320:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5361:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5372:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5357:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5357:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5377:2:67",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5350:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5350:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5350:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5400:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5411:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5396:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5396:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5416:31:67",
                        "type": "",
                        "value": "Bound cosmos account dismatch"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5389:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5389:59:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5389:59:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5457:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5469:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5480:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5465:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5465:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5457:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c611608eaac0c2321c98c0920e24d27d55374bb72a04940ddf1879fbb22fdc10__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5287:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5301:4:67",
                "type": ""
              }
            ],
            "src": "5136:353:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5653:251:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5663:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5675:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5686:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5671:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5671:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5663:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5705:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5736:6:67"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5730:5:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5730:13:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5723:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5723:21:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5716:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5716:29:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5698:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5698:48:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5698:48:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5766:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5777:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5762:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5762:20:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5794:6:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5802:4:67",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5790:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5790:17:67"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5784:5:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5784:24:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5755:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5755:54:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5755:54:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5829:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5840:4:67",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5825:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5825:20:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5861:6:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5869:4:67",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5857:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5857:17:67"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5851:5:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5851:24:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5885:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5890:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5881:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5881:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5894:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5877:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5877:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5847:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5847:50:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5818:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5818:80:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5818:80:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_StakingInfo_$7901_memory_ptr__to_t_struct$_StakingInfo_$7901_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5622:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5633:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5644:4:67",
                "type": ""
              }
            ],
            "src": "5494:410:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6010:76:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6020:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6032:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6043:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6028:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6028:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6020:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6062:9:67"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6073:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6055:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6055:25:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6055:25:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5979:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5990:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6001:4:67",
                "type": ""
              }
            ],
            "src": "5909:177:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6220:119:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6230:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6242:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6253:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6238:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6238:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6230:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6272:9:67"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6283:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6265:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6265:25:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6265:25:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6310:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6321:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6306:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6306:18:67"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6326:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6299:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6299:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6299:34:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6181:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6192:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6200:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6211:4:67",
                "type": ""
              }
            ],
            "src": "6091:248:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6469:156:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6479:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6491:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6502:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6487:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6487:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6479:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6521:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6536:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6544:4:67",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6532:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6532:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6514:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6514:36:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6514:36:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6570:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6581:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6566:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6566:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6590:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6606:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6611:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6602:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6602:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6615:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6598:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6598:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6586:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6586:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6559:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6559:60:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6559:60:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8_t_address__to_t_uint8_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6430:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6441:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6449:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6460:4:67",
                "type": ""
              }
            ],
            "src": "6344:281:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6678:80:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6705:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6707:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6707:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6707:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6694:1:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6701:1:67"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6697:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6697:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6691:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6691:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "6688:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6736:16:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6747:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6750:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6743:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6743:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6736:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6661:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6664:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6670:3:67",
                "type": ""
              }
            ],
            "src": "6630:128:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6809:171:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6840:111:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "6861:1:67"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6868:3:67",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6873:10:67",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6864:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6864:20:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6854:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6854:31:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6854:31:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6905:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6908:4:67",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6898:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6898:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6898:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "6933:1:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6936:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6926:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6926:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6926:15:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6829:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6822:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6822:9:67"
                  },
                  "nodeType": "YulIf",
                  "src": "6819:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6960:14:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6969:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6972:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6965:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6965:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6960:1:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6794:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6797:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6803:1:67",
                "type": ""
              }
            ],
            "src": "6763:217:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7037:116:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7096:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7098:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7098:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7098:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7068:1:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7061:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7061:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7054:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7054:17:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7076:1:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7087:1:67",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7083:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7083:6:67"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7091:1:67"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7079:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7079:14:67"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7073:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7073:21:67"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7050:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7050:45:67"
                  },
                  "nodeType": "YulIf",
                  "src": "7047:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7127:20:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7142:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7145:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7138:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7138:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7127:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7016:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7019:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7025:7:67",
                "type": ""
              }
            ],
            "src": "6985:168:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7207:76:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7229:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7231:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7231:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7231:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7223:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7226:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7220:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7220:8:67"
                  },
                  "nodeType": "YulIf",
                  "src": "7217:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7260:17:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7272:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7275:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7268:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7268:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7260:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7189:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7192:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7198:4:67",
                "type": ""
              }
            ],
            "src": "7158:125:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7343:325:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7353:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7367:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7373:1:67",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7363:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7363:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7353:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7384:38:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7414:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7420:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7410:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7410:12:67"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7388:18:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7461:31:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7463:27:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7477:6:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7485:4:67",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7473:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7473:17:67"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7463:6:67"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7441:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7434:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7434:26:67"
                  },
                  "nodeType": "YulIf",
                  "src": "7431:2:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7551:111:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7572:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7579:3:67",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7584:10:67",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7575:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7575:20:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7565:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7565:31:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7565:31:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7616:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7619:4:67",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7609:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7609:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7609:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7644:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7647:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7637:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7637:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7637:15:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7507:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7530:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7538:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7527:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7527:14:67"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7504:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7504:38:67"
                  },
                  "nodeType": "YulIf",
                  "src": "7501:2:67"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7323:4:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7332:6:67",
                "type": ""
              }
            ],
            "src": "7288:380:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7705:95:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7722:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7729:3:67",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7734:10:67",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7725:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7725:20:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7715:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7715:31:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7715:31:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7762:1:67",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7765:4:67",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7755:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7755:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7755:15:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7786:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7789:4:67",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7779:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7779:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7779:15:67"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7673:127:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8t_addresst_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value4, value4) }\n        value0 := value\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_t_address(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 4)\n        mstore(add(headStart, 96), \"USER\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Can not deposit to a closed pool\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Wrong delegatee account\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only verified bridge can call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Bound bsc account dismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Wrong chain id\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c611608eaac0c2321c98c0920e24d27d55374bb72a04940ddf1879fbb22fdc10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Bound cosmos account dismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_StakingInfo_$7901_memory_ptr__to_t_struct$_StakingInfo_$7901_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(mload(value0))))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint8_t_address__to_t_uint8_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "387:4612:17:-:0;;;1771:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1880:10;1870:20;;;;;;1900:22;;;-1:-1:-1;;1900:22:17;;;1932:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1954:9:17;:22;;-1:-1:-1;;;;;;1954:22:17;-1:-1:-1;;;;;1954:22:17;;;;;;;;;;1986:18;;-1:-1:-1;;;;;;1986:18:17;;;-1:-1:-1;387:4612:17;;-1:-1:-1;387:4612:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:4612:17;;;-1:-1:-1;387:4612:17;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:67;95:13;;-1:-1:-1;;;;;137:31:67;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:162::-;277:13;;330:4;319:16;;309:27;;299:2;;350:1;347;340:12;365:1365;;;;;547:3;535:9;526:7;522:23;518:33;515:2;;;569:6;561;554:22;515:2;597:42;629:9;597:42;:::i;:::-;658:2;689:18;;;683:25;587:52;;-1:-1:-1;658:2:67;-1:-1:-1;757:14:67;;;754:2;;;789:6;781;774:22;754:2;832:6;821:9;817:22;807:32;;877:7;870:4;866:2;862:13;858:27;848:2;;904:6;896;889:22;848:2;938;932:9;960:2;956;953:10;950:2;;;966:18;;:::i;:::-;1015:2;1009:9;-1:-1:-1;;1084:2:67;1065:13;;1061:27;1049:40;;1045:49;;1129:22;;;1109:18;;;1106:46;1103:2;;;1155:18;;:::i;:::-;1191:2;1184:22;1215:18;;;1252:11;;;1248:20;;1245:33;-1:-1:-1;1242:2:67;;;1296:6;1288;1281:22;1242:2;1323:6;1314:15;;1338:129;1352:2;1349:1;1346:9;1338:129;;;1440:10;;;1436:19;;1430:26;1409:14;;;1405:23;;1398:59;1363:10;;;;1338:129;;;1485:2;1482:1;1479:9;1476:2;;;1544:6;1539:2;1534;1526:6;1522:15;1518:24;1511:40;1476:2;1580:6;1570:16;;;;;;;1605:49;1650:2;1639:9;1635:18;1605:49;:::i;:::-;1595:59;;1673:51;1720:2;1709:9;1705:18;1673:51;:::i;:::-;1663:61;;505:1225;;;;;;;:::o;1735:437::-;1820:1;1810:12;;1867:1;1857:12;;;1878:2;;1932:4;1924:6;1920:17;1910:27;;1878:2;1985;1977:6;1974:14;1954:18;1951:38;1948:2;;;-1:-1:-1;;;2019:1:67;2012:88;2123:4;2120:1;2113:15;2151:4;2148:1;2141:15;1948:2;;1790:382;;;:::o;2177:184::-;-1:-1:-1;;;2226:1:67;2219:88;2326:4;2323:1;2316:15;2350:4;2347:1;2340:15;2209:152;387:4612:17;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "387:4612:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1195:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1456:24;;;:::i;:::-;;;;;;;:::i;2017:2302::-;;;;;;:::i;:::-;;:::i;:::-;;4695:142;;;:::i;:::-;;;;;;;:::i;1577:32::-;;;:::i;4325:94::-;;;:::i;4529:160::-;;;;;;:::i;:::-;;:::i;4843:154::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4425:98::-;;;:::i;765:49::-;;;;;;:::i;:::-;;:::i;1195:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1456:24::-;;;-1:-1:-1;;;;;1456:24:17;;:::o;2017:2302::-;2199:60;;-1:-1:-1;;;2199:60:17;;2220:7;-1:-1:-1;;;;;2199:38:17;;;;:60;;2238:8;;2248:10;;2199:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2191:102;;;;-1:-1:-1;;;2191:102:17;;;;;;;:::i;:::-;;;;;;;;;2322:8;2311:19;;:7;:19;;;2303:46;;;;-1:-1:-1;;;2303:46:17;;;;;;;:::i;:::-;2367:9;;-1:-1:-1;;;;;2367:23:17;;;:9;;:23;2359:59;;;;-1:-1:-1;;;2359:59:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;2436:28:17;;;2476:1;2436:28;;;;;;;;;;;;:42;;:87;;-1:-1:-1;;;;;;2482:28:17;;;:14;:28;;;;;;;;;;;:41;;;:28;;:41;2436:87;2428:126;;;;-1:-1:-1;;;2428:126:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;2586:22:17;;2565:18;2586:22;;;-1:-1:-1;2586:22:17;;;;;;;;:29;;2629:20;;;2625:33;;;2651:7;;;2625:33;2684:6;2671:10;:19;2667:167;;;2737:48;;-1:-1:-1;;;2737:48:17;;2748:9;-1:-1:-1;;;;;2737:33:17;;;;:48;;2779:4;;2737:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2729:94;;;;-1:-1:-1;;;2729:94:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;2915:22:17;;;;;;-1:-1:-1;2915:22:17;;;;;:35;;;2910:378;;-1:-1:-1;;;;;2966:22:17;;;;;;;-1:-1:-1;2966:22:17;;;;;;;;:42;;-1:-1:-1;;2966:42:17;;;;;;3022:34;;;;:49;;;;;-1:-1:-1;;;;;;3022:49:17;;;;;;;;3085:28;;;;;;;:40;;;;;;;;2910:378;;;-1:-1:-1;;;;;3164:22:17;;;;;;;-1:-1:-1;3164:22:17;;;;;:34;;;:50;;;:34;;:50;3156:121;;;;-1:-1:-1;;;3156:121:17;;;;;;;:::i;:::-;3406:50;;-1:-1:-1;;;3406:50:17;;3417:9;-1:-1:-1;;;;;3406:33:17;;;;:50;;3448:7;;3406:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;3471:22:17;;3503:1;3471:22;;;-1:-1:-1;3471:22:17;;;;;;;;:29;;:33;3467:429;;3704:59;;-1:-1:-1;;;3704:59:17;;3520:15;;3538:226;;-1:-1:-1;;;;;3715:9:17;3704:33;;;;:59;;3746:4;;3753:9;;3704:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3606:48;;-1:-1:-1;;;3606:48:17;;3538:144;;3677:4;;3538:117;;-1:-1:-1;;;;;3617:9:17;3606:33;;;;:48;;3648:4;;3606:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3538:22:17;;;;;;-1:-1:-1;3538:22:17;;;;;;;;:46;;;:67;:117::i;:::-;:138;;:144::i;:::-;:165;;:226::i;:::-;3520:244;-1:-1:-1;3782:11:17;;3778:108;;3813:58;;-1:-1:-1;;;3813:58:17;;3824:9;-1:-1:-1;;;;;3813:38:17;;;;:58;;3852:9;;3863:7;;3813:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3778:108;3467:429;;3926:45;3960:10;3926:29;3948:6;3926:17;;:21;;:29;;;;:::i;:45::-;3906:17;:65;;;-1:-1:-1;;;;;3981:22:17;;;;;;;-1:-1:-1;3981:22:17;;;;;;;;;:29;:38;;;4160:48;-1:-1:-1;;;4160:48:17;;4041:9;4030:33;;;;;;3981:22;;4100:132;;4227:4;;4100:109;;4030:33;;4160;;:48;;4202:4;;4160:48;;:::i;4100:132::-;4030:203;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4257:55:17;;-1:-1:-1;;;;;4257:55:17;;;;-1:-1:-1;4271:9:17;4257:55;;-1:-1:-1;4257:55:17;;;;4293:10;;4305:6;;4257:55;:::i;:::-;;;;;;;;2017:2302;;;;;;;:::o;4695:142::-;4813:17;;4695:142;:::o;1577:32::-;;;;:::o;4325:94::-;4405:7;4325:94;:::o;4529:160::-;-1:-1:-1;;;;;4658:17:17;;4628:7;4658:17;;;-1:-1:-1;4658:17:17;;;;;;;;:24;;4529:160;;;;:::o;4843:154::-;4932:18;;:::i;:::-;-1:-1:-1;;;;;;4973:17:17;;;;;;;-1:-1:-1;4973:17:17;;;;;;;;;4966:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4843:154::o;4425:98::-;4507:9;4425:98;:::o;765:49::-;;;;;;;;;;;;;-1:-1:-1;;;;;765:49:17;;:::o;3465:96:63:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:63:o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:175:67:-;84:20;;-1:-1:-1;;;;;133:31:67;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:297::-;;517:2;505:9;496:7;492:23;488:32;485:2;;;538:6;530;523:22;485:2;575:9;569:16;628:5;621:13;614:21;607:5;604:32;594:2;;655:6;647;640:22;699:194;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;-1:-1:-1;871:16:67;;780:113;-1:-1:-1;780:113:67:o;898:587::-;;;;;;1076:3;1064:9;1055:7;1051:23;1047:33;1044:2;;;1098:6;1090;1083:22;1044:2;1142:9;1129:23;1192:4;1185:5;1181:16;1174:5;1171:27;1161:2;;1217:6;1209;1202:22;1161:2;1245:5;-1:-1:-1;1269:40:67;1305:2;1290:18;;1269:40;:::i;:::-;1259:50;;1328:40;1364:2;1353:9;1349:18;1328:40;:::i;:::-;1318:50;;1415:2;1404:9;1400:18;1387:32;1377:42;;1438:41;1474:3;1463:9;1459:19;1438:41;:::i;:::-;1428:51;;1034:451;;;;;;;;:::o;1490:203::-;-1:-1:-1;;;;;1654:32:67;;;;1636:51;;1624:2;1609:18;;1591:102::o;1698:304::-;-1:-1:-1;;;;;1928:15:67;;;1910:34;;1980:15;;1975:2;1960:18;;1953:43;1860:2;1845:18;;1827:175::o;2007:274::-;-1:-1:-1;;;;;2199:32:67;;;;2181:51;;2263:2;2248:18;;2241:34;2169:2;2154:18;;2136:145::o;2286:603::-;;2427:2;2456;2445:9;2438:21;2488:6;2482:13;2531:6;2526:2;2515:9;2511:18;2504:34;2556:4;2569:140;2583:6;2580:1;2577:13;2569:140;;;2678:14;;;2674:23;;2668:30;2644:17;;;2663:2;2640:26;2633:66;2598:10;;2569:140;;;2727:6;2724:1;2721:13;2718:2;;;2797:4;2792:2;2783:6;2772:9;2768:22;2764:31;2757:45;2718:2;-1:-1:-1;2873:2:67;2852:15;-1:-1:-1;;2848:29:67;2833:45;;;;2880:2;2829:54;;2407:482;-1:-1:-1;;;2407:482:67:o;2894:427::-;3124:2;3106:21;;;3163:1;3143:18;;;3136:29;-1:-1:-1;;;3196:2:67;3181:18;;3174:34;-1:-1:-1;;;;;3282:32:67;;;;3275:4;3260:20;;3253:62;3240:3;3225:19;;3096:225::o;3326:397::-;3528:2;3510:21;;;3567:2;3547:18;;;3540:30;3606:34;3601:2;3586:18;;3579:62;-1:-1:-1;;;3672:2:67;3657:18;;3650:31;3713:3;3698:19;;3500:223::o;3728:347::-;3930:2;3912:21;;;3969:2;3949:18;;;3942:30;4008:25;4003:2;3988:18;;3981:53;4066:2;4051:18;;3902:173::o;4080:353::-;4282:2;4264:21;;;4321:2;4301:18;;;4294:30;4360:31;4355:2;4340:18;;4333:59;4424:2;4409:18;;4254:179::o;4438:350::-;4640:2;4622:21;;;4679:2;4659:18;;;4652:30;4718:28;4713:2;4698:18;;4691:56;4779:2;4764:18;;4612:176::o;4793:338::-;4995:2;4977:21;;;5034:2;5014:18;;;5007:30;-1:-1:-1;;;5068:2:67;5053:18;;5046:44;5122:2;5107:18;;4967:164::o;5136:353::-;5338:2;5320:21;;;5377:2;5357:18;;;5350:30;5416:31;5411:2;5396:18;;5389:59;5480:2;5465:18;;5310:179::o;5494:410::-;5730:13;;5723:21;5716:29;5698:48;;5802:4;5790:17;;;5784:24;5762:20;;;5755:54;5869:4;5857:17;;;5851:24;-1:-1:-1;;;;;5847:50:67;5825:20;;;5818:80;;;;5686:2;5671:18;;5653:251::o;5909:177::-;6055:25;;;6043:2;6028:18;;6010:76::o;6091:248::-;6265:25;;;6321:2;6306:18;;6299:34;6253:2;6238:18;;6220:119::o;6344:281::-;6544:4;6532:17;;;;6514:36;;-1:-1:-1;;;;;6586:32:67;6581:2;6566:18;;6559:60;6502:2;6487:18;;6469:156::o;6630:128::-;;6701:1;6697:6;6694:1;6691:13;6688:2;;;6707:18;;:::i;:::-;-1:-1:-1;6743:9:67;;6678:80::o;6763:217::-;;6829:1;6819:2;;-1:-1:-1;;;6854:31:67;;6908:4;6905:1;6898:15;6936:4;6854:31;6926:15;6819:2;-1:-1:-1;6965:9:67;;6809:171::o;6985:168::-;;7091:1;7087;7083:6;7079:14;7076:1;7073:21;7068:1;7061:9;7054:17;7050:45;7047:2;;;7098:18;;:::i;:::-;-1:-1:-1;7138:9:67;;7037:116::o;7158:125::-;;7226:1;7223;7220:8;7217:2;;;7231:18;;:::i;:::-;-1:-1:-1;7268:9:67;;7207:76::o;7288:380::-;7373:1;7363:12;;7420:1;7410:12;;;7431:2;;7485:4;7477:6;7473:17;7463:27;;7431:2;7538;7530:6;7527:14;7507:18;7504:38;7501:2;;;7584:10;7579:3;7575:20;7572:1;7565:31;7619:4;7616:1;7609:15;7647:4;7644:1;7637:15;7501:2;;7343:325;;;:::o;7673:127::-;7734:10;7729:3;7725:20;7722:1;7715:31;7765:4;7762:1;7755:15;7789:4;7786:1;7779:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"../../interfaces/ICommunity.sol\";\nimport \"../../interfaces/IPool.sol\";\nimport \"./CosmosStakingFactory.sol\";\n\n/**\n * @dev Template contract of Atom staking pool.\n * Delegation only can be updated through update() by bridge.\n *\n */\ncontract CosmosStaking is IPool {\n    using SafeMath for uint256;\n\n    struct StakingInfo {\n        // First time when user staking, we need set options like userDebt to zero\n        bool hasDeposited;\n        // User staked amount\n        uint256 amount;\n        // User's foreign account identity\n        address bindAccount;\n    }\n\n    // fetch address use bound account\n    mapping(address => address) public accountBindMap;\n\n    // stakingInfo used to save every user's staking information,\n    // including how many they deposited and its external chain account\n    // ( we support crosschain asset staking). With every staking event\n    // happened including deposit and withdraw asset this field should be updated.\n    mapping(address => StakingInfo) stakingInfo;\n\n    address immutable factory;\n    string public name;\n\n    // community that pool belongs to\n    address immutable community;\n    // delegatee account,the pubkey of cosmos is bytes20, so here encode it to address\n    // It should be convert to specify format to the corresponding blockchain\n    address public delegatee;\n    // chain id: atom: 3  osmo: 4\n    uint8 immutable chainId;\n\n    // Total staked amount\n    uint256 public totalStakedAmount;\n\n    event UpdateStaking(\n        address indexed community,\n        address indexed who,\n        uint256 previousAmount,\n        uint256 newAmount\n    );\n\n    constructor(address _community, string memory _name, uint8 _chainId, address _delegatee) {\n        factory = msg.sender;\n        community = _community;\n        name = _name;\n        delegatee = _delegatee;\n        chainId = _chainId;\n    }\n\n    function update(\n        uint8 _chainId,\n        address _delegatee,\n        address depositor,\n        uint256 amount,\n        address _bindAccount\n    ) external {\n        require(CosmosStakingFactory(factory).isBridge(_chainId, msg.sender), \"Only verified bridge can call\");\n        require(chainId == _chainId, \"Wrong chain id\");\n        require(delegatee == _delegatee, \"Wrong delegatee account\");\n        require(accountBindMap[_bindAccount] == address(0) || accountBindMap[_bindAccount] == depositor, \"Bound bsc account dismatch\");\n\n        uint256 prevAmount = stakingInfo[depositor].amount;\n        if (prevAmount == amount) return;\n        if (prevAmount < amount) {\n            // deposit\n            require(ICommunity(community).poolActived(address(this)), 'Can not deposit to a closed pool.');\n        }\n\n        // Add to staking list if account hasn't deposited before\n        if (!stakingInfo[depositor].hasDeposited) {\n            stakingInfo[depositor].hasDeposited = true;\n            stakingInfo[depositor].bindAccount = _bindAccount;\n            accountBindMap[_bindAccount] = depositor;\n        } else {\n            require(stakingInfo[depositor].bindAccount == _bindAccount,\n                \"Bound cosmos account dismatch\"\n            );\n        }\n\n        // trigger community update all pool staking info, send factory as fee payer to ignore fee payment.\n        ICommunity(community).updatePools(\"USER\", factory);\n\n        if (stakingInfo[depositor].amount > 0) {\n            uint256 pending = stakingInfo[depositor]\n                .amount\n                .mul(ICommunity(community).getShareAcc(address(this)))\n                .div(1e12)\n                .sub(ICommunity(community).getUserDebt(address(this), depositor));\n            if (pending > 0) {\n                ICommunity(community).appendUserReward(depositor, pending);\n            }\n        }\n\n        totalStakedAmount = totalStakedAmount.add(amount).sub(prevAmount);\n        stakingInfo[depositor].amount = amount;\n\n        ICommunity(community).setUserDebt(\n            depositor,\n            stakingInfo[depositor]\n            .amount\n            .mul(ICommunity(community).getShareAcc(address(this)))\n            .div(1e12));\n        \n        emit UpdateStaking(community, depositor, prevAmount, amount);\n    }\n\n    function getFactory() external view override returns (address) {\n        return factory;\n    }\n\n    function getCommunity() external view override returns (address) {\n        return community;\n    }\n\n    function getUserStakedAmount(address user)\n        external\n        view\n        override returns (uint256)\n    {\n        return stakingInfo[user].amount;\n    }\n\n    function getTotalStakedAmount()\n        external\n        view\n        override returns (uint256)\n    {\n        return totalStakedAmount;\n    }\n\n    function getUserDepositInfo(address user)\n        external\n        view\n        returns (StakingInfo memory)\n    {\n        return stakingInfo[user];\n    }\n}\n",
  "sourcePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/cosmos-atom/CosmosStaking.sol",
  "ast": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/cosmos-atom/CosmosStaking.sol",
    "exportedSymbols": {
      "AccessControl": [
        11986
      ],
      "AccessControlEnumerable": [
        12111
      ],
      "ArbSys": [
        11427
      ],
      "BytesLib": [
        17964
      ],
      "Community": [
        2000
      ],
      "CommunityFactory": [
        2258
      ],
      "Context": [
        15470
      ],
      "CosmosStaking": [
        8257
      ],
      "CosmosStakingFactory": [
        8465
      ],
      "ERC165": [
        15723
      ],
      "ERC20": [
        14798
      ],
      "ERC20Burnable": [
        14920
      ],
      "ERC20Helper": [
        2481
      ],
      "ERC20Pausable": [
        14957
      ],
      "ERC20PresetMinterPauser": [
        15118
      ],
      "EnumerableSet": [
        17631
      ],
      "IAccessControl": [
        12184
      ],
      "IAccessControlEnumerable": [
        12209
      ],
      "ICalculator": [
        11466
      ],
      "ICommittee": [
        11537
      ],
      "ICommunity": [
        11591
      ],
      "ICommunityTokenFactory": [
        11603
      ],
      "IERC165": [
        15735
      ],
      "IERC20": [
        14876
      ],
      "IERC20Metadata": [
        14982
      ],
      "IGauge": [
        11627
      ],
      "IPool": [
        11654
      ],
      "IPoolFactory": [
        11670
      ],
      "Math": [
        16601
      ],
      "MintableERC20": [
        7480
      ],
      "Ownable": [
        12322
      ],
      "Pausable": [
        12430
      ],
      "SafeMath": [
        16913
      ],
      "SignedMath": [
        17018
      ],
      "Strings": [
        15699
      ]
    },
    "id": 8258,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7883,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:17"
      },
      {
        "id": 7884,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7885,
        "nodeType": "ImportDirective",
        "scope": 8258,
        "sourceUnit": 16914,
        "src": "91:57:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunity.sol",
        "file": "../../interfaces/ICommunity.sol",
        "id": 7886,
        "nodeType": "ImportDirective",
        "scope": 8258,
        "sourceUnit": 11592,
        "src": "149:41:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPool.sol",
        "file": "../../interfaces/IPool.sol",
        "id": 7887,
        "nodeType": "ImportDirective",
        "scope": 8258,
        "sourceUnit": 11655,
        "src": "191:36:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/cosmos-atom/CosmosStakingFactory.sol",
        "file": "./CosmosStakingFactory.sol",
        "id": 7888,
        "nodeType": "ImportDirective",
        "scope": 8258,
        "sourceUnit": 8466,
        "src": "228:36:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7890,
              "name": "IPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11654,
              "src": "413:5:17"
            },
            "id": 7891,
            "nodeType": "InheritanceSpecifier",
            "src": "413:5:17"
          }
        ],
        "contractDependencies": [
          11654
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7889,
          "nodeType": "StructuredDocumentation",
          "src": "266:120:17",
          "text": " @dev Template contract of Atom staking pool.\n Delegation only can be updated through update() by bridge."
        },
        "fullyImplemented": true,
        "id": 8257,
        "linearizedBaseContracts": [
          8257,
          11654
        ],
        "name": "CosmosStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7894,
            "libraryName": {
              "id": 7892,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16913,
              "src": "431:8:17"
            },
            "nodeType": "UsingForDirective",
            "src": "425:27:17",
            "typeName": {
              "id": 7893,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "444:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "CosmosStaking.StakingInfo",
            "id": 7901,
            "members": [
              {
                "constant": false,
                "id": 7896,
                "mutability": "mutable",
                "name": "hasDeposited",
                "nodeType": "VariableDeclaration",
                "scope": 7901,
                "src": "570:17:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7895,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "570:4:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7898,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 7901,
                "src": "627:14:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7897,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "627:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7900,
                "mutability": "mutable",
                "name": "bindAccount",
                "nodeType": "VariableDeclaration",
                "scope": 7901,
                "src": "694:19:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7899,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "694:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nodeType": "StructDefinition",
            "scope": 8257,
            "src": "458:262:17",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e73df674",
            "id": 7905,
            "mutability": "mutable",
            "name": "accountBindMap",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "765:49:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 7904,
              "keyType": {
                "id": 7902,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "773:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "765:27:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 7903,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "784:7:17",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7910,
            "mutability": "mutable",
            "name": "stakingInfo",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1114:43:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
              "typeString": "mapping(address => struct CosmosStaking.StakingInfo)"
            },
            "typeName": {
              "id": 7909,
              "keyType": {
                "id": 7906,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:31:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                "typeString": "mapping(address => struct CosmosStaking.StakingInfo)"
              },
              "valueType": {
                "id": 7908,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7907,
                  "name": "StakingInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7901,
                  "src": "1133:11:17"
                },
                "referencedDeclaration": 7901,
                "src": "1133:11:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$7901_storage_ptr",
                  "typeString": "struct CosmosStaking.StakingInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7912,
            "mutability": "immutable",
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1164:25:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7911,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1164:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 7914,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1195:18:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7913,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1195:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7916,
            "mutability": "immutable",
            "name": "community",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1258:27:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7915,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1258:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1e31d053",
            "id": 7918,
            "mutability": "mutable",
            "name": "delegatee",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1456:24:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7917,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1456:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7920,
            "mutability": "immutable",
            "name": "chainId",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1520:23:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 7919,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1520:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "567e98f9",
            "id": 7922,
            "mutability": "mutable",
            "name": "totalStakedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1577:32:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7921,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1577:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 7932,
            "name": "UpdateStaking",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7924,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 7932,
                  "src": "1645:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7926,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 7932,
                  "src": "1680:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7928,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7932,
                  "src": "1709:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7930,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7932,
                  "src": "1741:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1635:129:17"
            },
            "src": "1616:149:17"
          },
          {
            "body": {
              "id": 7964,
              "nodeType": "Block",
              "src": "1860:151:17",
              "statements": [
                {
                  "expression": {
                    "id": 7946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7943,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7912,
                      "src": "1870:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 7944,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1880:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1880:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1870:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7947,
                  "nodeType": "ExpressionStatement",
                  "src": "1870:20:17"
                },
                {
                  "expression": {
                    "id": 7950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7948,
                      "name": "community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7916,
                      "src": "1900:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7949,
                      "name": "_community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7934,
                      "src": "1912:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1900:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7951,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:22:17"
                },
                {
                  "expression": {
                    "id": 7954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7952,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7914,
                      "src": "1932:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7953,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7936,
                      "src": "1939:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1932:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7955,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:12:17"
                },
                {
                  "expression": {
                    "id": 7958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7956,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7918,
                      "src": "1954:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7957,
                      "name": "_delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7940,
                      "src": "1966:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1954:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7959,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:22:17"
                },
                {
                  "expression": {
                    "id": 7962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7960,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7920,
                      "src": "1986:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7961,
                      "name": "_chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7938,
                      "src": "1996:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1986:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 7963,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:18:17"
                }
              ]
            },
            "id": 7965,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7934,
                  "mutability": "mutable",
                  "name": "_community",
                  "nodeType": "VariableDeclaration",
                  "scope": 7965,
                  "src": "1783:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7936,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7965,
                  "src": "1803:19:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7935,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7938,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7965,
                  "src": "1824:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7937,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7940,
                  "mutability": "mutable",
                  "name": "_delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 7965,
                  "src": "1840:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:77:17"
            },
            "returnParameters": {
              "id": 7942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1860:0:17"
            },
            "scope": 8257,
            "src": "1771:240:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8201,
              "nodeType": "Block",
              "src": "2181:2138:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7983,
                            "name": "_chainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7967,
                            "src": "2238:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "expression": {
                              "id": 7984,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2248:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2248:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 7980,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7912,
                                "src": "2220:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7979,
                              "name": "CosmosStakingFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8465,
                              "src": "2199:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CosmosStakingFactory_$8465_$",
                                "typeString": "type(contract CosmosStakingFactory)"
                              }
                            },
                            "id": 7981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2199:29:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CosmosStakingFactory_$8465",
                              "typeString": "contract CosmosStakingFactory"
                            }
                          },
                          "id": 7982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isBridge",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8279,
                          "src": "2199:38:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint8,address) view external returns (bool)"
                          }
                        },
                        "id": 7986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2199:60:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207665726966696564206272696467652063616e2063616c6c",
                        "id": 7987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2261:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d",
                          "typeString": "literal_string \"Only verified bridge can call\""
                        },
                        "value": "Only verified bridge can call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d",
                          "typeString": "literal_string \"Only verified bridge can call\""
                        }
                      ],
                      "id": 7978,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2191:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2191:102:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7989,
                  "nodeType": "ExpressionStatement",
                  "src": "2191:102:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 7993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7991,
                          "name": "chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7920,
                          "src": "2311:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7992,
                          "name": "_chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7967,
                          "src": "2322:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2311:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720636861696e206964",
                        "id": 7994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2332:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30",
                          "typeString": "literal_string \"Wrong chain id\""
                        },
                        "value": "Wrong chain id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30",
                          "typeString": "literal_string \"Wrong chain id\""
                        }
                      ],
                      "id": 7990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2303:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:46:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7996,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:46:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7998,
                          "name": "delegatee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7918,
                          "src": "2367:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7999,
                          "name": "_delegatee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7969,
                          "src": "2380:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2367:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672064656c656761746565206163636f756e74",
                        "id": 8001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4",
                          "typeString": "literal_string \"Wrong delegatee account\""
                        },
                        "value": "Wrong delegatee account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4",
                          "typeString": "literal_string \"Wrong delegatee account\""
                        }
                      ],
                      "id": 7997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2359:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2359:59:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8003,
                  "nodeType": "ExpressionStatement",
                  "src": "2359:59:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 8005,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7905,
                              "src": "2436:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 8007,
                            "indexExpression": {
                              "id": 8006,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7975,
                              "src": "2451:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2436:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 8010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2476:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 8009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2468:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8008,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2468:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2468:10:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2436:42:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 8013,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7905,
                              "src": "2482:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 8015,
                            "indexExpression": {
                              "id": 8014,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7975,
                              "src": "2497:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2482:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 8016,
                            "name": "depositor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7971,
                            "src": "2514:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2482:41:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2436:87:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f756e6420627363206163636f756e74206469736d61746368",
                        "id": 8019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1",
                          "typeString": "literal_string \"Bound bsc account dismatch\""
                        },
                        "value": "Bound bsc account dismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1",
                          "typeString": "literal_string \"Bound bsc account dismatch\""
                        }
                      ],
                      "id": 8004,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2428:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:126:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8021,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:126:17"
                },
                {
                  "assignments": [
                    8023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8023,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 8201,
                      "src": "2565:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8022,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2565:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8028,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8024,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7910,
                        "src": "2586:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                          "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 8026,
                      "indexExpression": {
                        "id": 8025,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7971,
                        "src": "2598:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2586:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                        "typeString": "struct CosmosStaking.StakingInfo storage ref"
                      }
                    },
                    "id": 8027,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7898,
                    "src": "2586:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2565:50:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8029,
                      "name": "prevAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8023,
                      "src": "2629:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 8030,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7973,
                      "src": "2643:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2629:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8033,
                  "nodeType": "IfStatement",
                  "src": "2625:33:17",
                  "trueBody": {
                    "functionReturnParameters": 7977,
                    "id": 8032,
                    "nodeType": "Return",
                    "src": "2651:7:17"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8034,
                      "name": "prevAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8023,
                      "src": "2671:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8035,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7973,
                      "src": "2684:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2671:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8051,
                  "nodeType": "IfStatement",
                  "src": "2667:167:17",
                  "trueBody": {
                    "id": 8050,
                    "nodeType": "Block",
                    "src": "2692:142:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 8044,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "2779:4:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    ],
                                    "id": 8043,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2771:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 8042,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2771:7:17",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 8045,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2771:13:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 8039,
                                      "name": "community",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7916,
                                      "src": "2748:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 8038,
                                    "name": "ICommunity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11591,
                                    "src": "2737:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                                      "typeString": "type(contract ICommunity)"
                                    }
                                  },
                                  "id": 8040,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2737:21:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommunity_$11591",
                                    "typeString": "contract ICommunity"
                                  }
                                },
                                "id": 8041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "poolActived",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11548,
                                "src": "2737:33:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 8046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2737:48:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c2e",
                              "id": 8047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2787:35:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                                "typeString": "literal_string \"Can not deposit to a closed pool.\""
                              },
                              "value": "Can not deposit to a closed pool."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                                "typeString": "literal_string \"Can not deposit to a closed pool.\""
                              }
                            ],
                            "id": 8037,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2729:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2729:94:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8049,
                        "nodeType": "ExpressionStatement",
                        "src": "2729:94:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 8056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2914:36:17",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 8052,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7910,
                          "src": "2915:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 8054,
                        "indexExpression": {
                          "id": 8053,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7971,
                          "src": "2927:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2915:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 8055,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hasDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7896,
                      "src": "2915:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8088,
                    "nodeType": "Block",
                    "src": "3142:146:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 8084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 8079,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7910,
                                    "src": "3164:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                                      "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 8081,
                                  "indexExpression": {
                                    "id": 8080,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7971,
                                    "src": "3176:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3164:22:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                                    "typeString": "struct CosmosStaking.StakingInfo storage ref"
                                  }
                                },
                                "id": 8082,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bindAccount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7900,
                                "src": "3164:34:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 8083,
                                "name": "_bindAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7975,
                                "src": "3202:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3164:50:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426f756e6420636f736d6f73206163636f756e74206469736d61746368",
                              "id": 8085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3232:31:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c611608eaac0c2321c98c0920e24d27d55374bb72a04940ddf1879fbb22fdc10",
                                "typeString": "literal_string \"Bound cosmos account dismatch\""
                              },
                              "value": "Bound cosmos account dismatch"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c611608eaac0c2321c98c0920e24d27d55374bb72a04940ddf1879fbb22fdc10",
                                "typeString": "literal_string \"Bound cosmos account dismatch\""
                              }
                            ],
                            "id": 8078,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3156:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3156:121:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8087,
                        "nodeType": "ExpressionStatement",
                        "src": "3156:121:17"
                      }
                    ]
                  },
                  "id": 8089,
                  "nodeType": "IfStatement",
                  "src": "2910:378:17",
                  "trueBody": {
                    "id": 8077,
                    "nodeType": "Block",
                    "src": "2952:184:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 8062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 8057,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7910,
                                "src": "2966:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                                  "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 8059,
                              "indexExpression": {
                                "id": 8058,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7971,
                                "src": "2978:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2966:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                                "typeString": "struct CosmosStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 8060,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "hasDeposited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7896,
                            "src": "2966:35:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 8061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3004:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2966:42:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8063,
                        "nodeType": "ExpressionStatement",
                        "src": "2966:42:17"
                      },
                      {
                        "expression": {
                          "id": 8069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 8064,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7910,
                                "src": "3022:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                                  "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 8066,
                              "indexExpression": {
                                "id": 8065,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7971,
                                "src": "3034:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3022:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                                "typeString": "struct CosmosStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 8067,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bindAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7900,
                            "src": "3022:34:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 8068,
                            "name": "_bindAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7975,
                            "src": "3059:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3022:49:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8070,
                        "nodeType": "ExpressionStatement",
                        "src": "3022:49:17"
                      },
                      {
                        "expression": {
                          "id": 8075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8071,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7905,
                              "src": "3085:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 8073,
                            "indexExpression": {
                              "id": 8072,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7975,
                              "src": "3100:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3085:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 8074,
                            "name": "depositor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7971,
                            "src": "3116:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3085:40:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8076,
                        "nodeType": "ExpressionStatement",
                        "src": "3085:40:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "55534552",
                        "id": 8094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3440:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        "value": "USER"
                      },
                      {
                        "id": 8095,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "3448:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8091,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7916,
                            "src": "3417:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8090,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11591,
                          "src": "3406:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 8092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3406:21:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$11591",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 8093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11590,
                      "src": "3406:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) payable external"
                      }
                    },
                    "id": 8096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3406:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8097,
                  "nodeType": "ExpressionStatement",
                  "src": "3406:50:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 8098,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7910,
                          "src": "3471:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 8100,
                        "indexExpression": {
                          "id": 8099,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7971,
                          "src": "3483:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3471:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 8101,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7898,
                      "src": "3471:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3503:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3471:33:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8151,
                  "nodeType": "IfStatement",
                  "src": "3467:429:17",
                  "trueBody": {
                    "id": 8150,
                    "nodeType": "Block",
                    "src": "3506:390:17",
                    "statements": [
                      {
                        "assignments": [
                          8105
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8105,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "scope": 8150,
                            "src": "3520:15:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8104,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3520:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8136,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 8131,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "3746:4:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    ],
                                    "id": 8130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3738:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 8129,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3738:7:17",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 8132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3738:13:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 8133,
                                  "name": "depositor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7971,
                                  "src": "3753:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 8126,
                                      "name": "community",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7916,
                                      "src": "3715:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 8125,
                                    "name": "ICommunity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11591,
                                    "src": "3704:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                                      "typeString": "type(contract ICommunity)"
                                    }
                                  },
                                  "id": 8127,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3704:21:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommunity_$11591",
                                    "typeString": "contract ICommunity"
                                  }
                                },
                                "id": 8128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getUserDebt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11569,
                                "src": "3704:33:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 8134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3704:59:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 8122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3677:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 8117,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967268,
                                              "src": "3648:4:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                                "typeString": "contract CosmosStaking"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                                "typeString": "contract CosmosStaking"
                                              }
                                            ],
                                            "id": 8116,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3640:7:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 8115,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3640:7:17",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 8118,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3640:13:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 8112,
                                              "name": "community",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7916,
                                              "src": "3617:9:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 8111,
                                            "name": "ICommunity",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11591,
                                            "src": "3606:10:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                                              "typeString": "type(contract ICommunity)"
                                            }
                                          },
                                          "id": 8113,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3606:21:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ICommunity_$11591",
                                            "typeString": "contract ICommunity"
                                          }
                                        },
                                        "id": 8114,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getShareAcc",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 11555,
                                        "src": "3606:33:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 8119,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3606:48:17",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 8106,
                                          "name": "stakingInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7910,
                                          "src": "3538:11:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                          }
                                        },
                                        "id": 8108,
                                        "indexExpression": {
                                          "id": 8107,
                                          "name": "depositor",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7971,
                                          "src": "3550:9:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3538:22:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                                        }
                                      },
                                      "id": 8109,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7898,
                                      "src": "3538:46:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 8110,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16807,
                                    "src": "3538:67:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 8120,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3538:117:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16822,
                                "src": "3538:138:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3538:144:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16792,
                            "src": "3538:165:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3538:226:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3520:244:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8137,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8105,
                            "src": "3782:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 8138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3792:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3782:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8149,
                        "nodeType": "IfStatement",
                        "src": "3778:108:17",
                        "trueBody": {
                          "id": 8148,
                          "nodeType": "Block",
                          "src": "3795:91:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 8144,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7971,
                                    "src": "3852:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 8145,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8105,
                                    "src": "3863:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 8141,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7916,
                                        "src": "3824:9:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 8140,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11591,
                                      "src": "3813:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 8142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3813:21:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$11591",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 8143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "appendUserReward",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11576,
                                  "src": "3813:38:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 8146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3813:58:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8147,
                              "nodeType": "ExpressionStatement",
                              "src": "3813:58:17"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 8160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8152,
                      "name": "totalStakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7922,
                      "src": "3906:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8158,
                          "name": "prevAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8023,
                          "src": "3960:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8155,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7973,
                              "src": "3948:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8153,
                              "name": "totalStakedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7922,
                              "src": "3926:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16777,
                            "src": "3926:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3926:29:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16792,
                        "src": "3926:33:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3926:45:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3906:65:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8161,
                  "nodeType": "ExpressionStatement",
                  "src": "3906:65:17"
                },
                {
                  "expression": {
                    "id": 8167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8162,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7910,
                          "src": "3981:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 8164,
                        "indexExpression": {
                          "id": 8163,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7971,
                          "src": "3993:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3981:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 8165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7898,
                      "src": "3981:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8166,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7973,
                      "src": "4013:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3981:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8168,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:38:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8173,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7971,
                        "src": "4077:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 8190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4227:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 8185,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "4202:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                          "typeString": "contract CosmosStaking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                          "typeString": "contract CosmosStaking"
                                        }
                                      ],
                                      "id": 8184,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4194:7:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 8183,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4194:7:17",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 8186,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4194:13:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 8180,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7916,
                                        "src": "4171:9:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 8179,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11591,
                                      "src": "4160:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 8181,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4160:21:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$11591",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 8182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getShareAcc",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11555,
                                  "src": "4160:33:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 8187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4160:48:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 8174,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7910,
                                    "src": "4100:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                                      "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 8176,
                                  "indexExpression": {
                                    "id": 8175,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7971,
                                    "src": "4112:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4100:22:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                                    "typeString": "struct CosmosStaking.StakingInfo storage ref"
                                  }
                                },
                                "id": 8177,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7898,
                                "src": "4100:42:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 8178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16807,
                              "src": "4100:59:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 8188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4100:109:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16822,
                          "src": "4100:126:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4100:132:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8170,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7916,
                            "src": "4041:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8169,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11591,
                          "src": "4030:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 8171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4030:21:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$11591",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 8172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUserDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11583,
                      "src": "4030:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 8192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:203:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8193,
                  "nodeType": "ExpressionStatement",
                  "src": "4030:203:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8195,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7916,
                        "src": "4271:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8196,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7971,
                        "src": "4282:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8197,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8023,
                        "src": "4293:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8198,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7973,
                        "src": "4305:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8194,
                      "name": "UpdateStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7932,
                      "src": "4257:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 8199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4257:55:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8200,
                  "nodeType": "EmitStatement",
                  "src": "4252:60:17"
                }
              ]
            },
            "functionSelector": "2b8509a7",
            "id": 8202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7967,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8202,
                  "src": "2042:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7966,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7969,
                  "mutability": "mutable",
                  "name": "_delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 8202,
                  "src": "2066:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7971,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nodeType": "VariableDeclaration",
                  "scope": 8202,
                  "src": "2094:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2094:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7973,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8202,
                  "src": "2121:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7975,
                  "mutability": "mutable",
                  "name": "_bindAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8202,
                  "src": "2145:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2032:139:17"
            },
            "returnParameters": {
              "id": 7977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2181:0:17"
            },
            "scope": 8257,
            "src": "2017:2302:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11636
            ],
            "body": {
              "id": 8210,
              "nodeType": "Block",
              "src": "4388:31:17",
              "statements": [
                {
                  "expression": {
                    "id": 8208,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7912,
                    "src": "4405:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8207,
                  "id": 8209,
                  "nodeType": "Return",
                  "src": "4398:14:17"
                }
              ]
            },
            "functionSelector": "88cc58e4",
            "id": 8211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFactory",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8204,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4361:8:17"
            },
            "parameters": {
              "id": 8203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4344:2:17"
            },
            "returnParameters": {
              "id": 8207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8206,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "4379:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4379:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4378:9:17"
            },
            "scope": 8257,
            "src": "4325:94:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11641
            ],
            "body": {
              "id": 8219,
              "nodeType": "Block",
              "src": "4490:33:17",
              "statements": [
                {
                  "expression": {
                    "id": 8217,
                    "name": "community",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7916,
                    "src": "4507:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8216,
                  "id": 8218,
                  "nodeType": "Return",
                  "src": "4500:16:17"
                }
              ]
            },
            "functionSelector": "c51db6b2",
            "id": 8220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommunity",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8213,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4463:8:17"
            },
            "parameters": {
              "id": 8212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4446:2:17"
            },
            "returnParameters": {
              "id": 8216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8215,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8220,
                  "src": "4481:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4481:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4480:9:17"
            },
            "scope": 8257,
            "src": "4425:98:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11648
            ],
            "body": {
              "id": 8233,
              "nodeType": "Block",
              "src": "4641:48:17",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 8228,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7910,
                        "src": "4658:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                          "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 8230,
                      "indexExpression": {
                        "id": 8229,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8222,
                        "src": "4670:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4658:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                        "typeString": "struct CosmosStaking.StakingInfo storage ref"
                      }
                    },
                    "id": 8231,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7898,
                    "src": "4658:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8227,
                  "id": 8232,
                  "nodeType": "Return",
                  "src": "4651:31:17"
                }
              ]
            },
            "functionSelector": "94465b21",
            "id": 8234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8224,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4610:8:17"
            },
            "parameters": {
              "id": 8223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8222,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 8234,
                  "src": "4558:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4558:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4557:14:17"
            },
            "returnParameters": {
              "id": 8227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8226,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8234,
                  "src": "4628:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4628:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4627:9:17"
            },
            "scope": 8257,
            "src": "4529:160:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11653
            ],
            "body": {
              "id": 8242,
              "nodeType": "Block",
              "src": "4796:41:17",
              "statements": [
                {
                  "expression": {
                    "id": 8240,
                    "name": "totalStakedAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7922,
                    "src": "4813:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8239,
                  "id": 8241,
                  "nodeType": "Return",
                  "src": "4806:24:17"
                }
              ]
            },
            "functionSelector": "38adb6f0",
            "id": 8243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8236,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4765:8:17"
            },
            "parameters": {
              "id": 8235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4724:2:17"
            },
            "returnParameters": {
              "id": 8239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8238,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8243,
                  "src": "4783:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4782:9:17"
            },
            "scope": 8257,
            "src": "4695:142:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8255,
              "nodeType": "Block",
              "src": "4956:41:17",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 8251,
                      "name": "stakingInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7910,
                      "src": "4973:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                        "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 8253,
                    "indexExpression": {
                      "id": 8252,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8245,
                      "src": "4985:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4973:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                      "typeString": "struct CosmosStaking.StakingInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 8250,
                  "id": 8254,
                  "nodeType": "Return",
                  "src": "4966:24:17"
                }
              ]
            },
            "functionSelector": "b3a7834d",
            "id": 8256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserDepositInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8245,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 8256,
                  "src": "4871:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4871:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4870:14:17"
            },
            "returnParameters": {
              "id": 8250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8249,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8256,
                  "src": "4932:18:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$7901_memory_ptr",
                    "typeString": "struct CosmosStaking.StakingInfo"
                  },
                  "typeName": {
                    "id": 8248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8247,
                      "name": "StakingInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7901,
                      "src": "4932:11:17"
                    },
                    "referencedDeclaration": 7901,
                    "src": "4932:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$7901_storage_ptr",
                      "typeString": "struct CosmosStaking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4931:20:17"
            },
            "scope": 8257,
            "src": "4843:154:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8258,
        "src": "387:4612:17"
      }
    ],
    "src": "33:4967:17"
  },
  "legacyAST": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/cosmos-atom/CosmosStaking.sol",
    "exportedSymbols": {
      "AccessControl": [
        11986
      ],
      "AccessControlEnumerable": [
        12111
      ],
      "ArbSys": [
        11427
      ],
      "BytesLib": [
        17964
      ],
      "Community": [
        2000
      ],
      "CommunityFactory": [
        2258
      ],
      "Context": [
        15470
      ],
      "CosmosStaking": [
        8257
      ],
      "CosmosStakingFactory": [
        8465
      ],
      "ERC165": [
        15723
      ],
      "ERC20": [
        14798
      ],
      "ERC20Burnable": [
        14920
      ],
      "ERC20Helper": [
        2481
      ],
      "ERC20Pausable": [
        14957
      ],
      "ERC20PresetMinterPauser": [
        15118
      ],
      "EnumerableSet": [
        17631
      ],
      "IAccessControl": [
        12184
      ],
      "IAccessControlEnumerable": [
        12209
      ],
      "ICalculator": [
        11466
      ],
      "ICommittee": [
        11537
      ],
      "ICommunity": [
        11591
      ],
      "ICommunityTokenFactory": [
        11603
      ],
      "IERC165": [
        15735
      ],
      "IERC20": [
        14876
      ],
      "IERC20Metadata": [
        14982
      ],
      "IGauge": [
        11627
      ],
      "IPool": [
        11654
      ],
      "IPoolFactory": [
        11670
      ],
      "Math": [
        16601
      ],
      "MintableERC20": [
        7480
      ],
      "Ownable": [
        12322
      ],
      "Pausable": [
        12430
      ],
      "SafeMath": [
        16913
      ],
      "SignedMath": [
        17018
      ],
      "Strings": [
        15699
      ]
    },
    "id": 8258,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7883,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:17"
      },
      {
        "id": 7884,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7885,
        "nodeType": "ImportDirective",
        "scope": 8258,
        "sourceUnit": 16914,
        "src": "91:57:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunity.sol",
        "file": "../../interfaces/ICommunity.sol",
        "id": 7886,
        "nodeType": "ImportDirective",
        "scope": 8258,
        "sourceUnit": 11592,
        "src": "149:41:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPool.sol",
        "file": "../../interfaces/IPool.sol",
        "id": 7887,
        "nodeType": "ImportDirective",
        "scope": 8258,
        "sourceUnit": 11655,
        "src": "191:36:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/cosmos-atom/CosmosStakingFactory.sol",
        "file": "./CosmosStakingFactory.sol",
        "id": 7888,
        "nodeType": "ImportDirective",
        "scope": 8258,
        "sourceUnit": 8466,
        "src": "228:36:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7890,
              "name": "IPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11654,
              "src": "413:5:17"
            },
            "id": 7891,
            "nodeType": "InheritanceSpecifier",
            "src": "413:5:17"
          }
        ],
        "contractDependencies": [
          11654
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7889,
          "nodeType": "StructuredDocumentation",
          "src": "266:120:17",
          "text": " @dev Template contract of Atom staking pool.\n Delegation only can be updated through update() by bridge."
        },
        "fullyImplemented": true,
        "id": 8257,
        "linearizedBaseContracts": [
          8257,
          11654
        ],
        "name": "CosmosStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7894,
            "libraryName": {
              "id": 7892,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16913,
              "src": "431:8:17"
            },
            "nodeType": "UsingForDirective",
            "src": "425:27:17",
            "typeName": {
              "id": 7893,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "444:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "CosmosStaking.StakingInfo",
            "id": 7901,
            "members": [
              {
                "constant": false,
                "id": 7896,
                "mutability": "mutable",
                "name": "hasDeposited",
                "nodeType": "VariableDeclaration",
                "scope": 7901,
                "src": "570:17:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7895,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "570:4:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7898,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 7901,
                "src": "627:14:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7897,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "627:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7900,
                "mutability": "mutable",
                "name": "bindAccount",
                "nodeType": "VariableDeclaration",
                "scope": 7901,
                "src": "694:19:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7899,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "694:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nodeType": "StructDefinition",
            "scope": 8257,
            "src": "458:262:17",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e73df674",
            "id": 7905,
            "mutability": "mutable",
            "name": "accountBindMap",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "765:49:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 7904,
              "keyType": {
                "id": 7902,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "773:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "765:27:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 7903,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "784:7:17",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7910,
            "mutability": "mutable",
            "name": "stakingInfo",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1114:43:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
              "typeString": "mapping(address => struct CosmosStaking.StakingInfo)"
            },
            "typeName": {
              "id": 7909,
              "keyType": {
                "id": 7906,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:31:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                "typeString": "mapping(address => struct CosmosStaking.StakingInfo)"
              },
              "valueType": {
                "id": 7908,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7907,
                  "name": "StakingInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7901,
                  "src": "1133:11:17"
                },
                "referencedDeclaration": 7901,
                "src": "1133:11:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$7901_storage_ptr",
                  "typeString": "struct CosmosStaking.StakingInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7912,
            "mutability": "immutable",
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1164:25:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7911,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1164:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 7914,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1195:18:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7913,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1195:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7916,
            "mutability": "immutable",
            "name": "community",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1258:27:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7915,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1258:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1e31d053",
            "id": 7918,
            "mutability": "mutable",
            "name": "delegatee",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1456:24:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7917,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1456:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7920,
            "mutability": "immutable",
            "name": "chainId",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1520:23:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 7919,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1520:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "567e98f9",
            "id": 7922,
            "mutability": "mutable",
            "name": "totalStakedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 8257,
            "src": "1577:32:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7921,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1577:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 7932,
            "name": "UpdateStaking",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7924,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 7932,
                  "src": "1645:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7926,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 7932,
                  "src": "1680:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7928,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7932,
                  "src": "1709:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7930,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7932,
                  "src": "1741:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1635:129:17"
            },
            "src": "1616:149:17"
          },
          {
            "body": {
              "id": 7964,
              "nodeType": "Block",
              "src": "1860:151:17",
              "statements": [
                {
                  "expression": {
                    "id": 7946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7943,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7912,
                      "src": "1870:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 7944,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1880:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1880:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1870:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7947,
                  "nodeType": "ExpressionStatement",
                  "src": "1870:20:17"
                },
                {
                  "expression": {
                    "id": 7950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7948,
                      "name": "community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7916,
                      "src": "1900:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7949,
                      "name": "_community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7934,
                      "src": "1912:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1900:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7951,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:22:17"
                },
                {
                  "expression": {
                    "id": 7954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7952,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7914,
                      "src": "1932:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7953,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7936,
                      "src": "1939:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1932:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7955,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:12:17"
                },
                {
                  "expression": {
                    "id": 7958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7956,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7918,
                      "src": "1954:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7957,
                      "name": "_delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7940,
                      "src": "1966:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1954:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7959,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:22:17"
                },
                {
                  "expression": {
                    "id": 7962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7960,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7920,
                      "src": "1986:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7961,
                      "name": "_chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7938,
                      "src": "1996:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1986:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 7963,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:18:17"
                }
              ]
            },
            "id": 7965,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7934,
                  "mutability": "mutable",
                  "name": "_community",
                  "nodeType": "VariableDeclaration",
                  "scope": 7965,
                  "src": "1783:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7936,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7965,
                  "src": "1803:19:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7935,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7938,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7965,
                  "src": "1824:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7937,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7940,
                  "mutability": "mutable",
                  "name": "_delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 7965,
                  "src": "1840:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:77:17"
            },
            "returnParameters": {
              "id": 7942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1860:0:17"
            },
            "scope": 8257,
            "src": "1771:240:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8201,
              "nodeType": "Block",
              "src": "2181:2138:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7983,
                            "name": "_chainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7967,
                            "src": "2238:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "expression": {
                              "id": 7984,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2248:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2248:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 7980,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7912,
                                "src": "2220:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7979,
                              "name": "CosmosStakingFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8465,
                              "src": "2199:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CosmosStakingFactory_$8465_$",
                                "typeString": "type(contract CosmosStakingFactory)"
                              }
                            },
                            "id": 7981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2199:29:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CosmosStakingFactory_$8465",
                              "typeString": "contract CosmosStakingFactory"
                            }
                          },
                          "id": 7982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isBridge",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8279,
                          "src": "2199:38:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint8,address) view external returns (bool)"
                          }
                        },
                        "id": 7986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2199:60:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207665726966696564206272696467652063616e2063616c6c",
                        "id": 7987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2261:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d",
                          "typeString": "literal_string \"Only verified bridge can call\""
                        },
                        "value": "Only verified bridge can call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d",
                          "typeString": "literal_string \"Only verified bridge can call\""
                        }
                      ],
                      "id": 7978,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2191:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2191:102:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7989,
                  "nodeType": "ExpressionStatement",
                  "src": "2191:102:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 7993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7991,
                          "name": "chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7920,
                          "src": "2311:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7992,
                          "name": "_chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7967,
                          "src": "2322:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2311:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720636861696e206964",
                        "id": 7994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2332:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30",
                          "typeString": "literal_string \"Wrong chain id\""
                        },
                        "value": "Wrong chain id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30",
                          "typeString": "literal_string \"Wrong chain id\""
                        }
                      ],
                      "id": 7990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2303:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:46:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7996,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:46:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7998,
                          "name": "delegatee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7918,
                          "src": "2367:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7999,
                          "name": "_delegatee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7969,
                          "src": "2380:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2367:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672064656c656761746565206163636f756e74",
                        "id": 8001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4",
                          "typeString": "literal_string \"Wrong delegatee account\""
                        },
                        "value": "Wrong delegatee account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4",
                          "typeString": "literal_string \"Wrong delegatee account\""
                        }
                      ],
                      "id": 7997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2359:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2359:59:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8003,
                  "nodeType": "ExpressionStatement",
                  "src": "2359:59:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 8005,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7905,
                              "src": "2436:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 8007,
                            "indexExpression": {
                              "id": 8006,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7975,
                              "src": "2451:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2436:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 8010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2476:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 8009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2468:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8008,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2468:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2468:10:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2436:42:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 8013,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7905,
                              "src": "2482:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 8015,
                            "indexExpression": {
                              "id": 8014,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7975,
                              "src": "2497:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2482:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 8016,
                            "name": "depositor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7971,
                            "src": "2514:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2482:41:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2436:87:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f756e6420627363206163636f756e74206469736d61746368",
                        "id": 8019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1",
                          "typeString": "literal_string \"Bound bsc account dismatch\""
                        },
                        "value": "Bound bsc account dismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1",
                          "typeString": "literal_string \"Bound bsc account dismatch\""
                        }
                      ],
                      "id": 8004,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2428:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:126:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8021,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:126:17"
                },
                {
                  "assignments": [
                    8023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8023,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 8201,
                      "src": "2565:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8022,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2565:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8028,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8024,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7910,
                        "src": "2586:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                          "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 8026,
                      "indexExpression": {
                        "id": 8025,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7971,
                        "src": "2598:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2586:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                        "typeString": "struct CosmosStaking.StakingInfo storage ref"
                      }
                    },
                    "id": 8027,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7898,
                    "src": "2586:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2565:50:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8029,
                      "name": "prevAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8023,
                      "src": "2629:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 8030,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7973,
                      "src": "2643:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2629:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8033,
                  "nodeType": "IfStatement",
                  "src": "2625:33:17",
                  "trueBody": {
                    "functionReturnParameters": 7977,
                    "id": 8032,
                    "nodeType": "Return",
                    "src": "2651:7:17"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8034,
                      "name": "prevAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8023,
                      "src": "2671:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8035,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7973,
                      "src": "2684:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2671:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8051,
                  "nodeType": "IfStatement",
                  "src": "2667:167:17",
                  "trueBody": {
                    "id": 8050,
                    "nodeType": "Block",
                    "src": "2692:142:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 8044,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "2779:4:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    ],
                                    "id": 8043,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2771:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 8042,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2771:7:17",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 8045,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2771:13:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 8039,
                                      "name": "community",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7916,
                                      "src": "2748:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 8038,
                                    "name": "ICommunity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11591,
                                    "src": "2737:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                                      "typeString": "type(contract ICommunity)"
                                    }
                                  },
                                  "id": 8040,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2737:21:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommunity_$11591",
                                    "typeString": "contract ICommunity"
                                  }
                                },
                                "id": 8041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "poolActived",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11548,
                                "src": "2737:33:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 8046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2737:48:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c2e",
                              "id": 8047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2787:35:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                                "typeString": "literal_string \"Can not deposit to a closed pool.\""
                              },
                              "value": "Can not deposit to a closed pool."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                                "typeString": "literal_string \"Can not deposit to a closed pool.\""
                              }
                            ],
                            "id": 8037,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2729:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2729:94:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8049,
                        "nodeType": "ExpressionStatement",
                        "src": "2729:94:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 8056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2914:36:17",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 8052,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7910,
                          "src": "2915:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 8054,
                        "indexExpression": {
                          "id": 8053,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7971,
                          "src": "2927:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2915:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 8055,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hasDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7896,
                      "src": "2915:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8088,
                    "nodeType": "Block",
                    "src": "3142:146:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 8084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 8079,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7910,
                                    "src": "3164:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                                      "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 8081,
                                  "indexExpression": {
                                    "id": 8080,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7971,
                                    "src": "3176:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3164:22:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                                    "typeString": "struct CosmosStaking.StakingInfo storage ref"
                                  }
                                },
                                "id": 8082,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bindAccount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7900,
                                "src": "3164:34:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 8083,
                                "name": "_bindAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7975,
                                "src": "3202:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3164:50:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426f756e6420636f736d6f73206163636f756e74206469736d61746368",
                              "id": 8085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3232:31:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c611608eaac0c2321c98c0920e24d27d55374bb72a04940ddf1879fbb22fdc10",
                                "typeString": "literal_string \"Bound cosmos account dismatch\""
                              },
                              "value": "Bound cosmos account dismatch"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c611608eaac0c2321c98c0920e24d27d55374bb72a04940ddf1879fbb22fdc10",
                                "typeString": "literal_string \"Bound cosmos account dismatch\""
                              }
                            ],
                            "id": 8078,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3156:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3156:121:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8087,
                        "nodeType": "ExpressionStatement",
                        "src": "3156:121:17"
                      }
                    ]
                  },
                  "id": 8089,
                  "nodeType": "IfStatement",
                  "src": "2910:378:17",
                  "trueBody": {
                    "id": 8077,
                    "nodeType": "Block",
                    "src": "2952:184:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 8062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 8057,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7910,
                                "src": "2966:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                                  "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 8059,
                              "indexExpression": {
                                "id": 8058,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7971,
                                "src": "2978:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2966:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                                "typeString": "struct CosmosStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 8060,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "hasDeposited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7896,
                            "src": "2966:35:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 8061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3004:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2966:42:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8063,
                        "nodeType": "ExpressionStatement",
                        "src": "2966:42:17"
                      },
                      {
                        "expression": {
                          "id": 8069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 8064,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7910,
                                "src": "3022:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                                  "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 8066,
                              "indexExpression": {
                                "id": 8065,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7971,
                                "src": "3034:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3022:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                                "typeString": "struct CosmosStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 8067,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bindAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7900,
                            "src": "3022:34:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 8068,
                            "name": "_bindAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7975,
                            "src": "3059:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3022:49:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8070,
                        "nodeType": "ExpressionStatement",
                        "src": "3022:49:17"
                      },
                      {
                        "expression": {
                          "id": 8075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8071,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7905,
                              "src": "3085:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 8073,
                            "indexExpression": {
                              "id": 8072,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7975,
                              "src": "3100:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3085:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 8074,
                            "name": "depositor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7971,
                            "src": "3116:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3085:40:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8076,
                        "nodeType": "ExpressionStatement",
                        "src": "3085:40:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "55534552",
                        "id": 8094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3440:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        "value": "USER"
                      },
                      {
                        "id": 8095,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "3448:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8091,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7916,
                            "src": "3417:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8090,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11591,
                          "src": "3406:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 8092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3406:21:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$11591",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 8093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11590,
                      "src": "3406:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) payable external"
                      }
                    },
                    "id": 8096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3406:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8097,
                  "nodeType": "ExpressionStatement",
                  "src": "3406:50:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 8098,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7910,
                          "src": "3471:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 8100,
                        "indexExpression": {
                          "id": 8099,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7971,
                          "src": "3483:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3471:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 8101,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7898,
                      "src": "3471:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3503:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3471:33:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8151,
                  "nodeType": "IfStatement",
                  "src": "3467:429:17",
                  "trueBody": {
                    "id": 8150,
                    "nodeType": "Block",
                    "src": "3506:390:17",
                    "statements": [
                      {
                        "assignments": [
                          8105
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8105,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "scope": 8150,
                            "src": "3520:15:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8104,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3520:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8136,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 8131,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "3746:4:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    ],
                                    "id": 8130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3738:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 8129,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3738:7:17",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 8132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3738:13:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 8133,
                                  "name": "depositor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7971,
                                  "src": "3753:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 8126,
                                      "name": "community",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7916,
                                      "src": "3715:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 8125,
                                    "name": "ICommunity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11591,
                                    "src": "3704:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                                      "typeString": "type(contract ICommunity)"
                                    }
                                  },
                                  "id": 8127,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3704:21:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommunity_$11591",
                                    "typeString": "contract ICommunity"
                                  }
                                },
                                "id": 8128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getUserDebt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11569,
                                "src": "3704:33:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 8134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3704:59:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 8122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3677:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 8117,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967268,
                                              "src": "3648:4:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                                "typeString": "contract CosmosStaking"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                                "typeString": "contract CosmosStaking"
                                              }
                                            ],
                                            "id": 8116,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3640:7:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 8115,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3640:7:17",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 8118,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3640:13:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 8112,
                                              "name": "community",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7916,
                                              "src": "3617:9:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 8111,
                                            "name": "ICommunity",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11591,
                                            "src": "3606:10:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                                              "typeString": "type(contract ICommunity)"
                                            }
                                          },
                                          "id": 8113,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3606:21:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ICommunity_$11591",
                                            "typeString": "contract ICommunity"
                                          }
                                        },
                                        "id": 8114,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getShareAcc",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 11555,
                                        "src": "3606:33:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 8119,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3606:48:17",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 8106,
                                          "name": "stakingInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7910,
                                          "src": "3538:11:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                          }
                                        },
                                        "id": 8108,
                                        "indexExpression": {
                                          "id": 8107,
                                          "name": "depositor",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7971,
                                          "src": "3550:9:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3538:22:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                                        }
                                      },
                                      "id": 8109,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7898,
                                      "src": "3538:46:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 8110,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16807,
                                    "src": "3538:67:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 8120,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3538:117:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16822,
                                "src": "3538:138:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3538:144:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16792,
                            "src": "3538:165:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3538:226:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3520:244:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8137,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8105,
                            "src": "3782:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 8138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3792:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3782:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8149,
                        "nodeType": "IfStatement",
                        "src": "3778:108:17",
                        "trueBody": {
                          "id": 8148,
                          "nodeType": "Block",
                          "src": "3795:91:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 8144,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7971,
                                    "src": "3852:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 8145,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8105,
                                    "src": "3863:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 8141,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7916,
                                        "src": "3824:9:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 8140,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11591,
                                      "src": "3813:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 8142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3813:21:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$11591",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 8143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "appendUserReward",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11576,
                                  "src": "3813:38:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 8146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3813:58:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8147,
                              "nodeType": "ExpressionStatement",
                              "src": "3813:58:17"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 8160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8152,
                      "name": "totalStakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7922,
                      "src": "3906:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8158,
                          "name": "prevAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8023,
                          "src": "3960:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8155,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7973,
                              "src": "3948:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8153,
                              "name": "totalStakedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7922,
                              "src": "3926:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16777,
                            "src": "3926:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3926:29:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16792,
                        "src": "3926:33:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3926:45:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3906:65:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8161,
                  "nodeType": "ExpressionStatement",
                  "src": "3906:65:17"
                },
                {
                  "expression": {
                    "id": 8167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8162,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7910,
                          "src": "3981:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 8164,
                        "indexExpression": {
                          "id": 8163,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7971,
                          "src": "3993:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3981:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 8165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7898,
                      "src": "3981:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8166,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7973,
                      "src": "4013:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3981:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8168,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:38:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8173,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7971,
                        "src": "4077:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 8190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4227:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 8185,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "4202:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                          "typeString": "contract CosmosStaking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CosmosStaking_$8257",
                                          "typeString": "contract CosmosStaking"
                                        }
                                      ],
                                      "id": 8184,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4194:7:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 8183,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4194:7:17",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 8186,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4194:13:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 8180,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7916,
                                        "src": "4171:9:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 8179,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11591,
                                      "src": "4160:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 8181,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4160:21:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$11591",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 8182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getShareAcc",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11555,
                                  "src": "4160:33:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 8187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4160:48:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 8174,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7910,
                                    "src": "4100:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                                      "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 8176,
                                  "indexExpression": {
                                    "id": 8175,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7971,
                                    "src": "4112:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4100:22:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                                    "typeString": "struct CosmosStaking.StakingInfo storage ref"
                                  }
                                },
                                "id": 8177,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7898,
                                "src": "4100:42:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 8178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16807,
                              "src": "4100:59:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 8188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4100:109:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16822,
                          "src": "4100:126:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4100:132:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8170,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7916,
                            "src": "4041:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8169,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11591,
                          "src": "4030:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$11591_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 8171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4030:21:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$11591",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 8172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUserDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11583,
                      "src": "4030:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 8192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:203:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8193,
                  "nodeType": "ExpressionStatement",
                  "src": "4030:203:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8195,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7916,
                        "src": "4271:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8196,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7971,
                        "src": "4282:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8197,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8023,
                        "src": "4293:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8198,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7973,
                        "src": "4305:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8194,
                      "name": "UpdateStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7932,
                      "src": "4257:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 8199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4257:55:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8200,
                  "nodeType": "EmitStatement",
                  "src": "4252:60:17"
                }
              ]
            },
            "functionSelector": "2b8509a7",
            "id": 8202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7967,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8202,
                  "src": "2042:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7966,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7969,
                  "mutability": "mutable",
                  "name": "_delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 8202,
                  "src": "2066:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7971,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nodeType": "VariableDeclaration",
                  "scope": 8202,
                  "src": "2094:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2094:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7973,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8202,
                  "src": "2121:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7975,
                  "mutability": "mutable",
                  "name": "_bindAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8202,
                  "src": "2145:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2032:139:17"
            },
            "returnParameters": {
              "id": 7977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2181:0:17"
            },
            "scope": 8257,
            "src": "2017:2302:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11636
            ],
            "body": {
              "id": 8210,
              "nodeType": "Block",
              "src": "4388:31:17",
              "statements": [
                {
                  "expression": {
                    "id": 8208,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7912,
                    "src": "4405:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8207,
                  "id": 8209,
                  "nodeType": "Return",
                  "src": "4398:14:17"
                }
              ]
            },
            "functionSelector": "88cc58e4",
            "id": 8211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFactory",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8204,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4361:8:17"
            },
            "parameters": {
              "id": 8203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4344:2:17"
            },
            "returnParameters": {
              "id": 8207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8206,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "4379:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4379:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4378:9:17"
            },
            "scope": 8257,
            "src": "4325:94:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11641
            ],
            "body": {
              "id": 8219,
              "nodeType": "Block",
              "src": "4490:33:17",
              "statements": [
                {
                  "expression": {
                    "id": 8217,
                    "name": "community",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7916,
                    "src": "4507:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8216,
                  "id": 8218,
                  "nodeType": "Return",
                  "src": "4500:16:17"
                }
              ]
            },
            "functionSelector": "c51db6b2",
            "id": 8220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommunity",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8213,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4463:8:17"
            },
            "parameters": {
              "id": 8212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4446:2:17"
            },
            "returnParameters": {
              "id": 8216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8215,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8220,
                  "src": "4481:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4481:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4480:9:17"
            },
            "scope": 8257,
            "src": "4425:98:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11648
            ],
            "body": {
              "id": 8233,
              "nodeType": "Block",
              "src": "4641:48:17",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 8228,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7910,
                        "src": "4658:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                          "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 8230,
                      "indexExpression": {
                        "id": 8229,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8222,
                        "src": "4670:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4658:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                        "typeString": "struct CosmosStaking.StakingInfo storage ref"
                      }
                    },
                    "id": 8231,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7898,
                    "src": "4658:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8227,
                  "id": 8232,
                  "nodeType": "Return",
                  "src": "4651:31:17"
                }
              ]
            },
            "functionSelector": "94465b21",
            "id": 8234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8224,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4610:8:17"
            },
            "parameters": {
              "id": 8223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8222,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 8234,
                  "src": "4558:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4558:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4557:14:17"
            },
            "returnParameters": {
              "id": 8227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8226,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8234,
                  "src": "4628:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4628:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4627:9:17"
            },
            "scope": 8257,
            "src": "4529:160:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11653
            ],
            "body": {
              "id": 8242,
              "nodeType": "Block",
              "src": "4796:41:17",
              "statements": [
                {
                  "expression": {
                    "id": 8240,
                    "name": "totalStakedAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7922,
                    "src": "4813:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8239,
                  "id": 8241,
                  "nodeType": "Return",
                  "src": "4806:24:17"
                }
              ]
            },
            "functionSelector": "38adb6f0",
            "id": 8243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8236,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4765:8:17"
            },
            "parameters": {
              "id": 8235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4724:2:17"
            },
            "returnParameters": {
              "id": 8239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8238,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8243,
                  "src": "4783:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4782:9:17"
            },
            "scope": 8257,
            "src": "4695:142:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8255,
              "nodeType": "Block",
              "src": "4956:41:17",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 8251,
                      "name": "stakingInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7910,
                      "src": "4973:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$7901_storage_$",
                        "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 8253,
                    "indexExpression": {
                      "id": 8252,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8245,
                      "src": "4985:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4973:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$7901_storage",
                      "typeString": "struct CosmosStaking.StakingInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 8250,
                  "id": 8254,
                  "nodeType": "Return",
                  "src": "4966:24:17"
                }
              ]
            },
            "functionSelector": "b3a7834d",
            "id": 8256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserDepositInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8245,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 8256,
                  "src": "4871:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4871:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4870:14:17"
            },
            "returnParameters": {
              "id": 8250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8249,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8256,
                  "src": "4932:18:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$7901_memory_ptr",
                    "typeString": "struct CosmosStaking.StakingInfo"
                  },
                  "typeName": {
                    "id": 8248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8247,
                      "name": "StakingInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7901,
                      "src": "4932:11:17"
                    },
                    "referencedDeclaration": 7901,
                    "src": "4932:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$7901_storage_ptr",
                      "typeString": "struct CosmosStaking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4931:20:17"
            },
            "scope": 8257,
            "src": "4843:154:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8258,
        "src": "387:4612:17"
      }
    ],
    "src": "33:4967:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2024-06-25T04:23:12.386Z",
  "devdoc": {
    "details": "Template contract of Atom staking pool. Delegation only can be updated through update() by bridge.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}