{
  "contractName": "CosmosStaking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_community",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_chainId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_delegatee",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "UpdateStaking",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accountBindMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegatee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_chainId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_delegatee",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_bindAccount",
          "type": "address"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCommunity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserDepositInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasDeposited",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "bindAccount",
              "type": "address"
            }
          ],
          "internalType": "struct CosmosStaking.StakingInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_community\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_chainId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_delegatee\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdateStaking\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountBindMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegatee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommunity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasDeposited\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bindAccount\",\"type\":\"address\"}],\"internalType\":\"struct CosmosStaking.StakingInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_chainId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_delegatee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_bindAccount\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Template contract of Atom staking pool. Delegation only can be updated through update() by bridge.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dapps/cosmos-atom/CosmosStaking.sol\":\"CosmosStaking\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x1304796e9cdc64294735b4222849a240363b2aff374bb58b7c728f8dc0f4aa75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87398b4ba8f7c7e6613a5967e5407a5af6807e753d326d5e3b8c29697d33e36\",\"dweb:/ipfs/QmWGzaF9UWB5rNW1h9kvkJaWSf95WkQZ7RVR3bJ24oVgwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x978847fbff92d66d27d8767402a90ba996970b1936b372406aa17f5492bd8dc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1414cb92779420b50d3e796b47bad6ea800ef1805bc6f9bf35a3ccb4e17db3dc\",\"dweb:/ipfs/QmaMzwYqLiivfaWSgqeaAPboBtJjVD1hSrH48p7ExJZ7DG\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x670a64416cace45b7f4037a2c1cd66a83fbc2a573621fcf6aeb6b917abffde52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a53de93c53876cf4383ef42f9148f7262145e6ac3b0b2d77ec8e12fccacc81\",\"dweb:/ipfs/QmYqDjDinmFVdMZMwHfNdVFmRrZG9MR9LFfpnDxJAQegJB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]},\"project:/contracts/Community.sol\":{\"keccak256\":\"0xfc6e71ea2417741d5ba19763d533ffd815b41ef931c69a1242bae54c154fa048\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://423f44c86b40dd3858d2c4dc69e632f27061383252a0650f98e6725e398bd854\",\"dweb:/ipfs/Qmam3cdgAD6nqpiR6JoVy3hbZYcak9yKsPVqtn5C8NyPDC\"]},\"project:/contracts/CommunityFactory.sol\":{\"keccak256\":\"0x651020221943be888ac06515c91ba57fb85a427ee46fe23e86db6eadfb3a2bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c05ef23811ecbda8079d230bc0e69c0b6fd8eb8411d10883c4313a786e78cbbb\",\"dweb:/ipfs/QmNms3YHXUFuY2nE5HkGHFtkRmpj5qffyXgSpmC4pZYgC6\"]},\"project:/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xddf2a441a9c0714ecc5c14ad5ee6c3ffa2e8155292229574369156004d2bcd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167987fa430b1303ad04b831fa610d31ca3f4202ad847e87cd9bb01156cfe9e0\",\"dweb:/ipfs/Qmf7a5unwgdUWTPfWZ94QRxVVxic12feERMNeC6krcmLmZ\"]},\"project:/contracts/community-token/MintableERC20.sol\":{\"keccak256\":\"0xd49c97ab428cd65d2326ad6875aed0082716bbfd094e5fd11cfafc6f778adcf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87da6adb416be4cfa38f6e08989390558297791f362cc237bee8c33080d3bd20\",\"dweb:/ipfs/QmYgQbaazS4L9KVvUhDq7pMxZGhCM8USrgJyjAsLkXDfLX\"]},\"project:/contracts/dapps/cosmos-atom/CosmosStaking.sol\":{\"keccak256\":\"0xaef5d30c62f8d081edda1aa60e4a5528f8cdd581ac1c03e8b495fdf84de0ed8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bf81f6e7b162b723d0c2a00ea8cabc04b1886e5605c8945e5849167bc46513e\",\"dweb:/ipfs/QmaZNX5nQQMrm2wBw887wJ3Bym6MvizXRTXA7PRiuLSVsZ\"]},\"project:/contracts/dapps/cosmos-atom/CosmosStakingFactory.sol\":{\"keccak256\":\"0xaaa20fb7bc305081ac902906e422cbe677c18388e235692059b82517cb21a3f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f8b46941c67ec628f37dc18d03459e797929aca5720e133185cfa66e0f3f9e3\",\"dweb:/ipfs/QmZ1AXeYCWqoAbECE16qyDo1Chy2ZreCNpSCqiKtv1mZCe\"]},\"project:/contracts/interfaces/ICalculator.sol\":{\"keccak256\":\"0x85e62c5ec77229d1e44b2c838b259829093e616ddbb887261eeaadd11c83c70a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8433eb15b4035948768e8707cae178742fc32fd60813dbba845d177ea87a89c7\",\"dweb:/ipfs/QmRByWaN4DZcSUyJABp1PViBDkBfQuHVAvqeU6FwqTPW9K\"]},\"project:/contracts/interfaces/ICommittee.sol\":{\"keccak256\":\"0x2190b0279cab5723ca36a492c45aad3b43f4f705d1df7d81e2932733b371397e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccd2ccfbbb75866a710e334056949888006443fd92404c66f22a2ffbd3a41acf\",\"dweb:/ipfs/QmUE1FEe5qLTp4TTrv9YBPgo97bdjABwUsRkZxkVcmXkUv\"]},\"project:/contracts/interfaces/ICommunity.sol\":{\"keccak256\":\"0x9c8f1379634fc9df3fc965ebd5c11976ce3d71aab8996f8efe903aa4a3042811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e3fe744d29ff2f477050a263547fb192ee52180359d469b1cf1f79062f9db4\",\"dweb:/ipfs/QmcpTdndc9H2PmhTJgF5qabCotM74swULzMKCYDbDAACvp\"]},\"project:/contracts/interfaces/ICommunityTokenFactory.sol\":{\"keccak256\":\"0x9a69a2d0752d3002d55ec2734724891fdab03de0a88e15ff297d85a3878924b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54fcdeb38c2292e11b14d0ff2b2d772ab8e14ce56d080685fede2f38749ff1d\",\"dweb:/ipfs/QmZdUicfe2kiGG5WaYpYN9yzNoXN7X3AmCMaosF4Vj6kzz\"]},\"project:/contracts/interfaces/IGauge.sol\":{\"keccak256\":\"0xafa9311f14cf7617763940d265d51448c613e574e6cbcdbb4412bd76ca7ae1fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d69b9acd6a010f1e8f5e0f3f533633a360c3f9d128d43c5191cc7e3d0864244\",\"dweb:/ipfs/QmQfwcyuTHGaw8xM9jwA9YzrxaKUSXTKNYobGwXLeCYus8\"]},\"project:/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xedea7672bb9703bcf57a6bbf386e4b528f55a698a08bc7c4481400738671ac83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20c0e753aa731e11ebe3e2918c863a4e72400983bb466660d3580ce4d9fbcf4\",\"dweb:/ipfs/QmUi3uZ9HVmZDAgyTTvWTPMtov2SudhFdSJ7jGLf8w3eis\"]},\"project:/contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0x690fa318a561b45e70ceee542a68746d8b72a98c4ff83abb177c3e3710190fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91b6a4e9de1e1f01065c329d197dfd1f4d9a0996397f9f79b846804d75b1d2bd\",\"dweb:/ipfs/Qmc1eCVjE1xnQx2uMPkhAz5i3ohDDjEoVmJ5SZ8mdytScP\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b506040516200124c3803806200124c833981016040819052620000349162000189565b33606090811b60805284901b6001600160601b03191660a052825162000062906002906020860190620000b4565b50600380546001600160a01b0319166001600160a01b039290921691909117905560f81b7fff000000000000000000000000000000000000000000000000000000000000001660c05250620003199050565b828054620000c29062000294565b90600052602060002090601f016020900481019282620000e6576000855562000131565b82601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b5b808211156200013f576000815560010162000144565b80516001600160a01b03811681146200017257600080fd5b919050565b805160ff811681146200017257600080fd5b600080600080608085870312156200019f578384fd5b620001aa856200015a565b602086810151919550906001600160401b0380821115620001c9578586fd5b818801915088601f830112620001dd578586fd5b815181811115620001f257620001f2620002ea565b604051601f8201601f1916810185018381118282101715620002185762000218620002ea565b60405281815283820185018b10156200022f578788fd5b8792505b8183101562000252578383018501518184018601529184019162000233565b818311156200026357878583830101525b8097505050505050620002796040860162000177565b915062000289606086016200015a565b905092959194509250565b600281046001821680620002a957607f821691505b60208210811415620002e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60805160601c60a05160601c60c05160f81c610ebb6200039160003960006102c40152600081816103d901528181610546015281816105f6015281816106a00152818161078801528181610840015281816108e901526109f80152600081816102120152818161057301526109610152610ebb6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806388cc58e41161006657806388cc58e41461010857806394465b2114610110578063b3a7834d14610123578063c51db6b214610143578063e73df6741461014b5761009e565b806306fdde03146100a35780631e31d053146100c15780632b8509a7146100d657806338adb6f0146100eb578063567e98f914610100575b600080fd5b6100ab61015e565b6040516100b89190610ba0565b60405180910390f35b6100c96101ec565b6040516100b89190610b59565b6100e96100e4366004610af5565b6101fb565b005b6100f3610953565b6040516100b89190610d93565b6100f3610959565b6100c961095f565b6100f361011e366004610aa3565b610983565b610136610131366004610aa3565b6109a6565b6040516100b89190610d67565b6100c96109f6565b6100c9610159366004610aa3565b610a1a565b6002805461016b90610e34565b80601f016020809104026020016040519081016040528092919081815260200182805461019790610e34565b80156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b505050505081565b6003546001600160a01b031681565b6040516372923f6d60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e5247eda906102499088903390600401610daa565b60206040518083038186803b15801561026157600080fd5b505afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610abd565b6102be5760405162461bcd60e51b81526004016102b590610c9a565b60405180910390fd5b8460ff167f000000000000000000000000000000000000000000000000000000000000000060ff16146103035760405162461bcd60e51b81526004016102b590610d08565b6003546001600160a01b038581169116146103305760405162461bcd60e51b81526004016102b590610c63565b6001600160a01b0381811660009081526020819052604090205416158061037357506001600160a01b038181166000908152602081905260409020548116908416145b61038f5760405162461bcd60e51b81526004016102b590610cd1565b6001600160a01b03831660009081526001602081905260409091200154828114156103ba575061094c565b8281101561047a57604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a9061040e903090600401610b59565b60206040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610abd565b61047a5760405162461bcd60e51b81526004016102b590610c22565b6001600160a01b03841660009081526001602052604090205460ff166104f0576001600160a01b038085166000818152600160208181526040808420805460ff19169093178355600290920180549588166001600160a01b0319968716811790915583528290529020805490921617905561052f565b6001600160a01b0384811660009081526001602052604090206002015481169083161461052f5760405162461bcd60e51b81526004016102b590610d30565b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f29061059b907f000000000000000000000000000000000000000000000000000000000000000090600401610bf3565b600060405180830381600087803b1580156105b557600080fd5b505af11580156105c9573d6000803e3d6000fd5b505050506001600160a01b03841660009081526001602081905260409091200154156107f45760006107697f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630886040518363ffffffff1660e01b8152600401610642929190610b6d565b60206040518083038186803b15801561065a57600080fd5b505afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610add565b61076364e8d4a5100061075d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016106ea9190610b59565b60206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610add565b6001600160a01b038b166000908152600160208190526040909120015490610a35565b90610a48565b90610a54565b905080156107f257604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b7208906107bf9088908590600401610b87565b600060405180830381600087803b1580156107d957600080fd5b505af11580156107ed573d6000803e3d6000fd5b505050505b505b61080d8161076385600454610a6090919063ffffffff16565b60049081556001600160a01b03808616600090815260016020819052604091829020018690555163286a276f60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169163bf16c3c291879161088e9164e8d4a510009161075d91879163a1a89dbc916106ea91309101610b59565b6040518363ffffffff1660e01b81526004016108ab929190610b87565b600060405180830381600087803b1580156108c557600080fd5b505af11580156108d9573d6000803e3d6000fd5b50505050836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8572960e25f62a888f92ba98fda1ca3cba3fc98b664e8ae79fdc97a644c7bae48386604051610942929190610d9c565b60405180910390a3505b5050505050565b60045490565b60045481565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038116600090815260016020819052604090912001545b919050565b6109ae610a6c565b506001600160a01b039081166000908152600160208181526040928390208351606081018552815460ff16151581529281015491830191909152600201549092169082015290565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000602081905290815260409020546001600160a01b031681565b6000610a418284610dfe565b9392505050565b6000610a418284610dde565b6000610a418284610e1d565b6000610a418284610dc6565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b03811681146109a157600080fd5b600060208284031215610ab4578081fd5b610a4182610a8c565b600060208284031215610ace578081fd5b81518015158114610a41578182fd5b600060208284031215610aee578081fd5b5051919050565b600080600080600060a08688031215610b0c578081fd5b853560ff81168114610b1c578182fd5b9450610b2a60208701610a8c565b9350610b3860408701610a8c565b925060608601359150610b4d60808701610a8c565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080835283518082850152825b81811015610bcc57858101830151858201604001528201610bb0565b81811115610bdd5783604083870101525b50601f01601f1916929092016040019392505050565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b60208082526017908201527f57726f6e672064656c656761746565206163636f756e74000000000000000000604082015260600190565b6020808252601d908201527f4f6e6c79207665726966696564206272696467652063616e2063616c6c000000604082015260600190565b6020808252601a908201527f426f756e6420627363206163636f756e74206469736d61746368000000000000604082015260600190565b6020808252600e908201526d15dc9bdb99c818da185a5b881a5960921b604082015260600190565b6020808252601d908201527f426f756e6420636f736d6f73206163636f756e74206469736d61746368000000604082015260600190565b815115158152602080830151908201526040918201516001600160a01b03169181019190915260600190565b90815260200190565b918252602082015260400190565b60ff9290921682526001600160a01b0316602082015260400190565b60008219821115610dd957610dd9610e6f565b500190565b600082610df957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e1857610e18610e6f565b500290565b600082821015610e2f57610e2f610e6f565b500390565b600281046001821680610e4857607f821691505b60208210811415610e6957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220c5c1f4117be040549d961875d6462f868d10e23919d534c7ec0d198195a5c6cc64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806388cc58e41161006657806388cc58e41461010857806394465b2114610110578063b3a7834d14610123578063c51db6b214610143578063e73df6741461014b5761009e565b806306fdde03146100a35780631e31d053146100c15780632b8509a7146100d657806338adb6f0146100eb578063567e98f914610100575b600080fd5b6100ab61015e565b6040516100b89190610ba0565b60405180910390f35b6100c96101ec565b6040516100b89190610b59565b6100e96100e4366004610af5565b6101fb565b005b6100f3610953565b6040516100b89190610d93565b6100f3610959565b6100c961095f565b6100f361011e366004610aa3565b610983565b610136610131366004610aa3565b6109a6565b6040516100b89190610d67565b6100c96109f6565b6100c9610159366004610aa3565b610a1a565b6002805461016b90610e34565b80601f016020809104026020016040519081016040528092919081815260200182805461019790610e34565b80156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b505050505081565b6003546001600160a01b031681565b6040516372923f6d60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e5247eda906102499088903390600401610daa565b60206040518083038186803b15801561026157600080fd5b505afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610abd565b6102be5760405162461bcd60e51b81526004016102b590610c9a565b60405180910390fd5b8460ff167f000000000000000000000000000000000000000000000000000000000000000060ff16146103035760405162461bcd60e51b81526004016102b590610d08565b6003546001600160a01b038581169116146103305760405162461bcd60e51b81526004016102b590610c63565b6001600160a01b0381811660009081526020819052604090205416158061037357506001600160a01b038181166000908152602081905260409020548116908416145b61038f5760405162461bcd60e51b81526004016102b590610cd1565b6001600160a01b03831660009081526001602081905260409091200154828114156103ba575061094c565b8281101561047a57604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a9061040e903090600401610b59565b60206040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610abd565b61047a5760405162461bcd60e51b81526004016102b590610c22565b6001600160a01b03841660009081526001602052604090205460ff166104f0576001600160a01b038085166000818152600160208181526040808420805460ff19169093178355600290920180549588166001600160a01b0319968716811790915583528290529020805490921617905561052f565b6001600160a01b0384811660009081526001602052604090206002015481169083161461052f5760405162461bcd60e51b81526004016102b590610d30565b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f29061059b907f000000000000000000000000000000000000000000000000000000000000000090600401610bf3565b600060405180830381600087803b1580156105b557600080fd5b505af11580156105c9573d6000803e3d6000fd5b505050506001600160a01b03841660009081526001602081905260409091200154156107f45760006107697f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630886040518363ffffffff1660e01b8152600401610642929190610b6d565b60206040518083038186803b15801561065a57600080fd5b505afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610add565b61076364e8d4a5100061075d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016106ea9190610b59565b60206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610add565b6001600160a01b038b166000908152600160208190526040909120015490610a35565b90610a48565b90610a54565b905080156107f257604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b7208906107bf9088908590600401610b87565b600060405180830381600087803b1580156107d957600080fd5b505af11580156107ed573d6000803e3d6000fd5b505050505b505b61080d8161076385600454610a6090919063ffffffff16565b60049081556001600160a01b03808616600090815260016020819052604091829020018690555163286a276f60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169163bf16c3c291879161088e9164e8d4a510009161075d91879163a1a89dbc916106ea91309101610b59565b6040518363ffffffff1660e01b81526004016108ab929190610b87565b600060405180830381600087803b1580156108c557600080fd5b505af11580156108d9573d6000803e3d6000fd5b50505050836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8572960e25f62a888f92ba98fda1ca3cba3fc98b664e8ae79fdc97a644c7bae48386604051610942929190610d9c565b60405180910390a3505b5050505050565b60045490565b60045481565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038116600090815260016020819052604090912001545b919050565b6109ae610a6c565b506001600160a01b039081166000908152600160208181526040928390208351606081018552815460ff16151581529281015491830191909152600201549092169082015290565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000602081905290815260409020546001600160a01b031681565b6000610a418284610dfe565b9392505050565b6000610a418284610dde565b6000610a418284610e1d565b6000610a418284610dc6565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b03811681146109a157600080fd5b600060208284031215610ab4578081fd5b610a4182610a8c565b600060208284031215610ace578081fd5b81518015158114610a41578182fd5b600060208284031215610aee578081fd5b5051919050565b600080600080600060a08688031215610b0c578081fd5b853560ff81168114610b1c578182fd5b9450610b2a60208701610a8c565b9350610b3860408701610a8c565b925060608601359150610b4d60808701610a8c565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080835283518082850152825b81811015610bcc57858101830151858201604001528201610bb0565b81811115610bdd5783604083870101525b50601f01601f1916929092016040019392505050565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b60208082526017908201527f57726f6e672064656c656761746565206163636f756e74000000000000000000604082015260600190565b6020808252601d908201527f4f6e6c79207665726966696564206272696467652063616e2063616c6c000000604082015260600190565b6020808252601a908201527f426f756e6420627363206163636f756e74206469736d61746368000000000000604082015260600190565b6020808252600e908201526d15dc9bdb99c818da185a5b881a5960921b604082015260600190565b6020808252601d908201527f426f756e6420636f736d6f73206163636f756e74206469736d61746368000000604082015260600190565b815115158152602080830151908201526040918201516001600160a01b03169181019190915260600190565b90815260200190565b918252602082015260400190565b60ff9290921682526001600160a01b0316602082015260400190565b60008219821115610dd957610dd9610e6f565b500190565b600082610df957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e1857610e18610e6f565b500290565b600082821015610e2f57610e2f610e6f565b500390565b600281046001821680610e4857607f821691505b60208210811415610e6957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220c5c1f4117be040549d961875d6462f868d10e23919d534c7ec0d198195a5c6cc64736f6c63430008000033",
  "immutableReferences": {
    "10508": [
      {
        "length": 32,
        "start": 530
      },
      {
        "length": 32,
        "start": 1395
      },
      {
        "length": 32,
        "start": 2401
      }
    ],
    "10512": [
      {
        "length": 32,
        "start": 985
      },
      {
        "length": 32,
        "start": 1350
      },
      {
        "length": 32,
        "start": 1526
      },
      {
        "length": 32,
        "start": 1696
      },
      {
        "length": 32,
        "start": 1928
      },
      {
        "length": 32,
        "start": 2112
      },
      {
        "length": 32,
        "start": 2281
      },
      {
        "length": 32,
        "start": 2552
      }
    ],
    "10516": [
      {
        "length": 32,
        "start": 708
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2363:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "76:117:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "86:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "101:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "95:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "95:13:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "171:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "180:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "183:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "173:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "173:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "173:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "130:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "141:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "156:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "161:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "152:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "152:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "165:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "148:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "148:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "137:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "137:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "127:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "117:2:50"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "55:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "66:5:50",
                "type": ""
              }
            ],
            "src": "14:179:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "258:102:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "268:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "283:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "277:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:13:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "268:5:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "312:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "323:5:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "330:4:50",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "319:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "319:16:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "309:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "309:27:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "299:2:50"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "237:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "248:5:50",
                "type": ""
              }
            ],
            "src": "198:162:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "505:1225:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "552:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "561:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "569:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "554:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "554:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "554:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "526:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "535:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "522:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "522:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "547:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "518:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "518:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "515:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "587:52:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "629:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "597:31:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:42:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "587:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "648:12:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "658:2:50",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "652:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "669:39:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "693:9:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "704:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "689:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "689:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "683:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:25:50"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "673:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "717:28:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "735:2:50",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "739:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "731:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "731:10:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "743:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "727:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:18:50"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "721:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "772:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "781:6:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "789:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "774:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "774:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "774:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "760:6:50"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "768:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "757:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "757:14:50"
                  },
                  "nodeType": "YulIf",
                  "src": "754:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "807:32:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "821:9:50"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "832:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "817:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:22:50"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "811:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "887:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "896:6:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "904:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "889:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "889:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "889:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "866:2:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "870:4:50",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "862:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "862:13:50"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "877:7:50"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "858:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "858:27:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "851:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "851:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "848:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "922:19:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "938:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "932:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "932:9:50"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "926:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "964:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "966:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "966:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "966:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "956:2:50"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "960:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "953:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:10:50"
                  },
                  "nodeType": "YulIf",
                  "src": "950:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "995:23:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1015:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1009:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:9:50"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "999:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1027:67:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1053:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1069:2:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1073:4:50",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1065:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1065:13:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1084:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1080:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1080:7:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1061:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1061:27:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1049:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1049:40:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1091:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1045:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1045:49:50"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1031:10:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1153:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1155:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1155:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1155:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1112:10:50"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1124:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1109:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1109:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1132:10:50"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1144:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1129:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1129:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1106:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:46:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1103:2:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1191:2:50",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1195:10:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1184:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1184:22:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1184:22:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1222:6:50"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1230:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1215:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:18:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1215:18:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1279:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1288:6:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1296:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1281:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1281:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1281:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1256:2:50"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1260:2:50"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1252:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1252:11:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1265:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1248:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1248:20:50"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1270:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1245:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1245:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1242:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1314:15:50",
                  "value": {
                    "name": "value1",
                    "nodeType": "YulIdentifier",
                    "src": "1323:6:50"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1318:1:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1384:83:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1413:6:50"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1421:1:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1409:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1409:14:50"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1425:2:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1405:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1405:23:50"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1444:2:50"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1448:1:50"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1440:3:50"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1440:10:50"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1452:2:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1436:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1436:19:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1430:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1430:26:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1398:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1398:59:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1398:59:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1349:1:50"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1352:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1346:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:9:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1356:19:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1358:15:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1367:1:50"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1370:2:50"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1363:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1363:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1358:1:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1342:3:50",
                    "statements": []
                  },
                  "src": "1338:129:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1497:64:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1526:6:50"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1534:2:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1522:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1522:15:50"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1539:2:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1518:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1518:24:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1544:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1511:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1511:40:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1511:40:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1482:1:50"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1485:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1479:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1479:9:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1476:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1570:16:50",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1580:6:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1570:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1595:59:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1639:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1650:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1635:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1635:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_uint8_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1605:29:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1605:49:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1595:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1663:61:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1709:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1720:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1705:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1705:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1673:31:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1673:51:50"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1663:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_uint8t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "447:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "458:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "470:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "478:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "486:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "494:6:50",
                "type": ""
              }
            ],
            "src": "365:1365:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1790:382:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1800:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1814:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1820:1:50",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1810:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1810:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1800:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1831:38:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1861:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1867:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1857:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1857:12:50"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1835:18:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1908:31:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1910:27:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1924:6:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1932:4:50",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1920:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1920:17:50"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1910:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1888:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1881:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1881:26:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1878:2:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1998:168:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2019:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2022:77:50",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2012:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2012:88:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2012:88:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2120:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2123:4:50",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2113:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2113:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2113:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2148:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2151:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2141:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2141:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2141:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1954:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1977:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1985:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1974:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1974:14:50"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1951:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1951:38:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1948:2:50"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1770:4:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1779:6:50",
                "type": ""
              }
            ],
            "src": "1735:437:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2209:152:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2226:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2229:77:50",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2219:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2219:88:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2219:88:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2323:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2326:4:50",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2316:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2316:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2316:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2347:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2350:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2340:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2340:15:50"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2177:184:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint8t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value1)\n        }\n        value1 := memPtr\n        value2 := abi_decode_t_uint8_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_address_fromMemory(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7804:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:50"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:50",
                "type": ""
              }
            ],
            "src": "14:175:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:50",
                "type": ""
              }
            ],
            "src": "194:198:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "475:219:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "521:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "530:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "538:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "523:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "523:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "523:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "496:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "505:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "492:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "492:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "488:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "485:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "556:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "575:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "569:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "569:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "560:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "647:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "655:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "640:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "640:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "640:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "607:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "628:5:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "621:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "621:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "614:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "614:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "604:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "597:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:40:50"
                  },
                  "nodeType": "YulIf",
                  "src": "594:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "673:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "683:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "673:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "441:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "452:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "464:6:50",
                "type": ""
              }
            ],
            "src": "397:297:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:113:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "877:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "871:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:16:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "746:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "757:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "769:6:50",
                "type": ""
              }
            ],
            "src": "699:194:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1034:451:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1081:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1090:6:50"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1098:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1083:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1083:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1083:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1055:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1064:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1051:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1051:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1076:3:50",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1047:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1047:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1044:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1116:36:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1142:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1129:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1129:23:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1120:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1200:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1209:6:50"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1217:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1202:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1202:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1202:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1174:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1185:5:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1192:4:50",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1181:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1181:16:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1171:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:27:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1164:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1164:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1161:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1235:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1245:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1235:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1259:50:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1294:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1305:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1290:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1290:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1269:20:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1269:40:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1259:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1318:50:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1353:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1364:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1349:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1349:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1328:20:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1328:40:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1318:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1377:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1404:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1415:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1400:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1400:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1387:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1377:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1428:51:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1463:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1474:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1459:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1459:19:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1438:20:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:41:50"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1428:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_addresst_addresst_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "968:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "979:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "991:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "999:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1007:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1015:6:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1023:6:50",
                "type": ""
              }
            ],
            "src": "898:587:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1591:102:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1601:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1613:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1624:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1609:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1609:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1601:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1643:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1658:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1674:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1679:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1670:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1670:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1683:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1666:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1666:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1654:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1654:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1636:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1636:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1636:51:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1560:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1571:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1582:4:50",
                "type": ""
              }
            ],
            "src": "1490:203:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1827:175:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1837:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1849:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1860:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1845:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1837:4:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1872:29:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1890:3:50",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1895:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1886:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1886:11:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1899:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:19:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1876:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1917:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1932:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1940:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1928:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1928:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1910:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1910:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1964:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1975:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1960:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1960:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1984:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1992:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1980:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1980:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1953:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1953:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1953:43:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1788:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1799:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1807:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1818:4:50",
                "type": ""
              }
            ],
            "src": "1698:304:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2136:145:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2146:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2158:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2169:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2154:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2154:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2146:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2188:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2203:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2219:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2224:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2215:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2215:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2228:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2211:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2211:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2199:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2199:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2181:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2181:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2181:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2252:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2263:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2248:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2248:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2268:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2241:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2241:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2241:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2097:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2108:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2116:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2127:4:50",
                "type": ""
              }
            ],
            "src": "2007:274:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2407:482:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2417:12:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2427:2:50",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2421:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2445:9:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2456:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2438:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2438:21:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2468:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2488:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2482:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2482:13:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2472:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2515:9:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2526:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2511:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2511:18:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2531:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2504:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2504:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2504:34:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2547:13:50",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "2556:4:50"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2551:1:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2619:90:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2648:9:50"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2659:1:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2644:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2644:17:50"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2663:2:50",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2640:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2640:26:50"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2682:6:50"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2690:1:50"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2678:3:50"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2678:14:50"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2694:2:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2674:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2674:23:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2668:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2668:30:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2633:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2633:66:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2633:66:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2580:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2583:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2577:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2577:13:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2591:19:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2593:15:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2602:1:50"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2605:2:50"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2598:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2598:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2593:1:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2573:3:50",
                    "statements": []
                  },
                  "src": "2569:140:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2743:69:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2772:9:50"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2783:6:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2768:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2768:22:50"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2792:2:50",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2764:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2764:31:50"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2797:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2757:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2757:45:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2757:45:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2724:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2727:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2721:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2721:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2718:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2821:62:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2837:9:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2856:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2864:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2852:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2852:15:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2873:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2869:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2869:7:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2848:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2848:29:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2833:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2833:45:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2880:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2829:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2829:54:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2821:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2376:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2387:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2398:4:50",
                "type": ""
              }
            ],
            "src": "2286:603:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3096:225:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3113:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3124:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3106:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3106:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3106:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3147:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3158:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3143:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3143:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3163:1:50",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3136:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:29:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3136:29:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3185:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3196:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3181:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3181:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3201:6:50",
                        "type": "",
                        "value": "USER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3174:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3174:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3174:34:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3217:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3229:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3240:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3225:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3225:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3217:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3264:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3275:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3260:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3260:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3286:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3302:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3307:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3298:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3298:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3311:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3294:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3294:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3282:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3282:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3253:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3253:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3253:62:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3065:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3076:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3087:4:50",
                "type": ""
              }
            ],
            "src": "2894:427:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3500:223:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3517:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3528:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3510:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3510:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3510:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3551:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3562:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3547:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3547:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3567:2:50",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3540:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3540:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3540:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3590:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3601:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3586:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3586:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3606:34:50",
                        "type": "",
                        "value": "Can not deposit to a closed pool"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3579:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3579:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3579:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3661:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3672:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3657:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3657:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3677:3:50",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3650:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3650:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3650:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3690:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3702:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3713:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3698:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3690:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3477:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3491:4:50",
                "type": ""
              }
            ],
            "src": "3326:397:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3902:173:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3919:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3930:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3912:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3912:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3912:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3953:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3964:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3949:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3949:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3969:2:50",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3942:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3942:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3942:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3992:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4003:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3988:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3988:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4008:25:50",
                        "type": "",
                        "value": "Wrong delegatee account"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3981:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3981:53:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3981:53:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4043:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4055:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4066:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4051:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4051:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4043:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3879:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3893:4:50",
                "type": ""
              }
            ],
            "src": "3728:347:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4254:179:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4271:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4282:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4264:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4264:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4264:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4305:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4316:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4301:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4301:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4321:2:50",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4294:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4294:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4344:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4355:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4340:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4340:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4360:31:50",
                        "type": "",
                        "value": "Only verified bridge can call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4333:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4333:59:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4333:59:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4401:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4413:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4424:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4409:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4409:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4401:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4231:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4245:4:50",
                "type": ""
              }
            ],
            "src": "4080:353:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4612:176:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4629:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4640:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4622:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4622:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4622:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4663:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4674:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4659:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4659:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4679:2:50",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4652:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4652:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4652:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4702:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4713:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4698:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4698:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4718:28:50",
                        "type": "",
                        "value": "Bound bsc account dismatch"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4691:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4691:56:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4691:56:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4756:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4768:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4779:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4764:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4764:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4756:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4589:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4603:4:50",
                "type": ""
              }
            ],
            "src": "4438:350:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4967:164:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4984:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4995:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4977:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4977:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4977:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5018:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5029:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5014:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5014:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5034:2:50",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5007:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5007:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5007:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5057:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5068:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5053:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5053:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5073:16:50",
                        "type": "",
                        "value": "Wrong chain id"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5046:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5046:44:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5046:44:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5099:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5111:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5122:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5107:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5107:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5099:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4944:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4958:4:50",
                "type": ""
              }
            ],
            "src": "4793:338:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5310:179:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5327:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5338:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5320:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5320:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5320:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5361:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5372:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5357:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5357:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5377:2:50",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5350:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5350:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5350:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5400:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5411:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5396:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5396:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5416:31:50",
                        "type": "",
                        "value": "Bound cosmos account dismatch"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5389:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5389:59:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5389:59:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5457:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5469:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5480:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5465:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5465:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5457:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c611608eaac0c2321c98c0920e24d27d55374bb72a04940ddf1879fbb22fdc10__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5287:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5301:4:50",
                "type": ""
              }
            ],
            "src": "5136:353:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5655:251:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5665:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5677:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5688:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5673:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5673:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5665:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5707:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5738:6:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5732:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5732:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5725:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5725:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5718:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5718:29:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5700:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5700:48:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5700:48:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5768:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5779:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5764:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5764:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5796:6:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5804:4:50",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5792:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5792:17:50"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5786:5:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5786:24:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5757:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5757:54:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5757:54:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5831:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5842:4:50",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5827:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5827:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5863:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5871:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5859:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5859:17:50"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5853:5:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5853:24:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5887:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5892:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5883:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5883:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5896:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5879:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5879:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5849:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5849:50:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5820:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5820:80:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5820:80:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_StakingInfo_$10497_memory_ptr__to_t_struct$_StakingInfo_$10497_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5624:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5635:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5646:4:50",
                "type": ""
              }
            ],
            "src": "5494:412:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6012:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6022:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6034:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6045:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6030:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6030:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6022:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6064:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6075:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6057:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6057:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6057:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5981:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5992:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6003:4:50",
                "type": ""
              }
            ],
            "src": "5911:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6222:119:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6232:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6244:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6255:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6240:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6240:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6232:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6274:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6285:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6267:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6267:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6267:25:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6312:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6323:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6308:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6308:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6328:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6301:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6301:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6301:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6183:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6194:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6202:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6213:4:50",
                "type": ""
              }
            ],
            "src": "6093:248:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6471:156:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6481:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6493:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6504:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6489:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6489:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6481:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6523:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6538:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6546:4:50",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6534:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6534:17:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6516:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6516:36:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6516:36:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6572:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6583:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6568:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6568:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6592:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6608:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6613:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6604:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6604:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6617:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6600:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6600:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6588:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6588:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6561:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6561:60:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6561:60:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8_t_address__to_t_uint8_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6432:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6443:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6451:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6462:4:50",
                "type": ""
              }
            ],
            "src": "6346:281:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6680:80:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6707:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6709:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6709:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6709:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6696:1:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6703:1:50"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6699:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6699:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6693:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6693:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "6690:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6738:16:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6749:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6752:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6745:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6745:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6738:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6663:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6666:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6672:3:50",
                "type": ""
              }
            ],
            "src": "6632:128:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6811:171:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6842:111:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "6863:1:50"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6870:3:50",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6875:10:50",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6866:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6866:20:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6856:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6856:31:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6856:31:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6907:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6910:4:50",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6900:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6900:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6900:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "6935:1:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6938:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6928:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6928:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6928:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6831:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6824:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6824:9:50"
                  },
                  "nodeType": "YulIf",
                  "src": "6821:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6962:14:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6971:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6974:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6967:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6967:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6962:1:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6796:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6799:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6805:1:50",
                "type": ""
              }
            ],
            "src": "6765:217:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7039:116:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7098:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7100:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7100:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7100:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7070:1:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7063:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7063:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7056:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7056:17:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7078:1:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7089:1:50",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7085:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7085:6:50"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7093:1:50"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7081:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7081:14:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7075:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7075:21:50"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7052:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7052:45:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7049:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7129:20:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7144:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7147:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7140:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7140:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7129:7:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7018:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7021:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7027:7:50",
                "type": ""
              }
            ],
            "src": "6987:168:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7209:76:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7231:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7233:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7233:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7233:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7225:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7228:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7222:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7222:8:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7219:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7262:17:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7274:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7277:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7270:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7270:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7262:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7191:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7194:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7200:4:50",
                "type": ""
              }
            ],
            "src": "7160:125:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7345:325:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7355:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7369:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7375:1:50",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7365:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7365:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7355:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7386:38:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7416:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7422:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7412:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7412:12:50"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7390:18:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7463:31:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7465:27:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7479:6:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7487:4:50",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7475:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7475:17:50"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7465:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7443:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7436:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7436:26:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7433:2:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7553:111:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7574:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7581:3:50",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7586:10:50",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7577:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7577:20:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7567:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7567:31:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7567:31:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7618:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7621:4:50",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7611:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7611:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7611:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7646:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7649:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7639:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7639:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7639:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7509:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7532:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7540:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7529:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7529:14:50"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7506:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7506:38:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7503:2:50"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7325:4:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7334:6:50",
                "type": ""
              }
            ],
            "src": "7290:380:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7707:95:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7724:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7731:3:50",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7736:10:50",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7727:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7727:20:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7717:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7717:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7717:31:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7764:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7767:4:50",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7757:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7757:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7757:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7788:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7791:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7781:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7781:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7781:15:50"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7675:127:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8t_addresst_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value4, value4) }\n        value0 := value\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_t_address(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 4)\n        mstore(add(headStart, 96), \"USER\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Can not deposit to a closed pool\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Wrong delegatee account\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only verified bridge can call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Bound bsc account dismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Wrong chain id\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c611608eaac0c2321c98c0920e24d27d55374bb72a04940ddf1879fbb22fdc10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Bound cosmos account dismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_StakingInfo_$10497_memory_ptr__to_t_struct$_StakingInfo_$10497_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(mload(value0))))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint8_t_address__to_t_uint8_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "387:4612:34:-:0;;;1771:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1880:10;1870:20;;;;;;1900:22;;;-1:-1:-1;;1900:22:34;;;1932:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1954:9:34;:22;;-1:-1:-1;;;;;;1954:22:34;-1:-1:-1;;;;;1954:22:34;;;;;;;;;;1986:18;;-1:-1:-1;;;;;;1986:18:34;;;-1:-1:-1;387:4612:34;;-1:-1:-1;387:4612:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:4612:34;;;-1:-1:-1;387:4612:34;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:50;95:13;;-1:-1:-1;;;;;137:31:50;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:162::-;277:13;;330:4;319:16;;309:27;;299:2;;350:1;347;340:12;365:1365;;;;;547:3;535:9;526:7;522:23;518:33;515:2;;;569:6;561;554:22;515:2;597:42;629:9;597:42;:::i;:::-;658:2;689:18;;;683:25;587:52;;-1:-1:-1;658:2:50;-1:-1:-1;757:14:50;;;754:2;;;789:6;781;774:22;754:2;832:6;821:9;817:22;807:32;;877:7;870:4;866:2;862:13;858:27;848:2;;904:6;896;889:22;848:2;938;932:9;960:2;956;953:10;950:2;;;966:18;;:::i;:::-;1015:2;1009:9;-1:-1:-1;;1084:2:50;1065:13;;1061:27;1049:40;;1045:49;;1129:22;;;1109:18;;;1106:46;1103:2;;;1155:18;;:::i;:::-;1191:2;1184:22;1215:18;;;1252:11;;;1248:20;;1245:33;-1:-1:-1;1242:2:50;;;1296:6;1288;1281:22;1242:2;1323:6;1314:15;;1338:129;1352:2;1349:1;1346:9;1338:129;;;1440:10;;;1436:19;;1430:26;1409:14;;;1405:23;;1398:59;1363:10;;;;1338:129;;;1485:2;1482:1;1479:9;1476:2;;;1544:6;1539:2;1534;1526:6;1522:15;1518:24;1511:40;1476:2;1580:6;1570:16;;;;;;;1605:49;1650:2;1639:9;1635:18;1605:49;:::i;:::-;1595:59;;1673:51;1720:2;1709:9;1705:18;1673:51;:::i;:::-;1663:61;;505:1225;;;;;;;:::o;1735:437::-;1820:1;1810:12;;1867:1;1857:12;;;1878:2;;1932:4;1924:6;1920:17;1910:27;;1878:2;1985;1977:6;1974:14;1954:18;1951:38;1948:2;;;-1:-1:-1;;;2019:1:50;2012:88;2123:4;2120:1;2113:15;2151:4;2148:1;2141:15;1948:2;;1790:382;;;:::o;2177:184::-;-1:-1:-1;;;2226:1:50;2219:88;2326:4;2323:1;2316:15;2350:4;2347:1;2340:15;2209:152;387:4612:34;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "387:4612:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1195:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1456:24;;;:::i;:::-;;;;;;;:::i;2017:2302::-;;;;;;:::i;:::-;;:::i;:::-;;4695:142;;;:::i;:::-;;;;;;;:::i;1577:32::-;;;:::i;4325:94::-;;;:::i;4529:160::-;;;;;;:::i;:::-;;:::i;4843:154::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4425:98::-;;;:::i;765:49::-;;;;;;:::i;:::-;;:::i;1195:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1456:24::-;;;-1:-1:-1;;;;;1456:24:34;;:::o;2017:2302::-;2199:60;;-1:-1:-1;;;2199:60:34;;2220:7;-1:-1:-1;;;;;2199:38:34;;;;:60;;2238:8;;2248:10;;2199:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2191:102;;;;-1:-1:-1;;;2191:102:34;;;;;;;:::i;:::-;;;;;;;;;2322:8;2311:19;;:7;:19;;;2303:46;;;;-1:-1:-1;;;2303:46:34;;;;;;;:::i;:::-;2367:9;;-1:-1:-1;;;;;2367:23:34;;;:9;;:23;2359:59;;;;-1:-1:-1;;;2359:59:34;;;;;;;:::i;:::-;-1:-1:-1;;;;;2436:28:34;;;2476:1;2436:28;;;;;;;;;;;;:42;;:87;;-1:-1:-1;;;;;;2482:28:34;;;:14;:28;;;;;;;;;;;:41;;;:28;;:41;2436:87;2428:126;;;;-1:-1:-1;;;2428:126:34;;;;;;;:::i;:::-;-1:-1:-1;;;;;2586:22:34;;2565:18;2586:22;;;-1:-1:-1;2586:22:34;;;;;;;;:29;;2629:20;;;2625:33;;;2651:7;;;2625:33;2684:6;2671:10;:19;2667:167;;;2737:48;;-1:-1:-1;;;2737:48:34;;2748:9;-1:-1:-1;;;;;2737:33:34;;;;:48;;2779:4;;2737:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2729:94;;;;-1:-1:-1;;;2729:94:34;;;;;;;:::i;:::-;-1:-1:-1;;;;;2915:22:34;;;;;;-1:-1:-1;2915:22:34;;;;;:35;;;2910:378;;-1:-1:-1;;;;;2966:22:34;;;;;;;-1:-1:-1;2966:22:34;;;;;;;;:42;;-1:-1:-1;;2966:42:34;;;;;;3022:34;;;;:49;;;;;-1:-1:-1;;;;;;3022:49:34;;;;;;;;3085:28;;;;;;;:40;;;;;;;;2910:378;;;-1:-1:-1;;;;;3164:22:34;;;;;;;-1:-1:-1;3164:22:34;;;;;:34;;;:50;;;:34;;:50;3156:121;;;;-1:-1:-1;;;3156:121:34;;;;;;;:::i;:::-;3406:50;;-1:-1:-1;;;3406:50:34;;3417:9;-1:-1:-1;;;;;3406:33:34;;;;:50;;3448:7;;3406:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;3471:22:34;;3503:1;3471:22;;;-1:-1:-1;3471:22:34;;;;;;;;:29;;:33;3467:429;;3704:59;;-1:-1:-1;;;3704:59:34;;3520:15;;3538:226;;-1:-1:-1;;;;;3715:9:34;3704:33;;;;:59;;3746:4;;3753:9;;3704:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3606:48;;-1:-1:-1;;;3606:48:34;;3538:144;;3677:4;;3538:117;;-1:-1:-1;;;;;3617:9:34;3606:33;;;;:48;;3648:4;;3606:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3538:22:34;;;;;;-1:-1:-1;3538:22:34;;;;;;;;:46;;;:67;:117::i;:::-;:138;;:144::i;:::-;:165;;:226::i;:::-;3520:244;-1:-1:-1;3782:11:34;;3778:108;;3813:58;;-1:-1:-1;;;3813:58:34;;3824:9;-1:-1:-1;;;;;3813:38:34;;;;:58;;3852:9;;3863:7;;3813:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3778:108;3467:429;;3926:45;3960:10;3926:29;3948:6;3926:17;;:21;;:29;;;;:::i;:45::-;3906:17;:65;;;-1:-1:-1;;;;;3981:22:34;;;;;;;-1:-1:-1;3981:22:34;;;;;;;;;:29;:38;;;4160:48;-1:-1:-1;;;4160:48:34;;4041:9;4030:33;;;;;;3981:22;;4100:132;;4227:4;;4100:109;;4030:33;;4160;;:48;;4202:4;;4160:48;;:::i;4100:132::-;4030:203;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4257:55:34;;-1:-1:-1;;;;;4257:55:34;;;;-1:-1:-1;4271:9:34;4257:55;;-1:-1:-1;4257:55:34;;;;4293:10;;4305:6;;4257:55;:::i;:::-;;;;;;;;2017:2302;;;;;;;:::o;4695:142::-;4813:17;;4695:142;:::o;1577:32::-;;;;:::o;4325:94::-;4405:7;4325:94;:::o;4529:160::-;-1:-1:-1;;;;;4658:17:34;;4628:7;4658:17;;;-1:-1:-1;4658:17:34;;;;;;;;:24;;4529:160;;;;:::o;4843:154::-;4932:18;;:::i;:::-;-1:-1:-1;;;;;;4973:17:34;;;;;;;-1:-1:-1;4973:17:34;;;;;;;;;4966:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4843:154::o;4425:98::-;4507:9;4425:98;:::o;765:49::-;;;;;;;;;;;;;-1:-1:-1;;;;;765:49:34;;:::o;3451:96:19:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:19:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;3108:96::-;3166:7;3192:5;3196:1;3192;:5;:::i;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:175:50:-;84:20;;-1:-1:-1;;;;;133:31:50;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:297::-;;517:2;505:9;496:7;492:23;488:32;485:2;;;538:6;530;523:22;485:2;575:9;569:16;628:5;621:13;614:21;607:5;604:32;594:2;;655:6;647;640:22;699:194;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;-1:-1:-1;871:16:50;;780:113;-1:-1:-1;780:113:50:o;898:587::-;;;;;;1076:3;1064:9;1055:7;1051:23;1047:33;1044:2;;;1098:6;1090;1083:22;1044:2;1142:9;1129:23;1192:4;1185:5;1181:16;1174:5;1171:27;1161:2;;1217:6;1209;1202:22;1161:2;1245:5;-1:-1:-1;1269:40:50;1305:2;1290:18;;1269:40;:::i;:::-;1259:50;;1328:40;1364:2;1353:9;1349:18;1328:40;:::i;:::-;1318:50;;1415:2;1404:9;1400:18;1387:32;1377:42;;1438:41;1474:3;1463:9;1459:19;1438:41;:::i;:::-;1428:51;;1034:451;;;;;;;;:::o;1490:203::-;-1:-1:-1;;;;;1654:32:50;;;;1636:51;;1624:2;1609:18;;1591:102::o;1698:304::-;-1:-1:-1;;;;;1928:15:50;;;1910:34;;1980:15;;1975:2;1960:18;;1953:43;1860:2;1845:18;;1827:175::o;2007:274::-;-1:-1:-1;;;;;2199:32:50;;;;2181:51;;2263:2;2248:18;;2241:34;2169:2;2154:18;;2136:145::o;2286:603::-;;2427:2;2456;2445:9;2438:21;2488:6;2482:13;2531:6;2526:2;2515:9;2511:18;2504:34;2556:4;2569:140;2583:6;2580:1;2577:13;2569:140;;;2678:14;;;2674:23;;2668:30;2644:17;;;2663:2;2640:26;2633:66;2598:10;;2569:140;;;2727:6;2724:1;2721:13;2718:2;;;2797:4;2792:2;2783:6;2772:9;2768:22;2764:31;2757:45;2718:2;-1:-1:-1;2873:2:50;2852:15;-1:-1:-1;;2848:29:50;2833:45;;;;2880:2;2829:54;;2407:482;-1:-1:-1;;;2407:482:50:o;2894:427::-;3124:2;3106:21;;;3163:1;3143:18;;;3136:29;-1:-1:-1;;;3196:2:50;3181:18;;3174:34;-1:-1:-1;;;;;3282:32:50;;;;3275:4;3260:20;;3253:62;3240:3;3225:19;;3096:225::o;3326:397::-;3528:2;3510:21;;;3567:2;3547:18;;;3540:30;3606:34;3601:2;3586:18;;3579:62;-1:-1:-1;;;3672:2:50;3657:18;;3650:31;3713:3;3698:19;;3500:223::o;3728:347::-;3930:2;3912:21;;;3969:2;3949:18;;;3942:30;4008:25;4003:2;3988:18;;3981:53;4066:2;4051:18;;3902:173::o;4080:353::-;4282:2;4264:21;;;4321:2;4301:18;;;4294:30;4360:31;4355:2;4340:18;;4333:59;4424:2;4409:18;;4254:179::o;4438:350::-;4640:2;4622:21;;;4679:2;4659:18;;;4652:30;4718:28;4713:2;4698:18;;4691:56;4779:2;4764:18;;4612:176::o;4793:338::-;4995:2;4977:21;;;5034:2;5014:18;;;5007:30;-1:-1:-1;;;5068:2:50;5053:18;;5046:44;5122:2;5107:18;;4967:164::o;5136:353::-;5338:2;5320:21;;;5377:2;5357:18;;;5350:30;5416:31;5411:2;5396:18;;5389:59;5480:2;5465:18;;5310:179::o;5494:412::-;5732:13;;5725:21;5718:29;5700:48;;5804:4;5792:17;;;5786:24;5764:20;;;5757:54;5871:4;5859:17;;;5853:24;-1:-1:-1;;;;;5849:50:50;5827:20;;;5820:80;;;;5688:2;5673:18;;5655:251::o;5911:177::-;6057:25;;;6045:2;6030:18;;6012:76::o;6093:248::-;6267:25;;;6323:2;6308:18;;6301:34;6255:2;6240:18;;6222:119::o;6346:281::-;6546:4;6534:17;;;;6516:36;;-1:-1:-1;;;;;6588:32:50;6583:2;6568:18;;6561:60;6504:2;6489:18;;6471:156::o;6632:128::-;;6703:1;6699:6;6696:1;6693:13;6690:2;;;6709:18;;:::i;:::-;-1:-1:-1;6745:9:50;;6680:80::o;6765:217::-;;6831:1;6821:2;;-1:-1:-1;;;6856:31:50;;6910:4;6907:1;6900:15;6938:4;6856:31;6928:15;6821:2;-1:-1:-1;6967:9:50;;6811:171::o;6987:168::-;;7093:1;7089;7085:6;7081:14;7078:1;7075:21;7070:1;7063:9;7056:17;7052:45;7049:2;;;7100:18;;:::i;:::-;-1:-1:-1;7140:9:50;;7039:116::o;7160:125::-;;7228:1;7225;7222:8;7219:2;;;7233:18;;:::i;:::-;-1:-1:-1;7270:9:50;;7209:76::o;7290:380::-;7375:1;7365:12;;7422:1;7412:12;;;7433:2;;7487:4;7479:6;7475:17;7465:27;;7433:2;7540;7532:6;7529:14;7509:18;7506:38;7503:2;;;7586:10;7581:3;7577:20;7574:1;7567:31;7621:4;7618:1;7611:15;7649:4;7646:1;7639:15;7503:2;;7345:325;;;:::o;7675:127::-;7736:10;7731:3;7727:20;7724:1;7717:31;7767:4;7764:1;7757:15;7791:4;7788:1;7781:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"../../interfaces/ICommunity.sol\";\nimport \"../../interfaces/IPool.sol\";\nimport \"./CosmosStakingFactory.sol\";\n\n/**\n * @dev Template contract of Atom staking pool.\n * Delegation only can be updated through update() by bridge.\n *\n */\ncontract CosmosStaking is IPool {\n    using SafeMath for uint256;\n\n    struct StakingInfo {\n        // First time when user staking, we need set options like userDebt to zero\n        bool hasDeposited;\n        // User staked amount\n        uint256 amount;\n        // User's foreign account identity\n        address bindAccount;\n    }\n\n    // fetch address use bound account\n    mapping(address => address) public accountBindMap;\n\n    // stakingInfo used to save every user's staking information,\n    // including how many they deposited and its external chain account\n    // ( we support crosschain asset staking). With every staking event\n    // happened including deposit and withdraw asset this field should be updated.\n    mapping(address => StakingInfo) stakingInfo;\n\n    address immutable factory;\n    string public name;\n\n    // community that pool belongs to\n    address immutable community;\n    // delegatee account,the pubkey of cosmos is bytes20, so here encode it to address\n    // It should be convert to specify format to the corresponding blockchain\n    address public delegatee;\n    // chain id: atom: 3  osmo: 4\n    uint8 immutable chainId;\n\n    // Total staked amount\n    uint256 public totalStakedAmount;\n\n    event UpdateStaking(\n        address indexed community,\n        address indexed who,\n        uint256 previousAmount,\n        uint256 newAmount\n    );\n\n    constructor(address _community, string memory _name, uint8 _chainId, address _delegatee) {\n        factory = msg.sender;\n        community = _community;\n        name = _name;\n        delegatee = _delegatee;\n        chainId = _chainId;\n    }\n\n    function update(\n        uint8 _chainId,\n        address _delegatee,\n        address depositor,\n        uint256 amount,\n        address _bindAccount\n    ) external {\n        require(CosmosStakingFactory(factory).isBridge(_chainId, msg.sender), \"Only verified bridge can call\");\n        require(chainId == _chainId, \"Wrong chain id\");\n        require(delegatee == _delegatee, \"Wrong delegatee account\");\n        require(accountBindMap[_bindAccount] == address(0) || accountBindMap[_bindAccount] == depositor, \"Bound bsc account dismatch\");\n\n        uint256 prevAmount = stakingInfo[depositor].amount;\n        if (prevAmount == amount) return;\n        if (prevAmount < amount) {\n            // deposit\n            require(ICommunity(community).poolActived(address(this)), 'Can not deposit to a closed pool.');\n        }\n\n        // Add to staking list if account hasn't deposited before\n        if (!stakingInfo[depositor].hasDeposited) {\n            stakingInfo[depositor].hasDeposited = true;\n            stakingInfo[depositor].bindAccount = _bindAccount;\n            accountBindMap[_bindAccount] = depositor;\n        } else {\n            require(stakingInfo[depositor].bindAccount == _bindAccount,\n                \"Bound cosmos account dismatch\"\n            );\n        }\n\n        // trigger community update all pool staking info, send factory as fee payer to ignore fee payment.\n        ICommunity(community).updatePools(\"USER\", factory);\n\n        if (stakingInfo[depositor].amount > 0) {\n            uint256 pending = stakingInfo[depositor]\n                .amount\n                .mul(ICommunity(community).getShareAcc(address(this)))\n                .div(1e12)\n                .sub(ICommunity(community).getUserDebt(address(this), depositor));\n            if (pending > 0) {\n                ICommunity(community).appendUserReward(depositor, pending);\n            }\n        }\n\n        totalStakedAmount = totalStakedAmount.add(amount).sub(prevAmount);\n        stakingInfo[depositor].amount = amount;\n\n        ICommunity(community).setUserDebt(\n            depositor,\n            stakingInfo[depositor]\n            .amount\n            .mul(ICommunity(community).getShareAcc(address(this)))\n            .div(1e12));\n        \n        emit UpdateStaking(community, depositor, prevAmount, amount);\n    }\n\n    function getFactory() external view override returns (address) {\n        return factory;\n    }\n\n    function getCommunity() external view override returns (address) {\n        return community;\n    }\n\n    function getUserStakedAmount(address user)\n        external\n        view\n        override returns (uint256)\n    {\n        return stakingInfo[user].amount;\n    }\n\n    function getTotalStakedAmount()\n        external\n        view\n        override returns (uint256)\n    {\n        return totalStakedAmount;\n    }\n\n    function getUserDepositInfo(address user)\n        external\n        view\n        returns (StakingInfo memory)\n    {\n        return stakingInfo[user];\n    }\n}\n",
  "sourcePath": "/Users/necklace/work/nutbox/nutbox-contract/contracts/dapps/cosmos-atom/CosmosStaking.sol",
  "ast": {
    "absolutePath": "project:/contracts/dapps/cosmos-atom/CosmosStaking.sol",
    "exportedSymbols": {
      "AccessControl": [
        308
      ],
      "AccessControlEnumerable": [
        433
      ],
      "BytesLib": [
        13487
      ],
      "Community": [
        5075
      ],
      "CommunityFactory": [
        5333
      ],
      "Context": [
        1837
      ],
      "CosmosStaking": [
        10853
      ],
      "CosmosStakingFactory": [
        11061
      ],
      "ERC165": [
        2064
      ],
      "ERC20": [
        1477
      ],
      "ERC20Burnable": [
        1617
      ],
      "ERC20Helper": [
        5540
      ],
      "ERC20Pausable": [
        1654
      ],
      "ERC20PresetMinterPauser": [
        1815
      ],
      "EnumerableSet": [
        2987
      ],
      "IAccessControl": [
        506
      ],
      "IAccessControlEnumerable": [
        531
      ],
      "ICalculator": [
        12950
      ],
      "ICommittee": [
        13021
      ],
      "ICommunity": [
        13075
      ],
      "ICommunityTokenFactory": [
        13087
      ],
      "IERC165": [
        2076
      ],
      "IERC20": [
        1555
      ],
      "IERC20Metadata": [
        1679
      ],
      "IGauge": [
        13111
      ],
      "IPool": [
        13138
      ],
      "IPoolFactory": [
        13154
      ],
      "MintableERC20": [
        10371
      ],
      "Ownable": [
        636
      ],
      "Pausable": [
        728
      ],
      "SafeMath": [
        2388
      ],
      "Strings": [
        2040
      ]
    },
    "id": 10854,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10479,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:34"
      },
      {
        "id": 10480,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:34"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 10481,
        "nodeType": "ImportDirective",
        "scope": 10854,
        "sourceUnit": 2389,
        "src": "91:57:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ICommunity.sol",
        "file": "../../interfaces/ICommunity.sol",
        "id": 10482,
        "nodeType": "ImportDirective",
        "scope": 10854,
        "sourceUnit": 13076,
        "src": "149:41:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPool.sol",
        "file": "../../interfaces/IPool.sol",
        "id": 10483,
        "nodeType": "ImportDirective",
        "scope": 10854,
        "sourceUnit": 13139,
        "src": "191:36:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/dapps/cosmos-atom/CosmosStakingFactory.sol",
        "file": "./CosmosStakingFactory.sol",
        "id": 10484,
        "nodeType": "ImportDirective",
        "scope": 10854,
        "sourceUnit": 11062,
        "src": "228:36:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10486,
              "name": "IPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13138,
              "src": "413:5:34"
            },
            "id": 10487,
            "nodeType": "InheritanceSpecifier",
            "src": "413:5:34"
          }
        ],
        "contractDependencies": [
          13138
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 10485,
          "nodeType": "StructuredDocumentation",
          "src": "266:120:34",
          "text": " @dev Template contract of Atom staking pool.\n Delegation only can be updated through update() by bridge."
        },
        "fullyImplemented": true,
        "id": 10853,
        "linearizedBaseContracts": [
          10853,
          13138
        ],
        "name": "CosmosStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10490,
            "libraryName": {
              "id": 10488,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2388,
              "src": "431:8:34"
            },
            "nodeType": "UsingForDirective",
            "src": "425:27:34",
            "typeName": {
              "id": 10489,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "444:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "CosmosStaking.StakingInfo",
            "id": 10497,
            "members": [
              {
                "constant": false,
                "id": 10492,
                "mutability": "mutable",
                "name": "hasDeposited",
                "nodeType": "VariableDeclaration",
                "scope": 10497,
                "src": "570:17:34",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10491,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "570:4:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10494,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 10497,
                "src": "627:14:34",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10493,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "627:7:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10496,
                "mutability": "mutable",
                "name": "bindAccount",
                "nodeType": "VariableDeclaration",
                "scope": 10497,
                "src": "694:19:34",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10495,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "694:7:34",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nodeType": "StructDefinition",
            "scope": 10853,
            "src": "458:262:34",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e73df674",
            "id": 10501,
            "mutability": "mutable",
            "name": "accountBindMap",
            "nodeType": "VariableDeclaration",
            "scope": 10853,
            "src": "765:49:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 10500,
              "keyType": {
                "id": 10498,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "773:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "765:27:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 10499,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "784:7:34",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10506,
            "mutability": "mutable",
            "name": "stakingInfo",
            "nodeType": "VariableDeclaration",
            "scope": 10853,
            "src": "1114:43:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
              "typeString": "mapping(address => struct CosmosStaking.StakingInfo)"
            },
            "typeName": {
              "id": 10505,
              "keyType": {
                "id": 10502,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:31:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                "typeString": "mapping(address => struct CosmosStaking.StakingInfo)"
              },
              "valueType": {
                "id": 10504,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 10503,
                  "name": "StakingInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10497,
                  "src": "1133:11:34"
                },
                "referencedDeclaration": 10497,
                "src": "1133:11:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$10497_storage_ptr",
                  "typeString": "struct CosmosStaking.StakingInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10508,
            "mutability": "immutable",
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "scope": 10853,
            "src": "1164:25:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10507,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1164:7:34",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 10510,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 10853,
            "src": "1195:18:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 10509,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1195:6:34",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10512,
            "mutability": "immutable",
            "name": "community",
            "nodeType": "VariableDeclaration",
            "scope": 10853,
            "src": "1258:27:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10511,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1258:7:34",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1e31d053",
            "id": 10514,
            "mutability": "mutable",
            "name": "delegatee",
            "nodeType": "VariableDeclaration",
            "scope": 10853,
            "src": "1456:24:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10513,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1456:7:34",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10516,
            "mutability": "immutable",
            "name": "chainId",
            "nodeType": "VariableDeclaration",
            "scope": 10853,
            "src": "1520:23:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 10515,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1520:5:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "567e98f9",
            "id": 10518,
            "mutability": "mutable",
            "name": "totalStakedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 10853,
            "src": "1577:32:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10517,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1577:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 10528,
            "name": "UpdateStaking",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10520,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 10528,
                  "src": "1645:25:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10522,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 10528,
                  "src": "1680:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10524,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10528,
                  "src": "1709:22:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10526,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10528,
                  "src": "1741:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1635:129:34"
            },
            "src": "1616:149:34"
          },
          {
            "body": {
              "id": 10560,
              "nodeType": "Block",
              "src": "1860:151:34",
              "statements": [
                {
                  "expression": {
                    "id": 10542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10539,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10508,
                      "src": "1870:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10540,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1880:3:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1880:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1870:20:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10543,
                  "nodeType": "ExpressionStatement",
                  "src": "1870:20:34"
                },
                {
                  "expression": {
                    "id": 10546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10544,
                      "name": "community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10512,
                      "src": "1900:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10545,
                      "name": "_community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10530,
                      "src": "1912:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1900:22:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10547,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:22:34"
                },
                {
                  "expression": {
                    "id": 10550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10548,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10510,
                      "src": "1932:4:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10549,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10532,
                      "src": "1939:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1932:12:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10551,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:12:34"
                },
                {
                  "expression": {
                    "id": 10554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10552,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10514,
                      "src": "1954:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10553,
                      "name": "_delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10536,
                      "src": "1966:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1954:22:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10555,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:22:34"
                },
                {
                  "expression": {
                    "id": 10558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10556,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10516,
                      "src": "1986:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10557,
                      "name": "_chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10534,
                      "src": "1996:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1986:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 10559,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:18:34"
                }
              ]
            },
            "id": 10561,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10530,
                  "mutability": "mutable",
                  "name": "_community",
                  "nodeType": "VariableDeclaration",
                  "scope": 10561,
                  "src": "1783:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10532,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10561,
                  "src": "1803:19:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10531,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10534,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10561,
                  "src": "1824:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10533,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10536,
                  "mutability": "mutable",
                  "name": "_delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 10561,
                  "src": "1840:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:77:34"
            },
            "returnParameters": {
              "id": 10538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1860:0:34"
            },
            "scope": 10853,
            "src": "1771:240:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10797,
              "nodeType": "Block",
              "src": "2181:2138:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10579,
                            "name": "_chainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10563,
                            "src": "2238:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "expression": {
                              "id": 10580,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2248:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2248:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 10576,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10508,
                                "src": "2220:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10575,
                              "name": "CosmosStakingFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11061,
                              "src": "2199:20:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CosmosStakingFactory_$11061_$",
                                "typeString": "type(contract CosmosStakingFactory)"
                              }
                            },
                            "id": 10577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2199:29:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CosmosStakingFactory_$11061",
                              "typeString": "contract CosmosStakingFactory"
                            }
                          },
                          "id": 10578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isBridge",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10875,
                          "src": "2199:38:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint8,address) view external returns (bool)"
                          }
                        },
                        "id": 10582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2199:60:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207665726966696564206272696467652063616e2063616c6c",
                        "id": 10583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2261:31:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d",
                          "typeString": "literal_string \"Only verified bridge can call\""
                        },
                        "value": "Only verified bridge can call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d",
                          "typeString": "literal_string \"Only verified bridge can call\""
                        }
                      ],
                      "id": 10574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2191:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2191:102:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10585,
                  "nodeType": "ExpressionStatement",
                  "src": "2191:102:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 10589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10587,
                          "name": "chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10516,
                          "src": "2311:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10588,
                          "name": "_chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10563,
                          "src": "2322:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2311:19:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720636861696e206964",
                        "id": 10590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2332:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30",
                          "typeString": "literal_string \"Wrong chain id\""
                        },
                        "value": "Wrong chain id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30",
                          "typeString": "literal_string \"Wrong chain id\""
                        }
                      ],
                      "id": 10586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2303:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:46:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10592,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:46:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10594,
                          "name": "delegatee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10514,
                          "src": "2367:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10595,
                          "name": "_delegatee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10565,
                          "src": "2380:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2367:23:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672064656c656761746565206163636f756e74",
                        "id": 10597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:25:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4",
                          "typeString": "literal_string \"Wrong delegatee account\""
                        },
                        "value": "Wrong delegatee account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4",
                          "typeString": "literal_string \"Wrong delegatee account\""
                        }
                      ],
                      "id": 10593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2359:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2359:59:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10599,
                  "nodeType": "ExpressionStatement",
                  "src": "2359:59:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 10601,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10501,
                              "src": "2436:14:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 10603,
                            "indexExpression": {
                              "id": 10602,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10571,
                              "src": "2451:12:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2436:28:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 10606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2476:1:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 10605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2468:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10604,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2468:7:34",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2468:10:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2436:42:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 10609,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10501,
                              "src": "2482:14:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 10611,
                            "indexExpression": {
                              "id": 10610,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10571,
                              "src": "2497:12:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2482:28:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 10612,
                            "name": "depositor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10567,
                            "src": "2514:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2482:41:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2436:87:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f756e6420627363206163636f756e74206469736d61746368",
                        "id": 10615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:28:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1",
                          "typeString": "literal_string \"Bound bsc account dismatch\""
                        },
                        "value": "Bound bsc account dismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1",
                          "typeString": "literal_string \"Bound bsc account dismatch\""
                        }
                      ],
                      "id": 10600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2428:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:126:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10617,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:126:34"
                },
                {
                  "assignments": [
                    10619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10619,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 10797,
                      "src": "2565:18:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10618,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2565:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10624,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 10620,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10506,
                        "src": "2586:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                          "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 10622,
                      "indexExpression": {
                        "id": 10621,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10567,
                        "src": "2598:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2586:22:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                        "typeString": "struct CosmosStaking.StakingInfo storage ref"
                      }
                    },
                    "id": 10623,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10494,
                    "src": "2586:29:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2565:50:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10625,
                      "name": "prevAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10619,
                      "src": "2629:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 10626,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10569,
                      "src": "2643:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2629:20:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10629,
                  "nodeType": "IfStatement",
                  "src": "2625:33:34",
                  "trueBody": {
                    "functionReturnParameters": 10573,
                    "id": 10628,
                    "nodeType": "Return",
                    "src": "2651:7:34"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10630,
                      "name": "prevAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10619,
                      "src": "2671:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 10631,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10569,
                      "src": "2684:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2671:19:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10647,
                  "nodeType": "IfStatement",
                  "src": "2667:167:34",
                  "trueBody": {
                    "id": 10646,
                    "nodeType": "Block",
                    "src": "2692:142:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 10640,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "2779:4:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$10853",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$10853",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    ],
                                    "id": 10639,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2771:7:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 10638,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2771:7:34",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 10641,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2771:13:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 10635,
                                      "name": "community",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10512,
                                      "src": "2748:9:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 10634,
                                    "name": "ICommunity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13075,
                                    "src": "2737:10:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                      "typeString": "type(contract ICommunity)"
                                    }
                                  },
                                  "id": 10636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2737:21:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommunity_$13075",
                                    "typeString": "contract ICommunity"
                                  }
                                },
                                "id": 10637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "poolActived",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13032,
                                "src": "2737:33:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 10642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2737:48:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c2e",
                              "id": 10643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2787:35:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                                "typeString": "literal_string \"Can not deposit to a closed pool.\""
                              },
                              "value": "Can not deposit to a closed pool."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                                "typeString": "literal_string \"Can not deposit to a closed pool.\""
                              }
                            ],
                            "id": 10633,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2729:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2729:94:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10645,
                        "nodeType": "ExpressionStatement",
                        "src": "2729:94:34"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 10652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2914:36:34",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 10648,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10506,
                          "src": "2915:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 10650,
                        "indexExpression": {
                          "id": 10649,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10567,
                          "src": "2927:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2915:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 10651,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hasDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10492,
                      "src": "2915:35:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10684,
                    "nodeType": "Block",
                    "src": "3142:146:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 10680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 10675,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10506,
                                    "src": "3164:11:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                                      "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 10677,
                                  "indexExpression": {
                                    "id": 10676,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10567,
                                    "src": "3176:9:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3164:22:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                                    "typeString": "struct CosmosStaking.StakingInfo storage ref"
                                  }
                                },
                                "id": 10678,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bindAccount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10496,
                                "src": "3164:34:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 10679,
                                "name": "_bindAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10571,
                                "src": "3202:12:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3164:50:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426f756e6420636f736d6f73206163636f756e74206469736d61746368",
                              "id": 10681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3232:31:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c611608eaac0c2321c98c0920e24d27d55374bb72a04940ddf1879fbb22fdc10",
                                "typeString": "literal_string \"Bound cosmos account dismatch\""
                              },
                              "value": "Bound cosmos account dismatch"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c611608eaac0c2321c98c0920e24d27d55374bb72a04940ddf1879fbb22fdc10",
                                "typeString": "literal_string \"Bound cosmos account dismatch\""
                              }
                            ],
                            "id": 10674,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3156:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3156:121:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10683,
                        "nodeType": "ExpressionStatement",
                        "src": "3156:121:34"
                      }
                    ]
                  },
                  "id": 10685,
                  "nodeType": "IfStatement",
                  "src": "2910:378:34",
                  "trueBody": {
                    "id": 10673,
                    "nodeType": "Block",
                    "src": "2952:184:34",
                    "statements": [
                      {
                        "expression": {
                          "id": 10658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 10653,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10506,
                                "src": "2966:11:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                                  "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 10655,
                              "indexExpression": {
                                "id": 10654,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10567,
                                "src": "2978:9:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2966:22:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                                "typeString": "struct CosmosStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 10656,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "hasDeposited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10492,
                            "src": "2966:35:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 10657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3004:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2966:42:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10659,
                        "nodeType": "ExpressionStatement",
                        "src": "2966:42:34"
                      },
                      {
                        "expression": {
                          "id": 10665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 10660,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10506,
                                "src": "3022:11:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                                  "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 10662,
                              "indexExpression": {
                                "id": 10661,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10567,
                                "src": "3034:9:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3022:22:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                                "typeString": "struct CosmosStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 10663,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bindAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10496,
                            "src": "3022:34:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10664,
                            "name": "_bindAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10571,
                            "src": "3059:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3022:49:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10666,
                        "nodeType": "ExpressionStatement",
                        "src": "3022:49:34"
                      },
                      {
                        "expression": {
                          "id": 10671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 10667,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10501,
                              "src": "3085:14:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 10669,
                            "indexExpression": {
                              "id": 10668,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10571,
                              "src": "3100:12:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3085:28:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10670,
                            "name": "depositor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10567,
                            "src": "3116:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3085:40:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10672,
                        "nodeType": "ExpressionStatement",
                        "src": "3085:40:34"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "55534552",
                        "id": 10690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3440:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        "value": "USER"
                      },
                      {
                        "id": 10691,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10508,
                        "src": "3448:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10687,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10512,
                            "src": "3417:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10686,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13075,
                          "src": "3406:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 10688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3406:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$13075",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 10689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13074,
                      "src": "3406:33:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) external"
                      }
                    },
                    "id": 10692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3406:50:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10693,
                  "nodeType": "ExpressionStatement",
                  "src": "3406:50:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 10694,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10506,
                          "src": "3471:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 10696,
                        "indexExpression": {
                          "id": 10695,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10567,
                          "src": "3483:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3471:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 10697,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10494,
                      "src": "3471:29:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3503:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3471:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10747,
                  "nodeType": "IfStatement",
                  "src": "3467:429:34",
                  "trueBody": {
                    "id": 10746,
                    "nodeType": "Block",
                    "src": "3506:390:34",
                    "statements": [
                      {
                        "assignments": [
                          10701
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10701,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "scope": 10746,
                            "src": "3520:15:34",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10700,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3520:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10732,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 10727,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "3746:4:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$10853",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_CosmosStaking_$10853",
                                        "typeString": "contract CosmosStaking"
                                      }
                                    ],
                                    "id": 10726,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3738:7:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 10725,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3738:7:34",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 10728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3738:13:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 10729,
                                  "name": "depositor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10567,
                                  "src": "3753:9:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 10722,
                                      "name": "community",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10512,
                                      "src": "3715:9:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 10721,
                                    "name": "ICommunity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13075,
                                    "src": "3704:10:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                      "typeString": "type(contract ICommunity)"
                                    }
                                  },
                                  "id": 10723,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3704:21:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommunity_$13075",
                                    "typeString": "contract ICommunity"
                                  }
                                },
                                "id": 10724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getUserDebt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13053,
                                "src": "3704:33:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 10730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3704:59:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 10718,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3677:4:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 10713,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967268,
                                              "src": "3648:4:34",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_CosmosStaking_$10853",
                                                "typeString": "contract CosmosStaking"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_CosmosStaking_$10853",
                                                "typeString": "contract CosmosStaking"
                                              }
                                            ],
                                            "id": 10712,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3640:7:34",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 10711,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3640:7:34",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 10714,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3640:13:34",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 10708,
                                              "name": "community",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 10512,
                                              "src": "3617:9:34",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 10707,
                                            "name": "ICommunity",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13075,
                                            "src": "3606:10:34",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                              "typeString": "type(contract ICommunity)"
                                            }
                                          },
                                          "id": 10709,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3606:21:34",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ICommunity_$13075",
                                            "typeString": "contract ICommunity"
                                          }
                                        },
                                        "id": 10710,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getShareAcc",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 13039,
                                        "src": "3606:33:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 10715,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3606:48:34",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 10702,
                                          "name": "stakingInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10506,
                                          "src": "3538:11:34",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                          }
                                        },
                                        "id": 10704,
                                        "indexExpression": {
                                          "id": 10703,
                                          "name": "depositor",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10567,
                                          "src": "3550:9:34",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3538:22:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                                        }
                                      },
                                      "id": 10705,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10494,
                                      "src": "3538:46:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 10706,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2282,
                                    "src": "3538:67:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 10716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3538:117:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 10717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2297,
                                "src": "3538:138:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 10719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3538:144:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2267,
                            "src": "3538:165:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3538:226:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3520:244:34"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10733,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10701,
                            "src": "3782:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 10734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3792:1:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3782:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10745,
                        "nodeType": "IfStatement",
                        "src": "3778:108:34",
                        "trueBody": {
                          "id": 10744,
                          "nodeType": "Block",
                          "src": "3795:91:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10740,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10567,
                                    "src": "3852:9:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 10741,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10701,
                                    "src": "3863:7:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 10737,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10512,
                                        "src": "3824:9:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 10736,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13075,
                                      "src": "3813:10:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 10738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3813:21:34",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$13075",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 10739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "appendUserReward",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13060,
                                  "src": "3813:38:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 10742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3813:58:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 10743,
                              "nodeType": "ExpressionStatement",
                              "src": "3813:58:34"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10748,
                      "name": "totalStakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10518,
                      "src": "3906:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10754,
                          "name": "prevAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10619,
                          "src": "3960:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 10751,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10569,
                              "src": "3948:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10749,
                              "name": "totalStakedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10518,
                              "src": "3926:17:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2252,
                            "src": "3926:21:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3926:29:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2267,
                        "src": "3926:33:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3926:45:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3906:65:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10757,
                  "nodeType": "ExpressionStatement",
                  "src": "3906:65:34"
                },
                {
                  "expression": {
                    "id": 10763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10758,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10506,
                          "src": "3981:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                            "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 10760,
                        "indexExpression": {
                          "id": 10759,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10567,
                          "src": "3993:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3981:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                          "typeString": "struct CosmosStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 10761,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10494,
                      "src": "3981:29:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10762,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10569,
                      "src": "4013:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3981:38:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10764,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:38:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10769,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10567,
                        "src": "4077:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 10786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4227:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 10781,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "4202:4:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CosmosStaking_$10853",
                                          "typeString": "contract CosmosStaking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CosmosStaking_$10853",
                                          "typeString": "contract CosmosStaking"
                                        }
                                      ],
                                      "id": 10780,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4194:7:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 10779,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4194:7:34",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10782,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4194:13:34",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 10776,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10512,
                                        "src": "4171:9:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 10775,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13075,
                                      "src": "4160:10:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 10777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4160:21:34",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$13075",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 10778,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getShareAcc",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13039,
                                  "src": "4160:33:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 10783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4160:48:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 10770,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10506,
                                    "src": "4100:11:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                                      "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 10772,
                                  "indexExpression": {
                                    "id": 10771,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10567,
                                    "src": "4112:9:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4100:22:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                                    "typeString": "struct CosmosStaking.StakingInfo storage ref"
                                  }
                                },
                                "id": 10773,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10494,
                                "src": "4100:42:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2282,
                              "src": "4100:59:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4100:109:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 10785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2297,
                          "src": "4100:126:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 10787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4100:132:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10766,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10512,
                            "src": "4041:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10765,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13075,
                          "src": "4030:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 10767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4030:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$13075",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 10768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUserDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13067,
                      "src": "4030:33:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:203:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10789,
                  "nodeType": "ExpressionStatement",
                  "src": "4030:203:34"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10791,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10512,
                        "src": "4271:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10792,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10567,
                        "src": "4282:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10793,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10619,
                        "src": "4293:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10794,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10569,
                        "src": "4305:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10790,
                      "name": "UpdateStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10528,
                      "src": "4257:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 10795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4257:55:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10796,
                  "nodeType": "EmitStatement",
                  "src": "4252:60:34"
                }
              ]
            },
            "functionSelector": "2b8509a7",
            "id": 10798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10563,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10798,
                  "src": "2042:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10562,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10565,
                  "mutability": "mutable",
                  "name": "_delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 10798,
                  "src": "2066:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10567,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nodeType": "VariableDeclaration",
                  "scope": 10798,
                  "src": "2094:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2094:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10569,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10798,
                  "src": "2121:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10571,
                  "mutability": "mutable",
                  "name": "_bindAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10798,
                  "src": "2145:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2032:139:34"
            },
            "returnParameters": {
              "id": 10573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2181:0:34"
            },
            "scope": 10853,
            "src": "2017:2302:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13120
            ],
            "body": {
              "id": 10806,
              "nodeType": "Block",
              "src": "4388:31:34",
              "statements": [
                {
                  "expression": {
                    "id": 10804,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10508,
                    "src": "4405:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10803,
                  "id": 10805,
                  "nodeType": "Return",
                  "src": "4398:14:34"
                }
              ]
            },
            "functionSelector": "88cc58e4",
            "id": 10807,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFactory",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10800,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4361:8:34"
            },
            "parameters": {
              "id": 10799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4344:2:34"
            },
            "returnParameters": {
              "id": 10803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10802,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10807,
                  "src": "4379:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4379:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4378:9:34"
            },
            "scope": 10853,
            "src": "4325:94:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13125
            ],
            "body": {
              "id": 10815,
              "nodeType": "Block",
              "src": "4490:33:34",
              "statements": [
                {
                  "expression": {
                    "id": 10813,
                    "name": "community",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10512,
                    "src": "4507:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10812,
                  "id": 10814,
                  "nodeType": "Return",
                  "src": "4500:16:34"
                }
              ]
            },
            "functionSelector": "c51db6b2",
            "id": 10816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommunity",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10809,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4463:8:34"
            },
            "parameters": {
              "id": 10808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4446:2:34"
            },
            "returnParameters": {
              "id": 10812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10811,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10816,
                  "src": "4481:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4481:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4480:9:34"
            },
            "scope": 10853,
            "src": "4425:98:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13132
            ],
            "body": {
              "id": 10829,
              "nodeType": "Block",
              "src": "4641:48:34",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 10824,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10506,
                        "src": "4658:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                          "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 10826,
                      "indexExpression": {
                        "id": 10825,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10818,
                        "src": "4670:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4658:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                        "typeString": "struct CosmosStaking.StakingInfo storage ref"
                      }
                    },
                    "id": 10827,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10494,
                    "src": "4658:24:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10823,
                  "id": 10828,
                  "nodeType": "Return",
                  "src": "4651:31:34"
                }
              ]
            },
            "functionSelector": "94465b21",
            "id": 10830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10820,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4610:8:34"
            },
            "parameters": {
              "id": 10819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10818,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 10830,
                  "src": "4558:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4558:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4557:14:34"
            },
            "returnParameters": {
              "id": 10823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10822,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10830,
                  "src": "4628:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4628:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4627:9:34"
            },
            "scope": 10853,
            "src": "4529:160:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13137
            ],
            "body": {
              "id": 10838,
              "nodeType": "Block",
              "src": "4796:41:34",
              "statements": [
                {
                  "expression": {
                    "id": 10836,
                    "name": "totalStakedAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10518,
                    "src": "4813:17:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10835,
                  "id": 10837,
                  "nodeType": "Return",
                  "src": "4806:24:34"
                }
              ]
            },
            "functionSelector": "38adb6f0",
            "id": 10839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10832,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4765:8:34"
            },
            "parameters": {
              "id": 10831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4724:2:34"
            },
            "returnParameters": {
              "id": 10835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10834,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10839,
                  "src": "4783:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4782:9:34"
            },
            "scope": 10853,
            "src": "4695:142:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10851,
              "nodeType": "Block",
              "src": "4956:41:34",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 10847,
                      "name": "stakingInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10506,
                      "src": "4973:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$10497_storage_$",
                        "typeString": "mapping(address => struct CosmosStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 10849,
                    "indexExpression": {
                      "id": 10848,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "4985:4:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4973:17:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$10497_storage",
                      "typeString": "struct CosmosStaking.StakingInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 10846,
                  "id": 10850,
                  "nodeType": "Return",
                  "src": "4966:24:34"
                }
              ]
            },
            "functionSelector": "b3a7834d",
            "id": 10852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserDepositInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10841,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 10852,
                  "src": "4871:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4871:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4870:14:34"
            },
            "returnParameters": {
              "id": 10846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10845,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10852,
                  "src": "4932:18:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$10497_memory_ptr",
                    "typeString": "struct CosmosStaking.StakingInfo"
                  },
                  "typeName": {
                    "id": 10844,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10843,
                      "name": "StakingInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10497,
                      "src": "4932:11:34"
                    },
                    "referencedDeclaration": 10497,
                    "src": "4932:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$10497_storage_ptr",
                      "typeString": "struct CosmosStaking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4931:20:34"
            },
            "scope": 10853,
            "src": "4843:154:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10854,
        "src": "387:4612:34"
      }
    ],
    "src": "33:4967:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-27T12:17:35.172Z",
  "devdoc": {
    "details": "Template contract of Atom staking pool. Delegation only can be updated through update() by bridge.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}