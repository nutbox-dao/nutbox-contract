{
  "contractName": "ERC20Staking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_community",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_stakeToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCommunity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserDepositInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasDeposited",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20Staking.StakingInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_community\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommunity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasDeposited\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20Staking.StakingInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Template contract of Nutbox staking pool. Every pool saves a user staking ledger of a specific staking asset. The only place that user can deposit and withdraw their staked asset. Also only user themself than withdraw their staked asset\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dapps/erc20-staking/ERC20Staking.sol\":\"ERC20Staking\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x1304796e9cdc64294735b4222849a240363b2aff374bb58b7c728f8dc0f4aa75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87398b4ba8f7c7e6613a5967e5407a5af6807e753d326d5e3b8c29697d33e36\",\"dweb:/ipfs/QmWGzaF9UWB5rNW1h9kvkJaWSf95WkQZ7RVR3bJ24oVgwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x978847fbff92d66d27d8767402a90ba996970b1936b372406aa17f5492bd8dc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1414cb92779420b50d3e796b47bad6ea800ef1805bc6f9bf35a3ccb4e17db3dc\",\"dweb:/ipfs/QmaMzwYqLiivfaWSgqeaAPboBtJjVD1hSrH48p7ExJZ7DG\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x670a64416cace45b7f4037a2c1cd66a83fbc2a573621fcf6aeb6b917abffde52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a53de93c53876cf4383ef42f9148f7262145e6ac3b0b2d77ec8e12fccacc81\",\"dweb:/ipfs/QmYqDjDinmFVdMZMwHfNdVFmRrZG9MR9LFfpnDxJAQegJB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]},\"project:/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xddf2a441a9c0714ecc5c14ad5ee6c3ffa2e8155292229574369156004d2bcd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167987fa430b1303ad04b831fa610d31ca3f4202ad847e87cd9bb01156cfe9e0\",\"dweb:/ipfs/Qmf7a5unwgdUWTPfWZ94QRxVVxic12feERMNeC6krcmLmZ\"]},\"project:/contracts/dapps/erc20-staking/ERC20Staking.sol\":{\"keccak256\":\"0xe6684284e6bd969a0f46b89ea4be45b76b5028e590372d01e95000adc58ce865\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76c4b1f341d29ca038a270caccf7ac50eaf0518169d94b2e8ab757e9475b56a5\",\"dweb:/ipfs/QmW2eRVQaUTaVUErXXmvoHnDW7uGQbgm85sPSS7GFkhE6u\"]},\"project:/contracts/interfaces/ICommunity.sol\":{\"keccak256\":\"0x9c8f1379634fc9df3fc965ebd5c11976ce3d71aab8996f8efe903aa4a3042811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e3fe744d29ff2f477050a263547fb192ee52180359d469b1cf1f79062f9db4\",\"dweb:/ipfs/QmcpTdndc9H2PmhTJgF5qabCotM74swULzMKCYDbDAACvp\"]},\"project:/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xedea7672bb9703bcf57a6bbf386e4b528f55a698a08bc7c4481400738671ac83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20c0e753aa731e11ebe3e2918c863a4e72400983bb466660d3580ce4d9fbcf4\",\"dweb:/ipfs/QmUi3uZ9HVmZDAgyTTvWTPMtov2SudhFdSJ7jGLf8w3eis\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {
    "11771": [
      {
        "length": 32,
        "start": 1723
      }
    ],
    "11780": [
      {
        "length": 32,
        "start": 1271
      },
      {
        "length": 32,
        "start": 1681
      },
      {
        "length": 32,
        "start": 2519
      }
    ],
    "11782": [
      {
        "length": 32,
        "start": 603
      },
      {
        "length": 32,
        "start": 713
      },
      {
        "length": 32,
        "start": 883
      },
      {
        "length": 32,
        "start": 1106
      },
      {
        "length": 32,
        "start": 1398
      },
      {
        "length": 32,
        "start": 1567
      },
      {
        "length": 32,
        "start": 1915
      },
      {
        "length": 32,
        "start": 2162
      },
      {
        "length": 32,
        "start": 2299
      },
      {
        "length": 32,
        "start": 2406
      },
      {
        "length": 32,
        "start": 2647
      },
      {
        "length": 32,
        "start": 2816
      },
      {
        "length": 32,
        "start": 2921
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2112:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "76:117:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "86:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "101:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "95:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "95:13:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "171:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "180:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "183:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "173:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "173:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "173:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "130:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "141:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "156:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "161:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "152:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "152:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "165:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "148:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "148:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "137:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "137:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "127:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "117:2:50"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "55:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "66:5:50",
                "type": ""
              }
            ],
            "src": "14:179:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "323:1156:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "369:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "378:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "386:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "371:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "371:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "371:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "344:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "353:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "340:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "340:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "365:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "336:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "336:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "333:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "404:52:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "446:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "414:31:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "414:42:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "404:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "465:12:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "475:2:50",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "469:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "486:39:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "521:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "500:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:25:50"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "490:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "534:28:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "552:2:50",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "556:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "548:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "548:10:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "560:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "544:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:18:50"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "538:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "589:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "598:6:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "606:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "591:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "591:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "591:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "577:6:50"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "585:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "574:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "574:14:50"
                  },
                  "nodeType": "YulIf",
                  "src": "571:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "624:32:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "638:9:50"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "649:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "634:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "634:22:50"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "628:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "704:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "713:6:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "721:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "706:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "706:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "706:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "683:2:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "687:4:50",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "679:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "679:13:50"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "694:7:50"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "675:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "675:27:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "668:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "665:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "739:19:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "755:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "749:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "749:9:50"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "743:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "781:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "783:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "783:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "783:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "773:2:50"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "777:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "770:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:10:50"
                  },
                  "nodeType": "YulIf",
                  "src": "767:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "812:23:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "832:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "826:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "826:9:50"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "816:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "844:67:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "870:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "886:2:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "890:4:50",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "882:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "882:13:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "901:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "897:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "897:7:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "878:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "878:27:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "866:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "866:40:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "908:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "862:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "862:49:50"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "848:10:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "970:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "972:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "972:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "972:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "929:10:50"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "941:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "926:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "926:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "949:10:50"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "961:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "946:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "946:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "923:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "923:46:50"
                  },
                  "nodeType": "YulIf",
                  "src": "920:2:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1008:2:50",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1012:10:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1001:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1001:22:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1001:22:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1039:6:50"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1047:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1032:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1032:18:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1032:18:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1096:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1105:6:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1113:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1098:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1098:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1098:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1073:2:50"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1077:2:50"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1069:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1069:11:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1082:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1065:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1065:20:50"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1087:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1062:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1062:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1059:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1131:15:50",
                  "value": {
                    "name": "value1",
                    "nodeType": "YulIdentifier",
                    "src": "1140:6:50"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1135:1:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1201:83:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1230:6:50"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1238:1:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1226:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1226:14:50"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1242:2:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1222:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1222:23:50"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1261:2:50"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1265:1:50"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1257:3:50"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1257:10:50"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1269:2:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1253:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1253:19:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1247:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1247:26:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1215:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1215:59:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1215:59:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1166:1:50"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1169:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1163:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1163:9:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1173:19:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1175:15:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1184:1:50"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1187:2:50"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1180:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1180:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1175:1:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1159:3:50",
                    "statements": []
                  },
                  "src": "1155:129:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1314:64:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1343:6:50"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1351:2:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1339:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1339:15:50"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1356:2:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1335:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1335:24:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1361:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1328:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1328:40:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1328:40:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1299:1:50"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1302:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1296:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1296:9:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1293:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1387:16:50",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1397:6:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1387:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1412:61:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1458:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1469:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1454:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1454:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1422:31:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1422:51:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1412:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "273:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "284:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "304:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "312:6:50",
                "type": ""
              }
            ],
            "src": "198:1281:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1539:382:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1549:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1563:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1569:1:50",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1559:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1559:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1549:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1580:38:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1610:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1616:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1606:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1606:12:50"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1584:18:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1657:31:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1659:27:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1673:6:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1681:4:50",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1669:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1669:17:50"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1659:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1637:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1630:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1630:26:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1627:2:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1747:168:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1768:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1771:77:50",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1761:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1761:88:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1761:88:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1869:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1872:4:50",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1862:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1862:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1862:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1897:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1900:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1890:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1890:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1890:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1703:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1726:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1734:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1723:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:14:50"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1700:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1700:38:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1697:2:50"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1519:4:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1528:6:50",
                "type": ""
              }
            ],
            "src": "1484:437:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1958:152:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1975:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:77:50",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1968:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1968:88:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1968:88:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2072:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2075:4:50",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2065:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2065:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2096:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2099:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2089:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2089:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2089:15:50"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1926:184:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value1)\n        }\n        value1 := memPtr\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6711:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:50",
                "type": ""
              }
            ],
            "src": "14:306:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "403:219:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "449:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "458:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "466:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "451:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "451:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "451:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "424:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "433:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "420:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "420:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "416:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "416:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "413:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "484:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "503:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "488:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "566:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "575:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "583:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "568:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "568:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "568:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "535:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "556:5:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "549:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "549:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "542:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "542:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "532:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "532:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:40:50"
                  },
                  "nodeType": "YulIf",
                  "src": "522:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "601:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "611:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "601:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "380:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "392:6:50",
                "type": ""
              }
            ],
            "src": "325:297:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "697:120:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "743:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "752:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "760:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "745:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "745:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "745:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "718:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "727:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "714:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "714:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "739:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "710:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "710:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "707:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "778:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "801:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "788:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "788:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "778:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "663:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "674:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "686:6:50",
                "type": ""
              }
            ],
            "src": "627:190:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "903:113:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "949:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "958:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "966:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "951:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "951:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "951:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "924:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "933:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "920:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "920:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "945:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "916:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "916:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "913:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "984:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1000:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "994:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:16:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "984:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "869:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "880:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "892:6:50",
                "type": ""
              }
            ],
            "src": "822:194:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1158:137:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1168:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1188:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1182:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1182:13:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1172:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1230:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1238:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1226:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1226:17:50"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1245:3:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1250:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1204:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1204:53:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1204:53:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1266:23:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1277:3:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1282:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1273:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1273:16:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1266:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1134:3:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1139:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1150:3:50",
                "type": ""
              }
            ],
            "src": "1021:274:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1401:102:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1411:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1423:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1419:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1419:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1411:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1453:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1468:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1484:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1489:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1480:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1480:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1493:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1476:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1476:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1464:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1464:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1446:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1446:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1446:51:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1370:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1381:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1392:4:50",
                "type": ""
              }
            ],
            "src": "1300:203:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1637:175:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1647:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1659:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1670:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1655:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1647:4:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1682:29:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1700:3:50",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1705:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1696:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1696:11:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1709:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1692:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:19:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1686:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1727:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1742:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1750:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1738:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1738:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1720:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1720:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1720:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1774:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1785:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1770:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1770:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1794:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1802:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1790:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1790:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1763:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1763:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1763:43:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1598:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1609:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1617:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1628:4:50",
                "type": ""
              }
            ],
            "src": "1508:304:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1974:218:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1984:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1996:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2007:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1992:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1992:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1984:4:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2019:29:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2037:3:50",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2042:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2033:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2033:11:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2046:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2029:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2029:19:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2023:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2064:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2079:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2087:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2075:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2075:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2057:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2057:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2111:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2122:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2107:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2107:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2131:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2139:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2127:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2127:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2100:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2100:43:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2163:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2174:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2159:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2159:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2179:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2152:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2152:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2152:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1927:9:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1938:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1946:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1954:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1965:4:50",
                "type": ""
              }
            ],
            "src": "1817:375:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2326:145:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2336:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2348:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2359:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2344:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2336:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2378:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2393:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2409:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2414:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2405:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2405:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2418:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2401:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2401:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2389:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2389:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2371:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2371:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2371:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2442:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2453:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2438:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2438:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2458:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2431:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2431:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2431:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2287:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2298:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2306:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2317:4:50",
                "type": ""
              }
            ],
            "src": "2197:274:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2597:262:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2614:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2625:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2607:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2607:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2607:21:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2637:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2657:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2651:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2651:13:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2641:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2684:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2695:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2680:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2680:18:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2700:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2673:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2673:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2673:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2742:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2750:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2738:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2738:15:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2759:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2770:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2755:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2755:18:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2775:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2716:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2716:66:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2716:66:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2791:62:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2807:9:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2826:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2834:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2822:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2822:15:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2843:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2839:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2839:7:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2818:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2818:29:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2803:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2803:45:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2850:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2799:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2799:54:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2791:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2566:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2577:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2588:4:50",
                "type": ""
              }
            ],
            "src": "2476:383:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3038:182:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3055:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3066:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3048:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3048:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3048:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3089:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3100:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3085:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3085:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3105:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3078:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3078:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3078:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3128:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3139:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3124:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3124:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3144:34:50",
                        "type": "",
                        "value": "ERC20: operation did not succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3117:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3117:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3117:62:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3188:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3200:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3211:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3196:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3188:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e070c5d84d2ce64f06a55372ede71bea348c7746469ec289c4aba299bc05fdc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3015:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3029:4:50",
                "type": ""
              }
            ],
            "src": "2864:356:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3427:225:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3444:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3455:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3437:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3437:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3437:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3478:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3489:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3474:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3474:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3494:1:50",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3467:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3467:29:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3467:29:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3516:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3527:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3512:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3512:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3532:6:50",
                        "type": "",
                        "value": "USER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3505:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3505:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3505:34:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3548:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3560:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3571:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3556:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3556:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3548:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3595:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3606:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3591:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3591:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3617:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3633:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3638:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3629:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3629:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3642:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3625:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3625:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3613:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3613:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3584:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3584:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3584:62:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3396:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3407:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3418:4:50",
                "type": ""
              }
            ],
            "src": "3225:427:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3831:168:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3848:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3859:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3841:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3841:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3841:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3882:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3893:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3878:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3878:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3898:2:50",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3871:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3871:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3871:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3921:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3932:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3917:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3917:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3937:20:50",
                        "type": "",
                        "value": "ERC20: call failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3910:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3910:48:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3910:48:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3967:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3979:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3990:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3975:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3975:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3967:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3576d6dfb5a800b5f7598d3cc3220135845acd27db3901a5c3c655559195efba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3808:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3822:4:50",
                "type": ""
              }
            ],
            "src": "3657:342:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4178:223:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4195:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4206:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4188:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4188:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4188:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4229:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4240:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4225:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4225:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4245:2:50",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4218:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4218:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4218:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4268:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4279:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4264:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4264:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4284:34:50",
                        "type": "",
                        "value": "Can not deposit to a closed pool"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4257:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4257:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4257:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4339:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4350:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4335:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4335:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4355:3:50",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4328:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4328:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4328:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4368:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4380:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4391:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4376:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4376:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4368:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4155:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4169:4:50",
                "type": ""
              }
            ],
            "src": "4004:397:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4580:181:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4597:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4608:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4590:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4590:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4590:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4631:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4642:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4627:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4627:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4647:2:50",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4620:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4620:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4620:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4670:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4681:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4666:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4666:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4686:33:50",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4659:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4659:61:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4659:61:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4729:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4741:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4752:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4737:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4737:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4729:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4557:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4571:4:50",
                "type": ""
              }
            ],
            "src": "4406:355:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4927:162:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4937:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4949:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4960:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4945:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4945:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4937:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4979:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5010:6:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5004:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5004:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4997:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4997:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4990:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4990:29:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4972:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4972:48:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4972:48:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5040:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5051:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5036:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5036:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5068:6:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5076:4:50",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5064:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5064:17:50"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5058:5:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5058:24:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5029:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5029:54:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5029:54:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_StakingInfo_$11769_memory_ptr__to_t_struct$_StakingInfo_$11769_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4896:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4907:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4918:4:50",
                "type": ""
              }
            ],
            "src": "4766:323:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5195:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5205:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5217:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5228:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5213:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5213:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5205:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5247:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5258:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5240:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5240:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5240:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5164:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5175:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5186:4:50",
                "type": ""
              }
            ],
            "src": "5094:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5324:80:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5351:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5353:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5353:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5353:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5340:1:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5347:1:50"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5343:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5343:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5337:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5334:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5382:16:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5393:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5396:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5389:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5389:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5382:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5307:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5310:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5316:3:50",
                "type": ""
              }
            ],
            "src": "5276:128:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5455:171:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5486:111:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "5507:1:50"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5514:3:50",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5519:10:50",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "5510:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5510:20:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5500:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5500:31:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5500:31:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5551:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5554:4:50",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5544:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5544:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5544:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "5579:1:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5582:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5572:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5572:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5572:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5475:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5468:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5468:9:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5465:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5606:14:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5615:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5618:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "5611:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5611:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "5606:1:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5440:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5443:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "5449:1:50",
                "type": ""
              }
            ],
            "src": "5409:217:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5683:116:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5742:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5744:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5744:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5744:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "5714:1:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5707:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5707:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5700:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5700:17:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5722:1:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5733:1:50",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5729:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5729:6:50"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "5737:1:50"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "5725:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5725:14:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5719:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5719:21:50"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5696:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5696:45:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5693:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5773:20:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5788:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5791:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "5784:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5784:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "5773:7:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5662:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5665:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "5671:7:50",
                "type": ""
              }
            ],
            "src": "5631:168:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5853:76:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5875:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5877:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5877:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5877:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5869:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5872:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5866:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5866:8:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5863:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5906:17:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5918:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5921:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5914:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5914:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5906:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5835:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5838:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5844:4:50",
                "type": ""
              }
            ],
            "src": "5804:125:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5987:205:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5997:10:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6006:1:50",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6001:1:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6066:63:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6091:3:50"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6096:1:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6087:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6087:11:50"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6110:3:50"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6115:1:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6106:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6106:11:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6100:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6100:18:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6080:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6080:39:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6080:39:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6027:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6030:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6024:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6024:13:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6038:19:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6040:15:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6049:1:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6052:2:50",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6045:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6045:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6040:1:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6020:3:50",
                    "statements": []
                  },
                  "src": "6016:113:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6155:31:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6168:3:50"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6173:6:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6164:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6164:16:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6182:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6157:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6157:27:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6157:27:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6144:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6147:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6141:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6141:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "6138:2:50"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5965:3:50",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5970:3:50",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5975:6:50",
                "type": ""
              }
            ],
            "src": "5934:258:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6252:325:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6262:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6276:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6282:1:50",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6272:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6272:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6262:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6293:38:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6323:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6329:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6319:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6319:12:50"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6297:18:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6370:31:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6372:27:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6386:6:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6394:4:50",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6382:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6382:17:50"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6372:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6350:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6343:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6343:26:50"
                  },
                  "nodeType": "YulIf",
                  "src": "6340:2:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6460:111:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6481:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6488:3:50",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6493:10:50",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6484:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6484:20:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6474:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6474:31:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6474:31:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6525:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6528:4:50",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6518:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6518:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6518:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6553:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6556:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6546:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6546:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6546:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6416:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6439:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6447:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6436:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6436:14:50"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6413:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6413:38:50"
                  },
                  "nodeType": "YulIf",
                  "src": "6410:2:50"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6232:4:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6241:6:50",
                "type": ""
              }
            ],
            "src": "6197:380:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6614:95:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6631:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6638:3:50",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6643:10:50",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6634:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6634:20:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6624:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6624:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6624:31:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6671:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6674:4:50",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6664:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6664:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6664:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6695:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6698:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6688:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6688:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6688:15:50"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6582:127:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0e070c5d84d2ce64f06a55372ede71bea348c7746469ec289c4aba299bc05fdc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC20: operation did not succeed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 4)\n        mstore(add(headStart, 96), \"USER\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_3576d6dfb5a800b5f7598d3cc3220135845acd27db3901a5c3c655559195efba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"ERC20: call failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Can not deposit to a closed pool\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_StakingInfo_$11769_memory_ptr__to_t_struct$_StakingInfo_$11769_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(mload(value0))))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "589:5113:38:-:0;;;1897:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:6;1806:7;:22;1991:10:38;1981:20;;;;;;2011:22;;;-1:-1:-1;;2011:22:38;;;2043:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;2065:24:38;;-1:-1:-1;;2065:24:38;;;-1:-1:-1;589:5113:38;;-1:-1:-1;589:5113:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;589:5113:38;;;-1:-1:-1;589:5113:38;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:50;95:13;;-1:-1:-1;;;;;137:31:50;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:1281::-;;;;365:2;353:9;344:7;340:23;336:32;333:2;;;386:6;378;371:22;333:2;414:42;446:9;414:42;:::i;:::-;475:2;506:18;;;500:25;404:52;;-1:-1:-1;475:2:50;-1:-1:-1;574:14:50;;;571:2;;;606:6;598;591:22;571:2;649:6;638:9;634:22;624:32;;694:7;687:4;683:2;679:13;675:27;665:2;;721:6;713;706:22;665:2;755;749:9;777:2;773;770:10;767:2;;;783:18;;:::i;:::-;832:2;826:9;-1:-1:-1;;901:2:50;882:13;;878:27;866:40;;862:49;;946:22;;;926:18;;;923:46;920:2;;;972:18;;:::i;:::-;1008:2;1001:22;1032:18;;;1069:11;;;1065:20;;1062:33;-1:-1:-1;1059:2:50;;;1113:6;1105;1098:22;1059:2;1140:6;1131:15;;1155:129;1169:2;1166:1;1163:9;1155:129;;;1257:10;;;1253:19;;1247:26;1226:14;;;1222:23;;1215:59;1180:10;;;;1155:129;;;1302:2;1299:1;1296:9;1293:2;;;1361:6;1356:2;1351;1343:6;1339:15;1335:24;1328:40;1293:2;1397:6;1387:16;;;;;;;1422:51;1469:2;1458:9;1454:18;1422:51;:::i;:::-;1412:61;;323:1156;;;;;:::o;1484:437::-;1569:1;1559:12;;1616:1;1606:12;;;1627:2;;1681:4;1673:6;1669:17;1659:27;;1627:2;1734;1726:6;1723:14;1703:18;1700:38;1697:2;;;-1:-1:-1;;;1768:1:50;1761:88;1872:4;1869:1;1862:15;1900:4;1897:1;1890:15;1697:2;;1539:382;;;:::o;1926:184::-;-1:-1:-1;;;1975:1:50;1968:88;2075:4;2072:1;2065:15;2099:4;2096:1;2089:15;1958:152;589:5113:38;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "589:5113:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1259:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3644:1378;;;;;;:::i;:::-;;:::i;:::-;;5398:142;;;:::i;:::-;;;;;;;:::i;1487:35::-;;;:::i;:::-;;;;;;;:::i;1627:32::-;;;:::i;5028:94::-;;;:::i;5232:160::-;;;;;;:::i;:::-;;:::i;5546:154::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2102:1536::-;;;;;;:::i;:::-;;:::i;5128:98::-;;;:::i;1259:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3644:1378::-;1744:1:6;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:6;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;3728:11:38;3724:24:::1;;3741:7;;3724:24;3773:10;3761:23;::::0;;;:11:::1;:23;::::0;;;;;;;:30:::1;::::0;3757:48:::1;;3798:7;;3757:48;3873:53;::::0;-1:-1:-1;;;3873:53:38;;3884:9:::1;-1:-1:-1::0;;;;;3873:33:38::1;::::0;::::1;::::0;:53:::1;::::0;3915:10:::1;::::0;3873:53:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4106:60:38::1;::::0;-1:-1:-1;;;4106:60:38;;3937:15:::1;::::0;-1:-1:-1;3955:212:38::1;::::0;-1:-1:-1;;;;;;4117:9:38::1;4106:33;::::0;::::1;::::0;:60:::1;::::0;4148:4:::1;::::0;4155:10:::1;::::0;4106:60:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4016:48;::::0;-1:-1:-1;;;4016:48:38;;3955:133:::1;::::0;4083:4:::1;::::0;3955:110:::1;::::0;-1:-1:-1;;;;;4027:9:38::1;4016:33;::::0;::::1;::::0;:48:::1;::::0;4058:4:::1;::::0;4016:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3967:10;3955:23;::::0;;;:11:::1;:23;::::0;;;;;;;:43:::1;::::0;;:60:::1;:110::i;:::-;:127:::0;::::1;:133::i;:::-;:150:::0;::::1;:212::i;:::-;3937:230:::0;-1:-1:-1;4181:11:38;;4177:101:::1;;4208:59;::::0;-1:-1:-1;;;4208:59:38;;4219:9:::1;-1:-1:-1::0;;;;;4208:38:38::1;::::0;::::1;::::0;:59:::1;::::0;4247:10:::1;::::0;4259:7;;4208:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4177:101;4346:10;4288:22;4334:23:::0;;;:11:::1;:23;::::0;;;;;;:30:::1;::::0;4324:40;::::1;4320:143;;-1:-1:-1::0;4407:10:38::1;4395:23;::::0;;;:11:::1;:23;::::0;;;;;;;:30:::1;::::0;4320:143:::1;;;-1:-1:-1::0;4457:6:38;4320:143:::1;4474:61;4487:10;4507;4520:14;4474:12;:61::i;:::-;4591:10;4579:23;::::0;;;:11:::1;:23;::::0;;;;;;;:43:::1;::::0;:76:::1;::::0;4640:14;4579:60:::1;:76::i;:::-;4558:10;4546:23;::::0;;;:11:::1;:23;::::0;;;;;;;:30:::1;:109:::0;4685:17:::1;::::0;:50:::1;::::0;4720:14;4685:34:::1;:50::i;:::-;4665:17;:70:::0;4878:48:::1;::::0;-1:-1:-1;;;4878:48:38;;4757:9:::1;-1:-1:-1::0;;;;;4746:33:38::1;::::0;::::1;::::0;4793:10:::1;::::0;4817:133:::1;::::0;4945:4:::1;::::0;4817:110:::1;::::0;4746:33;;4878::::1;::::0;:48:::1;::::0;4920:4:::1;::::0;4878:48:::1;;;:::i;4817:133::-;4746:205;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4967:48:38::1;::::0;4988:10:::1;::::0;-1:-1:-1;4977:9:38::1;-1:-1:-1::0;;;;;4967:48:38::1;::::0;-1:-1:-1;4967:48:38::1;::::0;::::1;::::0;5000:14;;4967:48:::1;:::i;:::-;;;;;;;;2484:1:6;;;-1:-1:-1::0;1701:1:6;2628:7;:22;3644:1378:38:o;5398:142::-;5516:17;;5398:142;:::o;1487:35::-;;;:::o;1627:32::-;;;;:::o;5028:94::-;5108:7;5028:94;:::o;5232:160::-;-1:-1:-1;;;;;5361:17:38;5331:7;5361:17;;;-1:-1:-1;5361:17:38;;;;;;;;:24;;;5232:160::o;5546:154::-;5635:18;;:::i;:::-;-1:-1:-1;;;;;;5676:17:38;;;;;-1:-1:-1;5676:17:38;;;;;;;;;5669:24;;;;;;;;;;;;;;;;;;;;;;;;;5546:154::o;2102:1536::-;1744:1:6;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:6;;;;;;;:::i;:::-;1744:1;2455:7;:18;2189:48:38::1;::::0;-1:-1:-1;;;2189:48:38;;2200:9:::1;-1:-1:-1::0;;;;;2189:33:38::1;::::0;::::1;::::0;:48:::1;::::0;2231:4:::1;::::0;2189:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2181:94;;;::::0;-1:-1:-1;;;2181:94:38;;::::1;::::0;::::1;;;:::i;:::-;2289:11:::0;2285:24:::1;;2302:7;;2285:24;2402:10;2390:23;::::0;;;:11:::1;:23;::::0;;;;:36;::::1;;2385:159;;2454:10;2442:23;::::0;;;2481:4:::1;2442:23;::::0;;;;;;:43;;-1:-1:-1;;2442:43:38::1;::::0;::::1;::::0;;2499:30:::1;:34:::0;2385:159:::1;2612:53;::::0;-1:-1:-1;;;2612:53:38;;2623:9:::1;-1:-1:-1::0;;;;;2612:33:38::1;::::0;::::1;::::0;:53:::1;::::0;2654:10:::1;::::0;2612:53:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2692:10:38::1;2713:1;2680:23:::0;;;:11:::1;:23;::::0;;;;;;;:30:::1;::::0;:34;;-1:-1:-1;2676:433:38::1;::::0;-1:-1:-1;2676:433:38::1;2915:60;::::0;-1:-1:-1;;;2915:60:38;;2730:15:::1;::::0;2748:228:::1;::::0;-1:-1:-1;;;;;2926:9:38::1;2915:33;::::0;::::1;::::0;:60:::1;::::0;2957:4:::1;::::0;2964:10:::1;::::0;2915:60:::1;;;:::i;2748:228::-;2730:246:::0;-1:-1:-1;2994:11:38;;2990:109:::1;;3025:59;::::0;-1:-1:-1;;;3025:59:38;;3036:9:::1;-1:-1:-1::0;;;;;3025:38:38::1;::::0;::::1;::::0;:59:::1;::::0;3064:10:::1;::::0;3076:7;;3025:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2990:109;2676:433;;3119:56;3129:10;3141;3161:4;3168:6;3119:9;:56::i;:::-;3231:10;3219:23;::::0;;;:11:::1;:23;::::0;;;;;;;:43:::1;::::0;:68:::1;::::0;3280:6;3219:60:::1;:68::i;:::-;3198:10;3186:23;::::0;;;:11:::1;:23;::::0;;;;;;;:30:::1;:101:::0;3317:17:::1;::::0;:42:::1;::::0;3352:6;3317:34:::1;:42::i;:::-;3297:17;:62:::0;3502:48:::1;::::0;-1:-1:-1;;;3502:48:38;;3381:9:::1;-1:-1:-1::0;;;;;3370:33:38::1;::::0;::::1;::::0;3417:10:::1;::::0;3441:133:::1;::::0;3569:4:::1;::::0;3441:110:::1;::::0;3370:33;;3502::::1;::::0;:48:::1;::::0;3544:4:::1;::::0;3502:48:::1;;;:::i;3441:133::-;3370:205;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3591:40:38::1;::::0;3612:10:::1;::::0;-1:-1:-1;3601:9:38::1;-1:-1:-1::0;;;;;3591:40:38::1;::::0;-1:-1:-1;3591:40:38::1;::::0;::::1;::::0;3624:6;;3591:40:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;1701:1:6;2628:7;:22;2102:1536:38:o;5128:98::-;5210:9;5128:98;:::o;3451:96:19:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:19:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;3108:96::-;3166:7;3192:5;3196:1;3192;:5;:::i;1220:219:25:-;1370:12;1393:39;1370:12;1414:9;1425:6;1393:13;:39::i;:::-;1220:219;;;;:::o;725:250::-;895:12;918:50;895:12;943:5;950:9;961:6;918:17;:50::i;:::-;725:250;;;;;:::o;2741:96:19:-;2799:7;2825:5;2829:1;2825;:5;:::i;2536:229:25:-;2648:110;2671:5;2713:23;;;2738:2;2742:5;2690:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2690:58:25;;;;;;;;;;;;;;-1:-1:-1;;;;;2690:58:25;-1:-1:-1;;;;;;2690:58:25;;;;;;;;;;;2648:9;:110::i;:::-;2536:229;;;:::o;3029:265::-;3167:120;3190:5;3232:27;;;3261:4;3267:2;3271:5;3209:68;;;;;;;;;;:::i;3455:375::-;3567:25;;3526:12;;;;-1:-1:-1;;;;;3567:19:25;;;:25;;3587:4;;3567:25;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3525:67;;;;3610:7;3602:38;;;;-1:-1:-1;;;3602:38:25;;;;;;;:::i;:::-;3655:17;;:21;3651:173;;3728:10;3717:30;;;;;;;;;;;;:::i;:::-;3692:121;;;;-1:-1:-1;;;3692:121:25;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;14:306:50:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:50;;220:42;;210:2;;281:6;273;266:22;325:297;;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:190;;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;-1:-1:-1;788:23:50;;697:120;-1:-1:-1;697:120:50:o;822:194::-;;945:2;933:9;924:7;920:23;916:32;913:2;;;966:6;958;951:22;913:2;-1:-1:-1;994:16:50;;903:113;-1:-1:-1;903:113:50:o;1021:274::-;;1188:6;1182:13;1204:53;1250:6;1245:3;1238:4;1230:6;1226:17;1204:53;:::i;:::-;1273:16;;;;;1158:137;-1:-1:-1;;1158:137:50:o;1300:203::-;-1:-1:-1;;;;;1464:32:50;;;;1446:51;;1434:2;1419:18;;1401:102::o;1508:304::-;-1:-1:-1;;;;;1738:15:50;;;1720:34;;1790:15;;1785:2;1770:18;;1763:43;1670:2;1655:18;;1637:175::o;1817:375::-;-1:-1:-1;;;;;2075:15:50;;;2057:34;;2127:15;;;;2122:2;2107:18;;2100:43;2174:2;2159:18;;2152:34;;;;2007:2;1992:18;;1974:218::o;2197:274::-;-1:-1:-1;;;;;2389:32:50;;;;2371:51;;2453:2;2438:18;;2431:34;2359:2;2344:18;;2326:145::o;2476:383::-;;2625:2;2614:9;2607:21;2657:6;2651:13;2700:6;2695:2;2684:9;2680:18;2673:34;2716:66;2775:6;2770:2;2759:9;2755:18;2750:2;2742:6;2738:15;2716:66;:::i;:::-;2843:2;2822:15;-1:-1:-1;;2818:29:50;2803:45;;;;2850:2;2799:54;;2597:262;-1:-1:-1;;2597:262:50:o;2864:356::-;3066:2;3048:21;;;3085:18;;;3078:30;3144:34;3139:2;3124:18;;3117:62;3211:2;3196:18;;3038:182::o;3225:427::-;3455:2;3437:21;;;3494:1;3474:18;;;3467:29;-1:-1:-1;;;3527:2:50;3512:18;;3505:34;-1:-1:-1;;;;;3613:32:50;;;;3606:4;3591:20;;3584:62;3571:3;3556:19;;3427:225::o;3657:342::-;3859:2;3841:21;;;3898:2;3878:18;;;3871:30;-1:-1:-1;;;3932:2:50;3917:18;;3910:48;3990:2;3975:18;;3831:168::o;4004:397::-;4206:2;4188:21;;;4245:2;4225:18;;;4218:30;4284:34;4279:2;4264:18;;4257:62;-1:-1:-1;;;4350:2:50;4335:18;;4328:31;4391:3;4376:19;;4178:223::o;4406:355::-;4608:2;4590:21;;;4647:2;4627:18;;;4620:30;4686:33;4681:2;4666:18;;4659:61;4752:2;4737:18;;4580:181::o;4766:323::-;5004:13;;4997:21;4990:29;4972:48;;5076:4;5064:17;;;5058:24;5036:20;;;5029:54;;;;4960:2;4945:18;;4927:162::o;5094:177::-;5240:25;;;5228:2;5213:18;;5195:76::o;5276:128::-;;5347:1;5343:6;5340:1;5337:13;5334:2;;;5353:18;;:::i;:::-;-1:-1:-1;5389:9:50;;5324:80::o;5409:217::-;;5475:1;5465:2;;-1:-1:-1;;;5500:31:50;;5554:4;5551:1;5544:15;5582:4;5500:31;5572:15;5465:2;-1:-1:-1;5611:9:50;;5455:171::o;5631:168::-;;5737:1;5733;5729:6;5725:14;5722:1;5719:21;5714:1;5707:9;5700:17;5696:45;5693:2;;;5744:18;;:::i;:::-;-1:-1:-1;5784:9:50;;5683:116::o;5804:125::-;;5872:1;5869;5866:8;5863:2;;;5877:18;;:::i;:::-;-1:-1:-1;5914:9:50;;5853:76::o;5934:258::-;6006:1;6016:113;6030:6;6027:1;6024:13;6016:113;;;6106:11;;;6100:18;6087:11;;;6080:39;6052:2;6045:10;6016:113;;;6147:6;6144:1;6141:13;6138:2;;;-1:-1:-1;;6182:1:50;6164:16;;6157:27;5987:205::o;6197:380::-;6282:1;6272:12;;6329:1;6319:12;;;6340:2;;6394:4;6386:6;6382:17;6372:27;;6340:2;6447;6439:6;6436:14;6416:18;6413:38;6410:2;;;6493:10;6488:3;6484:20;6481:1;6474:31;6528:4;6525:1;6518:15;6556:4;6553:1;6546:15;6410:2;;6252:325;;;:::o;6582:127::-;6643:10;6638:3;6634:20;6631:1;6624:31;6674:4;6671:1;6664:15;6698:4;6695:1;6688:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"../../interfaces/ICommunity.sol\";\nimport \"../../interfaces/IPool.sol\";\nimport \"../../ERC20Helper.sol\";\n\n/**\n * @dev Template contract of Nutbox staking pool.\n *\n * Every pool saves a user staking ledger of a specific staking asset.\n * The only place that user can deposit and withdraw their staked asset.\n * Also only user themself than withdraw their staked asset\n */\ncontract ERC20Staking is IPool, ERC20Helper, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    struct StakingInfo {\n        // First time when user staking, we need set options like userDebt to zero\n        bool hasDeposited;\n        // User staked amount\n        uint256 amount;\n    }\n    address immutable factory;\n\n    // stakingInfo used to save every user's staking information,\n    // including how many they deposited and its external chain account\n    // ( we support crosschain asset staking). With every staking event\n    // happened including deposit and withdraw asset this field should be updated.\n    mapping(address => StakingInfo) stakingInfo;\n\n    string public name;\n\n    // stakeToken actually is a asset contract entity, it represents the asset user stake of this pool.\n    // Bascially, it should be a normal ERC20 token or a lptoken of a specific token exchange pair\n    address immutable public stakeToken;\n    // community that pool belongs to\n    address immutable community;\n\n    // Total staked amount\n    uint256 public totalStakedAmount;\n\n    event Deposited(\n        address indexed community,\n        address indexed who,\n        uint256 amount\n    );\n    event Withdrawn(\n        address indexed community,\n        address indexed who,\n        uint256 amount\n    );\n\n    constructor(address _community, string memory _name, address _stakeToken) {\n        factory = msg.sender;\n        community = _community;\n        name = _name;\n        stakeToken = _stakeToken;\n    }\n\n    function deposit(\n        uint256 amount\n    ) external nonReentrant {\n        require(ICommunity(community).poolActived(address(this)), 'Can not deposit to a closed pool.');\n        if (amount == 0) return;\n\n        // Add to staking list if account hasn't deposited before\n        if (!stakingInfo[msg.sender].hasDeposited) {\n            stakingInfo[msg.sender].hasDeposited = true;\n            stakingInfo[msg.sender].amount = 0;\n        }\n\n        // trigger community update all pool staking info\n        ICommunity(community).updatePools(\"USER\", msg.sender);\n\n        if (stakingInfo[msg.sender].amount > 0) {\n            uint256 pending = stakingInfo[msg.sender]\n                .amount\n                .mul(ICommunity(community).getShareAcc(address(this)))\n                .div(1e12)\n                .sub(ICommunity(community).getUserDebt(address(this), msg.sender));\n            if (pending > 0) {\n                ICommunity(community).appendUserReward(msg.sender, pending);\n            }\n        }\n\n        lockERC20(stakeToken, msg.sender, address(this), amount);\n\n        stakingInfo[msg.sender].amount = stakingInfo[msg.sender]\n            .amount\n            .add(amount);\n        totalStakedAmount = totalStakedAmount\n            .add(amount);\n\n        ICommunity(community).setUserDebt(\n            msg.sender,\n            stakingInfo[msg.sender]\n            .amount\n            .mul(ICommunity(community).getShareAcc(address(this)))\n            .div(1e12));\n\n        emit Deposited(community, msg.sender, amount);\n    }\n\n    function withdraw(\n        uint256 amount\n    ) external nonReentrant {\n        if (amount == 0) return;\n        if (stakingInfo[msg.sender].amount == 0) return;\n\n        // trigger community update all pool staking info\n        ICommunity(community).updatePools(\"USER\", msg.sender);\n\n        uint256 pending = stakingInfo[msg.sender]\n            .amount\n            .mul(ICommunity(community).getShareAcc(address(this)))\n            .div(1e12)\n            .sub(ICommunity(community).getUserDebt(address(this), msg.sender));\n        if (pending > 0) {\n            ICommunity(community).appendUserReward(msg.sender, pending);\n        }\n\n        uint256 withdrawAmount;\n        if (amount >= stakingInfo[msg.sender].amount)\n            withdrawAmount = stakingInfo[msg.sender].amount;\n        else withdrawAmount = amount;\n\n        releaseERC20(stakeToken, address(msg.sender), withdrawAmount);\n\n        stakingInfo[msg.sender].amount = stakingInfo[msg.sender]\n            .amount\n            .sub(withdrawAmount);\n        totalStakedAmount = totalStakedAmount\n            .sub(withdrawAmount);\n\n        ICommunity(community).setUserDebt(\n            msg.sender,\n            stakingInfo[msg.sender]\n            .amount\n            .mul(ICommunity(community).getShareAcc(address(this)))\n            .div(1e12));\n\n        emit Withdrawn(community, msg.sender, withdrawAmount);\n    }\n\n    function getFactory() external view override returns (address) {\n        return factory;\n    }\n\n    function getCommunity() external view override returns (address) {\n        return community;\n    }\n\n    function getUserStakedAmount(address user)\n        external\n        view\n        override returns (uint256)\n    {\n        return stakingInfo[user].amount;\n    }\n\n    function getTotalStakedAmount()\n        external\n        view\n        override returns (uint256)\n    {\n        return totalStakedAmount;\n    }\n\n    function getUserDepositInfo(address user)\n        external\n        view\n        returns (StakingInfo memory)\n    {\n        return stakingInfo[user];\n    }\n}\n",
  "sourcePath": "/Users/necklace/work/nutbox/nutbox-contract/contracts/dapps/erc20-staking/ERC20Staking.sol",
  "ast": {
    "absolutePath": "project:/contracts/dapps/erc20-staking/ERC20Staking.sol",
    "exportedSymbols": {
      "AccessControl": [
        308
      ],
      "AccessControlEnumerable": [
        433
      ],
      "Context": [
        1837
      ],
      "ERC165": [
        2064
      ],
      "ERC20": [
        1477
      ],
      "ERC20Burnable": [
        1617
      ],
      "ERC20Helper": [
        5540
      ],
      "ERC20Pausable": [
        1654
      ],
      "ERC20PresetMinterPauser": [
        1815
      ],
      "ERC20Staking": [
        12235
      ],
      "EnumerableSet": [
        2987
      ],
      "IAccessControl": [
        506
      ],
      "IAccessControlEnumerable": [
        531
      ],
      "ICommunity": [
        13075
      ],
      "IERC165": [
        2076
      ],
      "IERC20": [
        1555
      ],
      "IERC20Metadata": [
        1679
      ],
      "IPool": [
        13138
      ],
      "Pausable": [
        728
      ],
      "ReentrancyGuard": [
        768
      ],
      "SafeMath": [
        2388
      ],
      "Strings": [
        2040
      ]
    },
    "id": 12236,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11748,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:38"
      },
      {
        "id": 11749,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:38"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 11750,
        "nodeType": "ImportDirective",
        "scope": 12236,
        "sourceUnit": 2389,
        "src": "91:57:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 11751,
        "nodeType": "ImportDirective",
        "scope": 12236,
        "sourceUnit": 769,
        "src": "149:62:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ICommunity.sol",
        "file": "../../interfaces/ICommunity.sol",
        "id": 11752,
        "nodeType": "ImportDirective",
        "scope": 12236,
        "sourceUnit": 13076,
        "src": "212:41:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPool.sol",
        "file": "../../interfaces/IPool.sol",
        "id": 11753,
        "nodeType": "ImportDirective",
        "scope": 12236,
        "sourceUnit": 13139,
        "src": "254:36:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20Helper.sol",
        "file": "../../ERC20Helper.sol",
        "id": 11754,
        "nodeType": "ImportDirective",
        "scope": 12236,
        "sourceUnit": 5541,
        "src": "291:31:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11756,
              "name": "IPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13138,
              "src": "614:5:38"
            },
            "id": 11757,
            "nodeType": "InheritanceSpecifier",
            "src": "614:5:38"
          },
          {
            "baseName": {
              "id": 11758,
              "name": "ERC20Helper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5540,
              "src": "621:11:38"
            },
            "id": 11759,
            "nodeType": "InheritanceSpecifier",
            "src": "621:11:38"
          },
          {
            "baseName": {
              "id": 11760,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 768,
              "src": "634:15:38"
            },
            "id": 11761,
            "nodeType": "InheritanceSpecifier",
            "src": "634:15:38"
          }
        ],
        "contractDependencies": [
          768,
          5540,
          13138
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11755,
          "nodeType": "StructuredDocumentation",
          "src": "324:264:38",
          "text": " @dev Template contract of Nutbox staking pool.\n Every pool saves a user staking ledger of a specific staking asset.\n The only place that user can deposit and withdraw their staked asset.\n Also only user themself than withdraw their staked asset"
        },
        "fullyImplemented": true,
        "id": 12235,
        "linearizedBaseContracts": [
          12235,
          768,
          5540,
          13138
        ],
        "name": "ERC20Staking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11764,
            "libraryName": {
              "id": 11762,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2388,
              "src": "662:8:38"
            },
            "nodeType": "UsingForDirective",
            "src": "656:27:38",
            "typeName": {
              "id": 11763,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "675:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "ERC20Staking.StakingInfo",
            "id": 11769,
            "members": [
              {
                "constant": false,
                "id": 11766,
                "mutability": "mutable",
                "name": "hasDeposited",
                "nodeType": "VariableDeclaration",
                "scope": 11769,
                "src": "801:17:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 11765,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "801:4:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11768,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 11769,
                "src": "858:14:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11767,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "858:7:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nodeType": "StructDefinition",
            "scope": 12235,
            "src": "689:190:38",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11771,
            "mutability": "immutable",
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "scope": 12235,
            "src": "884:25:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11770,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "884:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11776,
            "mutability": "mutable",
            "name": "stakingInfo",
            "nodeType": "VariableDeclaration",
            "scope": 12235,
            "src": "1209:43:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
              "typeString": "mapping(address => struct ERC20Staking.StakingInfo)"
            },
            "typeName": {
              "id": 11775,
              "keyType": {
                "id": 11772,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1217:7:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1209:31:38",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                "typeString": "mapping(address => struct ERC20Staking.StakingInfo)"
              },
              "valueType": {
                "id": 11774,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11773,
                  "name": "StakingInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11769,
                  "src": "1228:11:38"
                },
                "referencedDeclaration": 11769,
                "src": "1228:11:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$11769_storage_ptr",
                  "typeString": "struct ERC20Staking.StakingInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 11778,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 12235,
            "src": "1259:18:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11777,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1259:6:38",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "51ed6a30",
            "id": 11780,
            "mutability": "immutable",
            "name": "stakeToken",
            "nodeType": "VariableDeclaration",
            "scope": 12235,
            "src": "1487:35:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11779,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1487:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11782,
            "mutability": "immutable",
            "name": "community",
            "nodeType": "VariableDeclaration",
            "scope": 12235,
            "src": "1566:27:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11781,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1566:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "567e98f9",
            "id": 11784,
            "mutability": "mutable",
            "name": "totalStakedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 12235,
            "src": "1627:32:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11783,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1627:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 11792,
            "name": "Deposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11786,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 11792,
                  "src": "1691:25:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11788,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 11792,
                  "src": "1726:19:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11790,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11792,
                  "src": "1755:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1755:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1681:94:38"
            },
            "src": "1666:110:38"
          },
          {
            "anonymous": false,
            "id": 11800,
            "name": "Withdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11794,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 11800,
                  "src": "1806:25:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1806:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11796,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 11800,
                  "src": "1841:19:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1841:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11798,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11800,
                  "src": "1870:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1870:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1796:94:38"
            },
            "src": "1781:110:38"
          },
          {
            "body": {
              "id": 11826,
              "nodeType": "Block",
              "src": "1971:125:38",
              "statements": [
                {
                  "expression": {
                    "id": 11812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11809,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11771,
                      "src": "1981:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11810,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1991:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1991:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1981:20:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11813,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:20:38"
                },
                {
                  "expression": {
                    "id": 11816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11814,
                      "name": "community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11782,
                      "src": "2011:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11815,
                      "name": "_community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11802,
                      "src": "2023:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2011:22:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11817,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:22:38"
                },
                {
                  "expression": {
                    "id": 11820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11818,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11778,
                      "src": "2043:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11819,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11804,
                      "src": "2050:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2043:12:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11821,
                  "nodeType": "ExpressionStatement",
                  "src": "2043:12:38"
                },
                {
                  "expression": {
                    "id": 11824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11822,
                      "name": "stakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11780,
                      "src": "2065:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11823,
                      "name": "_stakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11806,
                      "src": "2078:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2065:24:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11825,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:24:38"
                }
              ]
            },
            "id": 11827,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11802,
                  "mutability": "mutable",
                  "name": "_community",
                  "nodeType": "VariableDeclaration",
                  "scope": 11827,
                  "src": "1909:18:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11804,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 11827,
                  "src": "1929:19:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11803,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11806,
                  "mutability": "mutable",
                  "name": "_stakeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11827,
                  "src": "1950:19:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1950:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:62:38"
            },
            "returnParameters": {
              "id": 11808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1971:0:38"
            },
            "scope": 12235,
            "src": "1897:199:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12010,
              "nodeType": "Block",
              "src": "2171:1467:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 11841,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2231:4:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                  "typeString": "contract ERC20Staking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                  "typeString": "contract ERC20Staking"
                                }
                              ],
                              "id": 11840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2223:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11839,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2223:7:38",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2223:13:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 11836,
                                "name": "community",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11782,
                                "src": "2200:9:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 11835,
                              "name": "ICommunity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13075,
                              "src": "2189:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                "typeString": "type(contract ICommunity)"
                              }
                            },
                            "id": 11837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2189:21:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICommunity_$13075",
                              "typeString": "contract ICommunity"
                            }
                          },
                          "id": 11838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "poolActived",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13032,
                          "src": "2189:33:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 11843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2189:48:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c2e",
                        "id": 11844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2239:35:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                          "typeString": "literal_string \"Can not deposit to a closed pool.\""
                        },
                        "value": "Can not deposit to a closed pool."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                          "typeString": "literal_string \"Can not deposit to a closed pool.\""
                        }
                      ],
                      "id": 11834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2181:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:94:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11846,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:94:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11847,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11829,
                      "src": "2289:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2299:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2289:11:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11851,
                  "nodeType": "IfStatement",
                  "src": "2285:24:38",
                  "trueBody": {
                    "functionReturnParameters": 11833,
                    "id": 11850,
                    "nodeType": "Return",
                    "src": "2302:7:38"
                  }
                },
                {
                  "condition": {
                    "id": 11857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2389:37:38",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 11852,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11776,
                          "src": "2390:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 11855,
                        "indexExpression": {
                          "expression": {
                            "id": 11853,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2402:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2402:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2390:23:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 11856,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hasDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11766,
                      "src": "2390:36:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11875,
                  "nodeType": "IfStatement",
                  "src": "2385:159:38",
                  "trueBody": {
                    "id": 11874,
                    "nodeType": "Block",
                    "src": "2428:116:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 11864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 11858,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11776,
                                "src": "2442:11:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                                  "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                }
                              },
                              "id": 11861,
                              "indexExpression": {
                                "expression": {
                                  "id": 11859,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2454:3:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 11860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2454:10:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2442:23:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                                "typeString": "struct ERC20Staking.StakingInfo storage ref"
                              }
                            },
                            "id": 11862,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "hasDeposited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11766,
                            "src": "2442:36:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 11863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2481:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2442:43:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11865,
                        "nodeType": "ExpressionStatement",
                        "src": "2442:43:38"
                      },
                      {
                        "expression": {
                          "id": 11872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 11866,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11776,
                                "src": "2499:11:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                                  "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                }
                              },
                              "id": 11869,
                              "indexExpression": {
                                "expression": {
                                  "id": 11867,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2511:3:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 11868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2511:10:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2499:23:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                                "typeString": "struct ERC20Staking.StakingInfo storage ref"
                              }
                            },
                            "id": 11870,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11768,
                            "src": "2499:30:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 11871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2532:1:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2499:34:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11873,
                        "nodeType": "ExpressionStatement",
                        "src": "2499:34:38"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "55534552",
                        "id": 11880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2646:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        "value": "USER"
                      },
                      {
                        "expression": {
                          "id": 11881,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2654:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2654:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11877,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11782,
                            "src": "2623:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11876,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13075,
                          "src": "2612:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 11878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2612:21:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$13075",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 11879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13074,
                      "src": "2612:33:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) external"
                      }
                    },
                    "id": 11883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2612:53:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11884,
                  "nodeType": "ExpressionStatement",
                  "src": "2612:53:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 11885,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11776,
                          "src": "2680:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 11888,
                        "indexExpression": {
                          "expression": {
                            "id": 11886,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2692:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2692:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2680:23:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 11889,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11768,
                      "src": "2680:30:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2713:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2680:34:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11942,
                  "nodeType": "IfStatement",
                  "src": "2676:433:38",
                  "trueBody": {
                    "id": 11941,
                    "nodeType": "Block",
                    "src": "2716:393:38",
                    "statements": [
                      {
                        "assignments": [
                          11893
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11893,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "scope": 11941,
                            "src": "2730:15:38",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 11892,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2730:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 11926,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 11920,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "2957:4:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                        "typeString": "contract ERC20Staking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                        "typeString": "contract ERC20Staking"
                                      }
                                    ],
                                    "id": 11919,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2949:7:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 11918,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2949:7:38",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 11921,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2949:13:38",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 11922,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2964:3:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 11923,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2964:10:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 11915,
                                      "name": "community",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11782,
                                      "src": "2926:9:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 11914,
                                    "name": "ICommunity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13075,
                                    "src": "2915:10:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                      "typeString": "type(contract ICommunity)"
                                    }
                                  },
                                  "id": 11916,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2915:21:38",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommunity_$13075",
                                    "typeString": "contract ICommunity"
                                  }
                                },
                                "id": 11917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getUserDebt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13053,
                                "src": "2915:33:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 11924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2915:60:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 11911,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2888:4:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 11906,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967268,
                                              "src": "2859:4:38",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                                "typeString": "contract ERC20Staking"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                                "typeString": "contract ERC20Staking"
                                              }
                                            ],
                                            "id": 11905,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2851:7:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 11904,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2851:7:38",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 11907,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2851:13:38",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 11901,
                                              "name": "community",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11782,
                                              "src": "2828:9:38",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 11900,
                                            "name": "ICommunity",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13075,
                                            "src": "2817:10:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                              "typeString": "type(contract ICommunity)"
                                            }
                                          },
                                          "id": 11902,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2817:21:38",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ICommunity_$13075",
                                            "typeString": "contract ICommunity"
                                          }
                                        },
                                        "id": 11903,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getShareAcc",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 13039,
                                        "src": "2817:33:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 11908,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2817:48:38",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 11894,
                                          "name": "stakingInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11776,
                                          "src": "2748:11:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                          }
                                        },
                                        "id": 11897,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 11895,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2760:3:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 11896,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2760:10:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2748:23:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                                        }
                                      },
                                      "id": 11898,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11768,
                                      "src": "2748:47:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 11899,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2282,
                                    "src": "2748:68:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 11909,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2748:118:38",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 11910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2297,
                                "src": "2748:139:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 11912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2748:145:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 11913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2267,
                            "src": "2748:166:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 11925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2748:228:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2730:246:38"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11927,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11893,
                            "src": "2994:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 11928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3004:1:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2994:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11940,
                        "nodeType": "IfStatement",
                        "src": "2990:109:38",
                        "trueBody": {
                          "id": 11939,
                          "nodeType": "Block",
                          "src": "3007:92:38",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 11934,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3064:3:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 11935,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3064:10:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 11936,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11893,
                                    "src": "3076:7:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 11931,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11782,
                                        "src": "3036:9:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 11930,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13075,
                                      "src": "3025:10:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 11932,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3025:21:38",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$13075",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 11933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "appendUserReward",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13060,
                                  "src": "3025:38:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 11937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3025:59:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 11938,
                              "nodeType": "ExpressionStatement",
                              "src": "3025:59:38"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11944,
                        "name": "stakeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11780,
                        "src": "3129:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 11945,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3141:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3141:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11949,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3161:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                              "typeString": "contract ERC20Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                              "typeString": "contract ERC20Staking"
                            }
                          ],
                          "id": 11948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3153:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11947,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3153:7:38",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3153:13:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11951,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11829,
                        "src": "3168:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11943,
                      "name": "lockERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5370,
                      "src": "3119:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 11952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3119:56:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11953,
                  "nodeType": "ExpressionStatement",
                  "src": "3119:56:38"
                },
                {
                  "expression": {
                    "id": 11967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 11954,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11776,
                          "src": "3186:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 11957,
                        "indexExpression": {
                          "expression": {
                            "id": 11955,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3198:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3198:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3186:23:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 11958,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11768,
                      "src": "3186:30:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 11965,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11829,
                          "src": "3280:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 11959,
                              "name": "stakingInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11776,
                              "src": "3219:11:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                                "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                              }
                            },
                            "id": 11962,
                            "indexExpression": {
                              "expression": {
                                "id": 11960,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3231:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3231:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3219:23:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                              "typeString": "struct ERC20Staking.StakingInfo storage ref"
                            }
                          },
                          "id": 11963,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11768,
                          "src": "3219:43:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2252,
                        "src": "3219:60:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 11966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3219:68:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3186:101:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11968,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:101:38"
                },
                {
                  "expression": {
                    "id": 11974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11969,
                      "name": "totalStakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11784,
                      "src": "3297:17:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 11972,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11829,
                          "src": "3352:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 11970,
                          "name": "totalStakedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11784,
                          "src": "3317:17:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2252,
                        "src": "3317:34:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 11973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3317:42:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3297:62:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11975,
                  "nodeType": "ExpressionStatement",
                  "src": "3297:62:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11980,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3417:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3417:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 11999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3569:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 11994,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "3544:4:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      ],
                                      "id": 11993,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3536:7:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 11992,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3536:7:38",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 11995,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3536:13:38",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 11989,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11782,
                                        "src": "3513:9:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 11988,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13075,
                                      "src": "3502:10:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 11990,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3502:21:38",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$13075",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 11991,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getShareAcc",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13039,
                                  "src": "3502:33:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 11996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3502:48:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 11982,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11776,
                                    "src": "3441:11:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                                      "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 11985,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 11983,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3453:3:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 11984,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3453:10:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3441:23:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                                    "typeString": "struct ERC20Staking.StakingInfo storage ref"
                                  }
                                },
                                "id": 11986,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11768,
                                "src": "3441:43:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2282,
                              "src": "3441:60:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 11997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3441:110:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 11998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2297,
                          "src": "3441:127:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 12000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3441:133:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11977,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11782,
                            "src": "3381:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11976,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13075,
                          "src": "3370:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 11978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3370:21:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$13075",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 11979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUserDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13067,
                      "src": "3370:33:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 12001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3370:205:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12002,
                  "nodeType": "ExpressionStatement",
                  "src": "3370:205:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12004,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11782,
                        "src": "3601:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 12005,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3612:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3612:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12007,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11829,
                        "src": "3624:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12003,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11792,
                      "src": "3591:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3591:40:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12009,
                  "nodeType": "EmitStatement",
                  "src": "3586:45:38"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 12011,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11832,
                "modifierName": {
                  "id": 11831,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 767,
                  "src": "2158:12:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "2158:12:38"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11829,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12011,
                  "src": "2128:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2118:30:38"
            },
            "returnParameters": {
              "id": 11833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2171:0:38"
            },
            "scope": 12235,
            "src": "2102:1536:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12179,
              "nodeType": "Block",
              "src": "3714:1308:38",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12018,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12013,
                      "src": "3728:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3738:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3728:11:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12022,
                  "nodeType": "IfStatement",
                  "src": "3724:24:38",
                  "trueBody": {
                    "functionReturnParameters": 12017,
                    "id": 12021,
                    "nodeType": "Return",
                    "src": "3741:7:38"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 12023,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11776,
                          "src": "3761:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 12026,
                        "indexExpression": {
                          "expression": {
                            "id": 12024,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3773:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3773:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3761:23:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 12027,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11768,
                      "src": "3761:30:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3795:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3761:35:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12031,
                  "nodeType": "IfStatement",
                  "src": "3757:48:38",
                  "trueBody": {
                    "functionReturnParameters": 12017,
                    "id": 12030,
                    "nodeType": "Return",
                    "src": "3798:7:38"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "55534552",
                        "id": 12036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3907:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        "value": "USER"
                      },
                      {
                        "expression": {
                          "id": 12037,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3915:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3915:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12033,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11782,
                            "src": "3884:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12032,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13075,
                          "src": "3873:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 12034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3873:21:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$13075",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 12035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13074,
                      "src": "3873:33:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) external"
                      }
                    },
                    "id": 12039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3873:53:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12040,
                  "nodeType": "ExpressionStatement",
                  "src": "3873:53:38"
                },
                {
                  "assignments": [
                    12042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12042,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "scope": 12179,
                      "src": "3937:15:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12041,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3937:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12075,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 12069,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "4148:4:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                  "typeString": "contract ERC20Staking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                  "typeString": "contract ERC20Staking"
                                }
                              ],
                              "id": 12068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4140:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12067,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4140:7:38",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4140:13:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 12071,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4155:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4155:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 12064,
                                "name": "community",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11782,
                                "src": "4117:9:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 12063,
                              "name": "ICommunity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13075,
                              "src": "4106:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                "typeString": "type(contract ICommunity)"
                              }
                            },
                            "id": 12065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4106:21:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICommunity_$13075",
                              "typeString": "contract ICommunity"
                            }
                          },
                          "id": 12066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getUserDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13053,
                          "src": "4106:33:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 12073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4106:60:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 12060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4083:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12055,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "4058:4:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      ],
                                      "id": 12054,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4050:7:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 12053,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4050:7:38",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12056,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4050:13:38",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 12050,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11782,
                                        "src": "4027:9:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 12049,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13075,
                                      "src": "4016:10:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 12051,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4016:21:38",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$13075",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 12052,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getShareAcc",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13039,
                                  "src": "4016:33:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 12057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4016:48:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 12043,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11776,
                                    "src": "3955:11:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                                      "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 12046,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 12044,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3967:3:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 12045,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3967:10:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3955:23:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                                    "typeString": "struct ERC20Staking.StakingInfo storage ref"
                                  }
                                },
                                "id": 12047,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11768,
                                "src": "3955:43:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 12048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2282,
                              "src": "3955:60:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 12058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3955:110:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 12059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2297,
                          "src": "3955:127:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 12061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3955:133:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 12062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2267,
                      "src": "3955:150:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3955:212:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3937:230:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12076,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12042,
                      "src": "4181:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4191:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4181:11:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12089,
                  "nodeType": "IfStatement",
                  "src": "4177:101:38",
                  "trueBody": {
                    "id": 12088,
                    "nodeType": "Block",
                    "src": "4194:84:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 12083,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4247:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 12084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4247:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 12085,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12042,
                              "src": "4259:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 12080,
                                  "name": "community",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11782,
                                  "src": "4219:9:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 12079,
                                "name": "ICommunity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13075,
                                "src": "4208:10:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                  "typeString": "type(contract ICommunity)"
                                }
                              },
                              "id": 12081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4208:21:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICommunity_$13075",
                                "typeString": "contract ICommunity"
                              }
                            },
                            "id": 12082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "appendUserReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13060,
                            "src": "4208:38:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 12086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4208:59:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12087,
                        "nodeType": "ExpressionStatement",
                        "src": "4208:59:38"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    12091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12091,
                      "mutability": "mutable",
                      "name": "withdrawAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 12179,
                      "src": "4288:22:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12090,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4288:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12092,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4288:22:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12093,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12013,
                      "src": "4324:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 12094,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11776,
                          "src": "4334:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 12097,
                        "indexExpression": {
                          "expression": {
                            "id": 12095,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4346:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4346:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4334:23:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 12098,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11768,
                      "src": "4334:30:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4324:40:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 12110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 12108,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12091,
                        "src": "4440:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 12109,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12013,
                        "src": "4457:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4440:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12111,
                    "nodeType": "ExpressionStatement",
                    "src": "4440:23:38"
                  },
                  "id": 12112,
                  "nodeType": "IfStatement",
                  "src": "4320:143:38",
                  "trueBody": {
                    "expression": {
                      "id": 12106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 12100,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12091,
                        "src": "4378:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "baseExpression": {
                            "id": 12101,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11776,
                            "src": "4395:11:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                              "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                            }
                          },
                          "id": 12104,
                          "indexExpression": {
                            "expression": {
                              "id": 12102,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4407:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4407:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4395:23:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                            "typeString": "struct ERC20Staking.StakingInfo storage ref"
                          }
                        },
                        "id": 12105,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11768,
                        "src": "4395:30:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4378:47:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12107,
                    "nodeType": "ExpressionStatement",
                    "src": "4378:47:38"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12114,
                        "name": "stakeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11780,
                        "src": "4487:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 12117,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4507:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4507:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4499:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4499:7:38",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4499:19:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12120,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12091,
                        "src": "4520:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12113,
                      "name": "releaseERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5394,
                      "src": "4474:12:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4474:61:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12122,
                  "nodeType": "ExpressionStatement",
                  "src": "4474:61:38"
                },
                {
                  "expression": {
                    "id": 12136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 12123,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11776,
                          "src": "4546:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 12126,
                        "indexExpression": {
                          "expression": {
                            "id": 12124,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4558:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4558:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4546:23:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 12127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11768,
                      "src": "4546:30:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12134,
                          "name": "withdrawAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12091,
                          "src": "4640:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 12128,
                              "name": "stakingInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11776,
                              "src": "4579:11:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                                "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                              }
                            },
                            "id": 12131,
                            "indexExpression": {
                              "expression": {
                                "id": 12129,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4591:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 12130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4591:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4579:23:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                              "typeString": "struct ERC20Staking.StakingInfo storage ref"
                            }
                          },
                          "id": 12132,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11768,
                          "src": "4579:43:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2267,
                        "src": "4579:60:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 12135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4579:76:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4546:109:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12137,
                  "nodeType": "ExpressionStatement",
                  "src": "4546:109:38"
                },
                {
                  "expression": {
                    "id": 12143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12138,
                      "name": "totalStakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11784,
                      "src": "4665:17:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12141,
                          "name": "withdrawAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12091,
                          "src": "4720:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 12139,
                          "name": "totalStakedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11784,
                          "src": "4685:17:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2267,
                        "src": "4685:34:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 12142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4685:50:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4665:70:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12144,
                  "nodeType": "ExpressionStatement",
                  "src": "4665:70:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12149,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4793:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4793:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 12168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4945:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12163,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "4920:4:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$12235",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      ],
                                      "id": 12162,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4912:7:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 12161,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4912:7:38",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4912:13:38",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 12158,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11782,
                                        "src": "4889:9:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 12157,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13075,
                                      "src": "4878:10:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 12159,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4878:21:38",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$13075",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 12160,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getShareAcc",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13039,
                                  "src": "4878:33:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 12165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4878:48:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 12151,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11776,
                                    "src": "4817:11:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                                      "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 12154,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 12152,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "4829:3:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 12153,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4829:10:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4817:23:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                                    "typeString": "struct ERC20Staking.StakingInfo storage ref"
                                  }
                                },
                                "id": 12155,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11768,
                                "src": "4817:43:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 12156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2282,
                              "src": "4817:60:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 12166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4817:110:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 12167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2297,
                          "src": "4817:127:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 12169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4817:133:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12146,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11782,
                            "src": "4757:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12145,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13075,
                          "src": "4746:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 12147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4746:21:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$13075",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 12148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUserDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13067,
                      "src": "4746:33:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 12170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4746:205:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12171,
                  "nodeType": "ExpressionStatement",
                  "src": "4746:205:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12173,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11782,
                        "src": "4977:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 12174,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4988:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4988:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12176,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12091,
                        "src": "5000:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12172,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11800,
                      "src": "4967:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4967:48:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12178,
                  "nodeType": "EmitStatement",
                  "src": "4962:53:38"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 12180,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12016,
                "modifierName": {
                  "id": 12015,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 767,
                  "src": "3701:12:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "3701:12:38"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12013,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12180,
                  "src": "3671:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3671:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3661:30:38"
            },
            "returnParameters": {
              "id": 12017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3714:0:38"
            },
            "scope": 12235,
            "src": "3644:1378:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13120
            ],
            "body": {
              "id": 12188,
              "nodeType": "Block",
              "src": "5091:31:38",
              "statements": [
                {
                  "expression": {
                    "id": 12186,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11771,
                    "src": "5108:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12185,
                  "id": 12187,
                  "nodeType": "Return",
                  "src": "5101:14:38"
                }
              ]
            },
            "functionSelector": "88cc58e4",
            "id": 12189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFactory",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12182,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5064:8:38"
            },
            "parameters": {
              "id": 12181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5047:2:38"
            },
            "returnParameters": {
              "id": 12185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12184,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12189,
                  "src": "5082:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5082:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5081:9:38"
            },
            "scope": 12235,
            "src": "5028:94:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13125
            ],
            "body": {
              "id": 12197,
              "nodeType": "Block",
              "src": "5193:33:38",
              "statements": [
                {
                  "expression": {
                    "id": 12195,
                    "name": "community",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11782,
                    "src": "5210:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12194,
                  "id": 12196,
                  "nodeType": "Return",
                  "src": "5203:16:38"
                }
              ]
            },
            "functionSelector": "c51db6b2",
            "id": 12198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommunity",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12191,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5166:8:38"
            },
            "parameters": {
              "id": 12190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5149:2:38"
            },
            "returnParameters": {
              "id": 12194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12193,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12198,
                  "src": "5184:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5184:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5183:9:38"
            },
            "scope": 12235,
            "src": "5128:98:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13132
            ],
            "body": {
              "id": 12211,
              "nodeType": "Block",
              "src": "5344:48:38",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 12206,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11776,
                        "src": "5361:11:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                          "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                        }
                      },
                      "id": 12208,
                      "indexExpression": {
                        "id": 12207,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12200,
                        "src": "5373:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5361:17:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                        "typeString": "struct ERC20Staking.StakingInfo storage ref"
                      }
                    },
                    "id": 12209,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11768,
                    "src": "5361:24:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12205,
                  "id": 12210,
                  "nodeType": "Return",
                  "src": "5354:31:38"
                }
              ]
            },
            "functionSelector": "94465b21",
            "id": 12212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5313:8:38"
            },
            "parameters": {
              "id": 12201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12200,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 12212,
                  "src": "5261:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5260:14:38"
            },
            "returnParameters": {
              "id": 12205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12204,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12212,
                  "src": "5331:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5331:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5330:9:38"
            },
            "scope": 12235,
            "src": "5232:160:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13137
            ],
            "body": {
              "id": 12220,
              "nodeType": "Block",
              "src": "5499:41:38",
              "statements": [
                {
                  "expression": {
                    "id": 12218,
                    "name": "totalStakedAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11784,
                    "src": "5516:17:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12217,
                  "id": 12219,
                  "nodeType": "Return",
                  "src": "5509:24:38"
                }
              ]
            },
            "functionSelector": "38adb6f0",
            "id": 12221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12214,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5468:8:38"
            },
            "parameters": {
              "id": 12213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5427:2:38"
            },
            "returnParameters": {
              "id": 12217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12216,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12221,
                  "src": "5486:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5486:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5485:9:38"
            },
            "scope": 12235,
            "src": "5398:142:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12233,
              "nodeType": "Block",
              "src": "5659:41:38",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 12229,
                      "name": "stakingInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11776,
                      "src": "5676:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$11769_storage_$",
                        "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                      }
                    },
                    "id": 12231,
                    "indexExpression": {
                      "id": 12230,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12223,
                      "src": "5688:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5676:17:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$11769_storage",
                      "typeString": "struct ERC20Staking.StakingInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 12228,
                  "id": 12232,
                  "nodeType": "Return",
                  "src": "5669:24:38"
                }
              ]
            },
            "functionSelector": "b3a7834d",
            "id": 12234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserDepositInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12223,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 12234,
                  "src": "5574:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5574:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5573:14:38"
            },
            "returnParameters": {
              "id": 12228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12227,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12234,
                  "src": "5635:18:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$11769_memory_ptr",
                    "typeString": "struct ERC20Staking.StakingInfo"
                  },
                  "typeName": {
                    "id": 12226,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12225,
                      "name": "StakingInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11769,
                      "src": "5635:11:38"
                    },
                    "referencedDeclaration": 11769,
                    "src": "5635:11:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$11769_storage_ptr",
                      "typeString": "struct ERC20Staking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5634:20:38"
            },
            "scope": 12235,
            "src": "5546:154:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 12236,
        "src": "589:5113:38"
      }
    ],
    "src": "33:5670:38"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-27T12:17:35.200Z",
  "devdoc": {
    "details": "Template contract of Nutbox staking pool. Every pool saves a user staking ledger of a specific staking asset. The only place that user can deposit and withdraw their staked asset. Also only user themself than withdraw their staked asset",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}