{
  "contractName": "ERC20Staking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_community",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_stakeToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCommunity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserDepositInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasDeposited",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20Staking.StakingInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_community\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommunity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasDeposited\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20Staking.StakingInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Template contract of Nutbox staking pool. Every pool saves a user staking ledger of a specific staking asset. The only place that user can deposit and withdraw their staked asset. Also only user themself than withdraw their staked asset\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dapps/erc20-staking/ERC20Staking.sol\":\"ERC20Staking\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"project:/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xddf2a441a9c0714ecc5c14ad5ee6c3ffa2e8155292229574369156004d2bcd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167987fa430b1303ad04b831fa610d31ca3f4202ad847e87cd9bb01156cfe9e0\",\"dweb:/ipfs/Qmf7a5unwgdUWTPfWZ94QRxVVxic12feERMNeC6krcmLmZ\"]},\"project:/contracts/dapps/erc20-staking/ERC20Staking.sol\":{\"keccak256\":\"0xc4c68a856a49c352ef0a8ac3de6179ed150b121464154158c13e9d0b336377e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dec0159a85e6d8abd2c6e6fbe00ac7c4c25eb38cf45e80620e5748458195b3b3\",\"dweb:/ipfs/QmQ9cYzxs5Kx1zcgL9QVZyMtqbNEL1EUvqeyGn2QwfGARF\"]},\"project:/contracts/interfaces/ICommunity.sol\":{\"keccak256\":\"0x9c8f1379634fc9df3fc965ebd5c11976ce3d71aab8996f8efe903aa4a3042811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e3fe744d29ff2f477050a263547fb192ee52180359d469b1cf1f79062f9db4\",\"dweb:/ipfs/QmcpTdndc9H2PmhTJgF5qabCotM74swULzMKCYDbDAACvp\"]},\"project:/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xedea7672bb9703bcf57a6bbf386e4b528f55a698a08bc7c4481400738671ac83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20c0e753aa731e11ebe3e2918c863a4e72400983bb466660d3580ce4d9fbcf4\",\"dweb:/ipfs/QmUi3uZ9HVmZDAgyTTvWTPMtov2SudhFdSJ7jGLf8w3eis\"]},\"project:/contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0xe70966dfe9d2336a6b310658bf543fdc45600d773283d3e73c1d5b65962e339e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e0b6147e311f14564c54905e9129930251f5a15b79712a708626de6b8ef92bf\",\"dweb:/ipfs/QmQqfsNinTUcLpY4MHe7UAvMJEqt6gQETPbTv6Qtba691B\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620018a7380380620018a7833981016040819052620000349162000144565b600160005533606090811b60805283901b6001600160601b03191660c05281516200006790600290602085019062000081565b5060601b6001600160601b03191660a05250620002c19050565b8280546200008f906200023c565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b80516001600160a01b03811681146200013f57600080fd5b919050565b60008060006060848603121562000159578283fd5b620001648462000127565b602085810151919450906001600160401b038082111562000183578485fd5b818701915087601f83011262000197578485fd5b815181811115620001ac57620001ac62000292565b604051601f8201601f1916810185018381118282101715620001d257620001d262000292565b60405281815283820185018a1015620001e9578687fd5b8692505b818310156200020c5783830185015181840186015291840191620001ed565b818311156200021d57868583830101525b8096505050505050620002336040850162000127565b90509250925092565b6002810460018216806200025157607f821691505b602082108114156200028c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60805160601c60a05160601c60c05160601c61153d6200036a60003960008181610462015281816104d00152818161057a015281816106590152818161077d015281816108260152818161096701528181610c1f01528181610ca801528181610d1301528181610e0401528181610ead0152610f180152600081816106fe0152818161089d0152610d84015260008181610286015281816108c70152610a17015261153d6000f3fe6080604052600436106100955760003560e01c806388cc58e41161005957806388cc58e41461013a57806394465b211461014f578063b3a7834d1461016f578063b6b55f251461019c578063c51db6b2146101af5761009c565b806306fdde03146100a15780632e1a7d4d146100cc57806338adb6f0146100e157806351ed6a3014610103578063567e98f9146101255761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100b66101c4565b6040516100c39190611234565b60405180910390f35b6100df6100da36600461117a565b610252565b005b3480156100ed57600080fd5b506100f6610895565b6040516100c391906113fe565b34801561010f57600080fd5b5061011861089b565b6040516100c391906111c9565b34801561013157600080fd5b506100f66108bf565b34801561014657600080fd5b506101186108c5565b34801561015b57600080fd5b506100f661016a366004611111565b6108e9565b34801561017b57600080fd5b5061018f61018a366004611111565b610908565b6040516100c391906113e5565b6100df6101aa36600461117a565b610948565b3480156101bb57600080fd5b50610118610f16565b600280546101d1906114a1565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd906114a1565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b505050505081565b61025a610f3a565b806102645761088a565b33600090815260016020819052604090912001546102815761088a565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166202eab76040518163ffffffff1660e01b8152600401604080518083038186803b1580156102db57600080fd5b505afa1580156102ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610313919061112d565b9092509050801561044b57803410156103475760405162461bcd60e51b815260040161033e90611384565b60405180910390fd5b803411156103cd5760003361035c833461145e565b604051610368906111c6565b60006040518083038185875af1925050503d80600081146103a5576040519150601f19603f3d011682016040523d82523d6000602084013e6103aa565b606091505b50509050806103cb5760405162461bcd60e51b815260040161033e9061135f565b505b6000826001600160a01b0316826040516103e6906111c6565b60006040518083038185875af1925050503d8060008114610423576040519150601f19603f3d011682016040523d82523d6000602084013e610428565b606091505b50509050806104495760405162461bcd60e51b815260040161033e9061129c565b505b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f2906104979033906004016112c3565b600060405180830381600087803b1580156104b157600080fd5b505af11580156104c5573d6000803e3d6000fd5b50505050600061063a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630336040518363ffffffff1660e01b815260040161051c9291906111dd565b60206040518083038186803b15801561053457600080fd5b505afa158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c9190611192565b61063464e8d4a5100061062e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016105c491906111c9565b60206040518083038186803b1580156105dc57600080fd5b505afa1580156105f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106149190611192565b336000908152600160208190526040909120015490610f64565b90610f77565b90610f83565b905080156106c357604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b720890610690903390859060040161121b565b600060405180830381600087803b1580156106aa57600080fd5b505af11580156106be573d6000803e3d6000fd5b505050505b3360009081526001602081905260408220015485106106f6575033600090815260016020819052604090912001546106f9565b50835b6107247f00000000000000000000000000000000000000000000000000000000000000003383610f8f565b33600090815260016020819052604090912001546107429082610f83565b33600090815260016020819052604090912001556003546107639082610f83565b60035560405163286a276f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063bf16c3c29033906107cb9064e8d4a510009061062e90869063a1a89dbc906105c49030906004016111c9565b6040518363ffffffff1660e01b81526004016107e892919061121b565b600060405180830381600087803b15801561080257600080fd5b505af1158015610816573d6000803e3d6000fd5b50505050336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb8360405161087d91906113fe565b60405180910390a3505050505b610892610fa1565b50565b60035490565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b03166000908152600160208190526040909120015490565b6109106110fa565b506001600160a01b03166000908152600160208181526040928390208351808501909452805460ff1615158452909101549082015290565b610950610f3a565b604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a9061099c9030906004016111c9565b60206040518083038186803b1580156109b457600080fd5b505afa1580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec919061115a565b610a085760405162461bcd60e51b815260040161033e9061131e565b80610a125761088a565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166202eab76040518163ffffffff1660e01b8152600401604080518083038186803b158015610a6c57600080fd5b505afa158015610a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa4919061112d565b90925090508015610bd35780341015610acf5760405162461bcd60e51b815260040161033e90611384565b80341115610b5557600033610ae4833461145e565b604051610af0906111c6565b60006040518083038185875af1925050503d8060008114610b2d576040519150601f19603f3d011682016040523d82523d6000602084013e610b32565b606091505b5050905080610b535760405162461bcd60e51b815260040161033e9061135f565b505b6000826001600160a01b031682604051610b6e906111c6565b60006040518083038185875af1925050503d8060008114610bab576040519150601f19603f3d011682016040523d82523d6000602084013e610bb0565b606091505b5050905080610bd15760405162461bcd60e51b815260040161033e9061129c565b505b3360009081526001602052604090205460ff16610c08573360009081526001602081905260408220805460ff19168217815501555b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f290610c549033906004016112c3565b600060405180830381600087803b158015610c6e57600080fd5b505af1158015610c82573d6000803e3d6000fd5b50503360009081526001602081905260409091200154159150610d7f9050576000610cf47f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630336040518363ffffffff1660e01b815260040161051c9291906111dd565b90508015610d7d57604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b720890610d4a903390859060040161121b565b600060405180830381600087803b158015610d6457600080fd5b505af1158015610d78573d6000803e3d6000fd5b505050505b505b610dab7f0000000000000000000000000000000000000000000000000000000000000000333086610fa8565b3360009081526001602081905260409091200154610dc99084610fbc565b3360009081526001602081905260409091200155600354610dea9084610fbc565b60035560405163286a276f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063bf16c3c2903390610e529064e8d4a510009061062e90869063a1a89dbc906105c49030906004016111c9565b6040518363ffffffff1660e01b8152600401610e6f92919061121b565b600060405180830381600087803b158015610e8957600080fd5b505af1158015610e9d573d6000803e3d6000fd5b50505050336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a785604051610f0491906113fe565b60405180910390a35050610892610fa1565b7f000000000000000000000000000000000000000000000000000000000000000090565b60026000541415610f5d5760405162461bcd60e51b815260040161033e906113ae565b6002600055565b6000610f70828461143f565b9392505050565b6000610f70828461141f565b6000610f70828461145e565b82610f9b818484610fc8565b50505050565b6001600055565b83610fb581858585611023565b5050505050565b6000610f708284611407565b61101e8363a9059cbb60e01b8484604051602401610fe792919061121b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611044565b505050565b610f9b846323b872dd60e01b858585604051602401610fe7939291906111f7565b600080836001600160a01b03168360405161105f91906111aa565b6000604051808303816000865af19150503d806000811461109c576040519150601f19603f3d011682016040523d82523d6000602084013e6110a1565b606091505b5091509150816110c35760405162461bcd60e51b815260040161033e906112f2565b805115610f9b57808060200190518101906110de919061115a565b610f9b5760405162461bcd60e51b815260040161033e90611267565b604080518082019091526000808252602082015290565b600060208284031215611122578081fd5b8135610f70816114f2565b6000806040838503121561113f578081fd5b825161114a816114f2565b6020939093015192949293505050565b60006020828403121561116b578081fd5b81518015158114610f70578182fd5b60006020828403121561118b578081fd5b5035919050565b6000602082840312156111a3578081fd5b5051919050565b600082516111bc818460208701611475565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602082528251806020840152611253816040850160208701611475565b601f01601f19169190910160400192915050565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b6020808252600d908201526c10dbdcdd081999594819985a5b609a1b604082015260600190565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b6020808252600b908201526a1499599d5b990819985a5b60aa1b604082015260600190565b60208082526010908201526f496e73756666696369656e742066656560801b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b8151151581526020918201519181019190915260400190565b90815260200190565b6000821982111561141a5761141a6114dc565b500190565b60008261143a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611459576114596114dc565b500290565b600082821015611470576114706114dc565b500390565b60005b83811015611490578181015183820152602001611478565b83811115610f9b5750506000910152565b6002810460018216806114b557607f821691505b602082108114156114d657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461089257600080fdfea2646970667358221220de96ea15b1241983df1b5a922a9934e8e696e1a3b7bf4fa922555de897684ca564736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c806388cc58e41161005957806388cc58e41461013a57806394465b211461014f578063b3a7834d1461016f578063b6b55f251461019c578063c51db6b2146101af5761009c565b806306fdde03146100a15780632e1a7d4d146100cc57806338adb6f0146100e157806351ed6a3014610103578063567e98f9146101255761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100b66101c4565b6040516100c39190611234565b60405180910390f35b6100df6100da36600461117a565b610252565b005b3480156100ed57600080fd5b506100f6610895565b6040516100c391906113fe565b34801561010f57600080fd5b5061011861089b565b6040516100c391906111c9565b34801561013157600080fd5b506100f66108bf565b34801561014657600080fd5b506101186108c5565b34801561015b57600080fd5b506100f661016a366004611111565b6108e9565b34801561017b57600080fd5b5061018f61018a366004611111565b610908565b6040516100c391906113e5565b6100df6101aa36600461117a565b610948565b3480156101bb57600080fd5b50610118610f16565b600280546101d1906114a1565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd906114a1565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b505050505081565b61025a610f3a565b806102645761088a565b33600090815260016020819052604090912001546102815761088a565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166202eab76040518163ffffffff1660e01b8152600401604080518083038186803b1580156102db57600080fd5b505afa1580156102ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610313919061112d565b9092509050801561044b57803410156103475760405162461bcd60e51b815260040161033e90611384565b60405180910390fd5b803411156103cd5760003361035c833461145e565b604051610368906111c6565b60006040518083038185875af1925050503d80600081146103a5576040519150601f19603f3d011682016040523d82523d6000602084013e6103aa565b606091505b50509050806103cb5760405162461bcd60e51b815260040161033e9061135f565b505b6000826001600160a01b0316826040516103e6906111c6565b60006040518083038185875af1925050503d8060008114610423576040519150601f19603f3d011682016040523d82523d6000602084013e610428565b606091505b50509050806104495760405162461bcd60e51b815260040161033e9061129c565b505b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f2906104979033906004016112c3565b600060405180830381600087803b1580156104b157600080fd5b505af11580156104c5573d6000803e3d6000fd5b50505050600061063a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630336040518363ffffffff1660e01b815260040161051c9291906111dd565b60206040518083038186803b15801561053457600080fd5b505afa158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c9190611192565b61063464e8d4a5100061062e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016105c491906111c9565b60206040518083038186803b1580156105dc57600080fd5b505afa1580156105f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106149190611192565b336000908152600160208190526040909120015490610f64565b90610f77565b90610f83565b905080156106c357604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b720890610690903390859060040161121b565b600060405180830381600087803b1580156106aa57600080fd5b505af11580156106be573d6000803e3d6000fd5b505050505b3360009081526001602081905260408220015485106106f6575033600090815260016020819052604090912001546106f9565b50835b6107247f00000000000000000000000000000000000000000000000000000000000000003383610f8f565b33600090815260016020819052604090912001546107429082610f83565b33600090815260016020819052604090912001556003546107639082610f83565b60035560405163286a276f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063bf16c3c29033906107cb9064e8d4a510009061062e90869063a1a89dbc906105c49030906004016111c9565b6040518363ffffffff1660e01b81526004016107e892919061121b565b600060405180830381600087803b15801561080257600080fd5b505af1158015610816573d6000803e3d6000fd5b50505050336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb8360405161087d91906113fe565b60405180910390a3505050505b610892610fa1565b50565b60035490565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b03166000908152600160208190526040909120015490565b6109106110fa565b506001600160a01b03166000908152600160208181526040928390208351808501909452805460ff1615158452909101549082015290565b610950610f3a565b604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a9061099c9030906004016111c9565b60206040518083038186803b1580156109b457600080fd5b505afa1580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec919061115a565b610a085760405162461bcd60e51b815260040161033e9061131e565b80610a125761088a565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166202eab76040518163ffffffff1660e01b8152600401604080518083038186803b158015610a6c57600080fd5b505afa158015610a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa4919061112d565b90925090508015610bd35780341015610acf5760405162461bcd60e51b815260040161033e90611384565b80341115610b5557600033610ae4833461145e565b604051610af0906111c6565b60006040518083038185875af1925050503d8060008114610b2d576040519150601f19603f3d011682016040523d82523d6000602084013e610b32565b606091505b5050905080610b535760405162461bcd60e51b815260040161033e9061135f565b505b6000826001600160a01b031682604051610b6e906111c6565b60006040518083038185875af1925050503d8060008114610bab576040519150601f19603f3d011682016040523d82523d6000602084013e610bb0565b606091505b5050905080610bd15760405162461bcd60e51b815260040161033e9061129c565b505b3360009081526001602052604090205460ff16610c08573360009081526001602081905260408220805460ff19168217815501555b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f290610c549033906004016112c3565b600060405180830381600087803b158015610c6e57600080fd5b505af1158015610c82573d6000803e3d6000fd5b50503360009081526001602081905260409091200154159150610d7f9050576000610cf47f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630336040518363ffffffff1660e01b815260040161051c9291906111dd565b90508015610d7d57604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b720890610d4a903390859060040161121b565b600060405180830381600087803b158015610d6457600080fd5b505af1158015610d78573d6000803e3d6000fd5b505050505b505b610dab7f0000000000000000000000000000000000000000000000000000000000000000333086610fa8565b3360009081526001602081905260409091200154610dc99084610fbc565b3360009081526001602081905260409091200155600354610dea9084610fbc565b60035560405163286a276f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063bf16c3c2903390610e529064e8d4a510009061062e90869063a1a89dbc906105c49030906004016111c9565b6040518363ffffffff1660e01b8152600401610e6f92919061121b565b600060405180830381600087803b158015610e8957600080fd5b505af1158015610e9d573d6000803e3d6000fd5b50505050336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a785604051610f0491906113fe565b60405180910390a35050610892610fa1565b7f000000000000000000000000000000000000000000000000000000000000000090565b60026000541415610f5d5760405162461bcd60e51b815260040161033e906113ae565b6002600055565b6000610f70828461143f565b9392505050565b6000610f70828461141f565b6000610f70828461145e565b82610f9b818484610fc8565b50505050565b6001600055565b83610fb581858585611023565b5050505050565b6000610f708284611407565b61101e8363a9059cbb60e01b8484604051602401610fe792919061121b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611044565b505050565b610f9b846323b872dd60e01b858585604051602401610fe7939291906111f7565b600080836001600160a01b03168360405161105f91906111aa565b6000604051808303816000865af19150503d806000811461109c576040519150601f19603f3d011682016040523d82523d6000602084013e6110a1565b606091505b5091509150816110c35760405162461bcd60e51b815260040161033e906112f2565b805115610f9b57808060200190518101906110de919061115a565b610f9b5760405162461bcd60e51b815260040161033e90611267565b604080518082019091526000808252602082015290565b600060208284031215611122578081fd5b8135610f70816114f2565b6000806040838503121561113f578081fd5b825161114a816114f2565b6020939093015192949293505050565b60006020828403121561116b578081fd5b81518015158114610f70578182fd5b60006020828403121561118b578081fd5b5035919050565b6000602082840312156111a3578081fd5b5051919050565b600082516111bc818460208701611475565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602082528251806020840152611253816040850160208701611475565b601f01601f19169190910160400192915050565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b6020808252600d908201526c10dbdcdd081999594819985a5b609a1b604082015260600190565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b6020808252600b908201526a1499599d5b990819985a5b60aa1b604082015260600190565b60208082526010908201526f496e73756666696369656e742066656560801b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b8151151581526020918201519181019190915260400190565b90815260200190565b6000821982111561141a5761141a6114dc565b500190565b60008261143a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611459576114596114dc565b500290565b600082821015611470576114706114dc565b500390565b60005b83811015611490578181015183820152602001611478565b83811115610f9b5750506000910152565b6002810460018216806114b557607f821691505b602082108114156114d657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461089257600080fdfea2646970667358221220de96ea15b1241983df1b5a922a9934e8e696e1a3b7bf4fa922555de897684ca564736f6c63430008000033",
  "immutableReferences": {
    "15567": [
      {
        "length": 32,
        "start": 646
      },
      {
        "length": 32,
        "start": 2247
      },
      {
        "length": 32,
        "start": 2583
      }
    ],
    "15576": [
      {
        "length": 32,
        "start": 1790
      },
      {
        "length": 32,
        "start": 2205
      },
      {
        "length": 32,
        "start": 3460
      }
    ],
    "15578": [
      {
        "length": 32,
        "start": 1122
      },
      {
        "length": 32,
        "start": 1232
      },
      {
        "length": 32,
        "start": 1402
      },
      {
        "length": 32,
        "start": 1625
      },
      {
        "length": 32,
        "start": 1917
      },
      {
        "length": 32,
        "start": 2086
      },
      {
        "length": 32,
        "start": 2407
      },
      {
        "length": 32,
        "start": 3103
      },
      {
        "length": 32,
        "start": 3240
      },
      {
        "length": 32,
        "start": 3347
      },
      {
        "length": 32,
        "start": 3588
      },
      {
        "length": 32,
        "start": 3757
      },
      {
        "length": 32,
        "start": 3864
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2112:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "76:117:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "86:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "101:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "95:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "95:13:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "171:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "180:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "183:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "173:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "173:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "173:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "130:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "141:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "156:3:67",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "161:1:67",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "152:3:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "152:11:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "165:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "148:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "148:19:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "137:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "137:31:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "127:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:42:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:50:67"
                  },
                  "nodeType": "YulIf",
                  "src": "117:2:67"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "55:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "66:5:67",
                "type": ""
              }
            ],
            "src": "14:179:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "323:1156:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "369:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "378:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "386:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "371:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "371:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "371:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "344:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "353:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "340:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "340:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "365:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "336:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "336:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "333:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "404:52:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "446:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "414:31:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "414:42:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "404:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "465:12:67",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "475:2:67",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "469:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "486:39:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "521:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "500:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:25:67"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "490:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "534:28:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "552:2:67",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "556:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "548:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "548:10:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "560:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "544:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:18:67"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "538:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "589:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "598:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "606:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "591:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "591:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "591:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "577:6:67"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "585:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "574:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "574:14:67"
                  },
                  "nodeType": "YulIf",
                  "src": "571:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "624:32:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "638:9:67"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "649:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "634:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "634:22:67"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "628:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "704:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "713:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "721:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "706:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "706:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "706:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "683:2:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "687:4:67",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "679:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "679:13:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "694:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "675:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "675:27:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "668:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:35:67"
                  },
                  "nodeType": "YulIf",
                  "src": "665:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "739:19:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "755:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "749:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "749:9:67"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "743:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "781:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "783:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "783:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "783:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "773:2:67"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "777:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "770:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:10:67"
                  },
                  "nodeType": "YulIf",
                  "src": "767:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "812:23:67",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "832:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "826:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "826:9:67"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "816:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "844:67:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "870:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "886:2:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "890:4:67",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "882:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "882:13:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "901:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "897:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "897:7:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "878:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "878:27:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "866:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "866:40:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "908:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "862:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "862:49:67"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "848:10:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "970:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "972:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "972:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "972:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "929:10:67"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "941:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "926:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "926:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "949:10:67"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "961:6:67"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "946:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "946:22:67"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "923:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "923:46:67"
                  },
                  "nodeType": "YulIf",
                  "src": "920:2:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1008:2:67",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1012:10:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1001:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1001:22:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1001:22:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1039:6:67"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1047:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1032:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1032:18:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1032:18:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1096:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1105:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1113:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1098:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1098:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1098:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1073:2:67"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1077:2:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1069:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1069:11:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1082:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1065:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1065:20:67"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1087:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1062:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1062:33:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1059:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1131:15:67",
                  "value": {
                    "name": "value1",
                    "nodeType": "YulIdentifier",
                    "src": "1140:6:67"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1135:1:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1201:83:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1230:6:67"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1238:1:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1226:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1226:14:67"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1242:2:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1222:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1222:23:67"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1261:2:67"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1265:1:67"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1257:3:67"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1257:10:67"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1269:2:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1253:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1253:19:67"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1247:5:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1247:26:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1215:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1215:59:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1215:59:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1166:1:67"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1169:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1163:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1163:9:67"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1173:19:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1175:15:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1184:1:67"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1187:2:67"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1180:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1180:10:67"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1175:1:67"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1159:3:67",
                    "statements": []
                  },
                  "src": "1155:129:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1314:64:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1343:6:67"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1351:2:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1339:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1339:15:67"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1356:2:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1335:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1335:24:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1361:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1328:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1328:40:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1328:40:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1299:1:67"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1302:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1296:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1296:9:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1293:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1387:16:67",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1397:6:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1387:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1412:61:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1458:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1469:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1454:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1454:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1422:31:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1422:51:67"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1412:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "273:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "284:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "304:6:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "312:6:67",
                "type": ""
              }
            ],
            "src": "198:1281:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1539:382:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1549:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1563:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1569:1:67",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1559:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1559:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1549:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1580:38:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1610:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1616:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1606:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1606:12:67"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1584:18:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1657:31:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1659:27:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1673:6:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1681:4:67",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1669:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1669:17:67"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1659:6:67"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1637:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1630:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1630:26:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1627:2:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1747:168:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1768:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1771:77:67",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1761:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1761:88:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1761:88:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1869:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1872:4:67",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1862:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1862:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1862:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1897:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1900:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1890:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1890:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1890:15:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1703:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1726:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1734:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1723:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:14:67"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1700:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1700:38:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1697:2:67"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1519:4:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1528:6:67",
                "type": ""
              }
            ],
            "src": "1484:437:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1958:152:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1975:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:77:67",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1968:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1968:88:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1968:88:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2072:1:67",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2075:4:67",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2065:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2065:15:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2096:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2099:4:67",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2089:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2089:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2089:15:67"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1926:184:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value1)\n        }\n        value1 := memPtr\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8368:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:67",
                "type": ""
              }
            ],
            "src": "14:259:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "376:226:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "422:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "431:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "439:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "424:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "424:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "424:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "397:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "406:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "393:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "393:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "418:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "389:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "389:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "386:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "457:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "476:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "470:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:16:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "461:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "522:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "495:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:33:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "537:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "547:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "537:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:35:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "581:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "592:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "577:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "577:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "571:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:25:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "334:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "345:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "357:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "365:6:67",
                "type": ""
              }
            ],
            "src": "278:324:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "685:219:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "731:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "740:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "748:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "733:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "733:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "733:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "706:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "715:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "702:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "702:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "727:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "698:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "698:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "695:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "766:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "785:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "779:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "779:16:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "770:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "848:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "857:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "865:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "850:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "850:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "850:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "817:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "838:5:67"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "831:6:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "831:13:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "824:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "824:21:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "814:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "814:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "807:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "807:40:67"
                  },
                  "nodeType": "YulIf",
                  "src": "804:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "883:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "893:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "883:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "651:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "662:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "674:6:67",
                "type": ""
              }
            ],
            "src": "607:297:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "979:120:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1025:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1034:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1042:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1027:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1027:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1027:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1000:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1009:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "996:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "996:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1021:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "992:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "992:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "989:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1060:33:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1083:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1070:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1070:23:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1060:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "945:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "956:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "968:6:67",
                "type": ""
              }
            ],
            "src": "909:190:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1185:113:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1231:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1240:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1248:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1233:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1233:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1233:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1206:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1215:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1202:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1202:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1227:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1198:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1198:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1195:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1266:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1282:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1276:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1276:16:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1266:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1151:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1162:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1174:6:67",
                "type": ""
              }
            ],
            "src": "1104:194:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1440:137:67",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1450:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1470:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1464:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1464:13:67"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1454:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1512:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1520:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1508:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1508:17:67"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1527:3:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1532:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1486:21:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:53:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1486:53:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1548:23:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1559:3:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1564:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1555:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1555:16:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1548:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1416:3:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1421:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1432:3:67",
                "type": ""
              }
            ],
            "src": "1303:274:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1773:14:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1775:10:67",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1782:3:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1775:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1757:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1765:3:67",
                "type": ""
              }
            ],
            "src": "1582:205:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1893:102:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1903:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1915:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1926:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1911:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1911:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1903:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1945:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1960:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1976:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1981:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1972:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1972:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1985:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1968:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1968:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1956:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1956:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1938:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1938:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1938:51:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1862:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1873:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1884:4:67",
                "type": ""
              }
            ],
            "src": "1792:203:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2129:175:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2139:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2151:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2162:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2147:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2139:4:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2174:29:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2192:3:67",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2197:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2188:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2188:11:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2201:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2184:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2184:19:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2178:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2219:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2234:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2242:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2230:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2230:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2212:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2212:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2212:34:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2266:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2277:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2262:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2262:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2286:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2294:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2282:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2282:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2255:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2255:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2255:43:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2090:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2101:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2109:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2120:4:67",
                "type": ""
              }
            ],
            "src": "2000:304:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2466:218:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2476:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2488:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2499:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2476:4:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2511:29:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2529:3:67",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2534:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2525:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2525:11:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2538:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2521:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2521:19:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2515:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2556:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2571:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2579:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2567:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2567:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2549:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2549:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2549:34:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2603:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2614:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2599:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2599:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2623:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2631:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2619:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2619:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2592:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2592:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2592:43:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2655:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2666:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2651:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2651:18:67"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2671:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2644:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2644:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2644:34:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2419:9:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2430:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2438:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2446:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2457:4:67",
                "type": ""
              }
            ],
            "src": "2309:375:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2818:145:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2828:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2840:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2851:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2836:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2828:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2870:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2885:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2901:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2906:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2897:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2897:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2910:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2893:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2893:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2881:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2881:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2863:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2863:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2863:51:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2934:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2945:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2930:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2930:18:67"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2950:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2923:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2923:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2923:34:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2779:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2790:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2798:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2809:4:67",
                "type": ""
              }
            ],
            "src": "2689:274:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3089:262:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3106:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3117:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3099:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3099:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3099:21:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3129:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3149:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3143:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3143:13:67"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3133:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3176:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3187:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3172:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3172:18:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3192:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3165:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3165:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3165:34:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3234:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3242:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3230:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3230:15:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3251:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3262:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3247:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3247:18:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3267:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3208:21:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3208:66:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3208:66:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3283:62:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3299:9:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3318:6:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3326:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3314:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3314:15:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3335:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3331:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3331:7:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3310:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3310:29:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3295:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3295:45:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3342:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3291:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3291:54:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3283:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3058:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3069:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3080:4:67",
                "type": ""
              }
            ],
            "src": "2968:383:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3530:182:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3547:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3558:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3540:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3540:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3540:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3581:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3592:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3577:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3577:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3597:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3570:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3570:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3570:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3620:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3631:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3616:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3616:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3636:34:67",
                        "type": "",
                        "value": "ERC20: operation did not succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3609:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3609:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3609:62:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3680:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3692:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3703:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3688:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3688:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3680:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e070c5d84d2ce64f06a55372ede71bea348c7746469ec289c4aba299bc05fdc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3507:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3521:4:67",
                "type": ""
              }
            ],
            "src": "3356:356:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3891:163:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3908:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3919:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3901:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3901:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3901:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3942:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3953:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3938:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3938:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3958:2:67",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3931:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3931:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3931:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3981:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3992:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3977:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3977:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3997:15:67",
                        "type": "",
                        "value": "Cost fee fail"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3970:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3970:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3970:43:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4022:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4034:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4045:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4030:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4022:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_239a758de9f0ce47d52fe13b64cb71c51f5cdbbe35d6e83bdef1eb72f45ed578__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3868:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3882:4:67",
                "type": ""
              }
            ],
            "src": "3717:337:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4261:225:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4278:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4289:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4271:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4271:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4312:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4323:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4308:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4308:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4328:1:67",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4301:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4301:29:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4301:29:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4350:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4361:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4346:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4346:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4366:6:67",
                        "type": "",
                        "value": "USER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4339:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4339:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4339:34:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4382:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4394:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4405:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4390:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4390:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4382:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4429:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4440:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4425:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4425:20:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4451:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4467:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4472:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4463:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4463:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4476:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4459:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4459:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4447:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4447:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4418:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4418:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4418:62:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4230:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4241:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4252:4:67",
                "type": ""
              }
            ],
            "src": "4059:427:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4665:168:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4682:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4693:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4675:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4675:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4675:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4716:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4727:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4712:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4712:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4732:2:67",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4705:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4705:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4705:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4755:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4766:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4751:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4751:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4771:20:67",
                        "type": "",
                        "value": "ERC20: call failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4744:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4744:48:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4744:48:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4801:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4813:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4824:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4809:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4809:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4801:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3576d6dfb5a800b5f7598d3cc3220135845acd27db3901a5c3c655559195efba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4642:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4656:4:67",
                "type": ""
              }
            ],
            "src": "4491:342:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5012:223:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5029:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5040:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5022:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5022:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5022:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5063:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5074:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5059:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5059:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5079:2:67",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5052:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5052:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5052:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5102:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5113:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5098:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5098:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5118:34:67",
                        "type": "",
                        "value": "Can not deposit to a closed pool"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5091:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5091:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5091:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5173:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5184:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5169:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5169:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5189:3:67",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5162:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5162:31:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5162:31:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5202:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5214:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5225:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5210:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5210:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5202:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4989:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5003:4:67",
                "type": ""
              }
            ],
            "src": "4838:397:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5414:161:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5431:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5442:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5424:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5424:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5424:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5465:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5476:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5461:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5461:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5481:2:67",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5454:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5454:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5454:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5504:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5515:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5500:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5500:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5520:13:67",
                        "type": "",
                        "value": "Refund fail"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5493:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5493:41:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5493:41:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5543:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5555:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5566:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5551:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5551:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5543:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_791ec1189a554bfee89b9b6e3f4cb133ccead9dff9097a00db882514f12a1d93__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5391:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5405:4:67",
                "type": ""
              }
            ],
            "src": "5240:335:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5754:166:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5771:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5782:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5764:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5764:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5764:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5805:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5816:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5801:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5801:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5821:2:67",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5794:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5794:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5794:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5844:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5855:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5840:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5840:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5860:18:67",
                        "type": "",
                        "value": "Insufficient fee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5833:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5833:46:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5833:46:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5888:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5900:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5911:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5896:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5888:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5731:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5745:4:67",
                "type": ""
              }
            ],
            "src": "5580:340:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6099:181:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6116:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6127:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6109:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6109:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6109:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6150:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6161:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6146:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6146:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6166:2:67",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6139:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6139:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6139:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6189:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6200:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6185:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6185:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6205:33:67",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6178:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6178:61:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6178:61:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6248:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6260:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6271:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6256:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6256:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6248:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6076:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6090:4:67",
                "type": ""
              }
            ],
            "src": "5925:355:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6446:162:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6456:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6468:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6479:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6464:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6464:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6456:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6498:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6529:6:67"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6523:5:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6523:13:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6516:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6516:21:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6509:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6509:29:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6491:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6491:48:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6491:48:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6559:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6570:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6555:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6555:20:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6587:6:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6595:4:67",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6583:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6583:17:67"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6577:5:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6577:24:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6548:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:54:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6548:54:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_StakingInfo_$15565_memory_ptr__to_t_struct$_StakingInfo_$15565_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6415:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6426:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6437:4:67",
                "type": ""
              }
            ],
            "src": "6285:323:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6714:76:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6724:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6736:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6747:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6732:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6732:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6724:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6766:9:67"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6777:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6759:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6759:25:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6759:25:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6683:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6694:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6705:4:67",
                "type": ""
              }
            ],
            "src": "6613:177:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6843:80:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6870:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6872:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6872:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6872:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6859:1:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6866:1:67"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6862:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6862:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6856:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6856:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "6853:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6901:16:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6912:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6915:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6908:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6908:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6901:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6826:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6829:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6835:3:67",
                "type": ""
              }
            ],
            "src": "6795:128:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6974:171:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7005:111:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "7026:1:67"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7033:3:67",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7038:10:67",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7029:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7029:20:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7019:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7019:31:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7019:31:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7070:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7073:4:67",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7063:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7063:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7063:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "7098:1:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7101:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7091:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7091:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7091:15:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6994:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6987:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6987:9:67"
                  },
                  "nodeType": "YulIf",
                  "src": "6984:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7125:14:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7134:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7137:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7130:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7130:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7125:1:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6959:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6962:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6968:1:67",
                "type": ""
              }
            ],
            "src": "6928:217:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7202:116:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7261:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7263:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7263:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7263:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7233:1:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7226:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7226:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7219:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7219:17:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7241:1:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7252:1:67",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7248:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7248:6:67"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7256:1:67"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7244:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7244:14:67"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7238:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7238:21:67"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7215:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7215:45:67"
                  },
                  "nodeType": "YulIf",
                  "src": "7212:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7292:20:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7307:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7310:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7303:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7303:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7292:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7181:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7184:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7190:7:67",
                "type": ""
              }
            ],
            "src": "7150:168:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7372:76:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7394:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7396:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7396:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7396:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7388:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7391:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7385:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7385:8:67"
                  },
                  "nodeType": "YulIf",
                  "src": "7382:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7425:17:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7437:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7440:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7433:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7433:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7425:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7354:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7357:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7363:4:67",
                "type": ""
              }
            ],
            "src": "7323:125:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7506:205:67",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7516:10:67",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7525:1:67",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7520:1:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7585:63:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7610:3:67"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7615:1:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7606:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7606:11:67"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7629:3:67"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7634:1:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7625:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7625:11:67"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7619:5:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7619:18:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7599:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7599:39:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7599:39:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7546:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7549:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7543:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7543:13:67"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7557:19:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7559:15:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7568:1:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7571:2:67",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7564:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7564:10:67"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7559:1:67"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7539:3:67",
                    "statements": []
                  },
                  "src": "7535:113:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7674:31:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7687:3:67"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7692:6:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7683:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7683:16:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7701:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7676:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7676:27:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7676:27:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7663:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7666:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7660:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7660:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "7657:2:67"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7484:3:67",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7489:3:67",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7494:6:67",
                "type": ""
              }
            ],
            "src": "7453:258:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7771:325:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7781:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7795:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7801:1:67",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7791:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7791:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7781:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7812:38:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7842:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7848:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7838:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7838:12:67"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7816:18:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7889:31:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7891:27:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7905:6:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7913:4:67",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7901:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7901:17:67"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7891:6:67"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7869:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7862:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7862:26:67"
                  },
                  "nodeType": "YulIf",
                  "src": "7859:2:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7979:111:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8000:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8007:3:67",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8012:10:67",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8003:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8003:20:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7993:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7993:31:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7993:31:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8044:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8047:4:67",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8037:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8037:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8037:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8072:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8075:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8065:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8065:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8065:15:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7935:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7958:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7966:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7955:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7955:14:67"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7932:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7932:38:67"
                  },
                  "nodeType": "YulIf",
                  "src": "7929:2:67"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7751:4:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7760:6:67",
                "type": ""
              }
            ],
            "src": "7716:380:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8133:95:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8150:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8157:3:67",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8162:10:67",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8153:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8153:20:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8143:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8143:31:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8143:31:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8190:1:67",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8193:4:67",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8183:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8183:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8183:15:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8214:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8217:4:67",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8207:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8207:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8207:15:67"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8101:127:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8280:86:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8344:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8353:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8356:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8346:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8346:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8346:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8303:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8314:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8329:3:67",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8334:1:67",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8325:3:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8325:11:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8338:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8321:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8321:19:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8310:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8310:31:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8300:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8300:42:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8293:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8293:50:67"
                  },
                  "nodeType": "YulIf",
                  "src": "8290:2:67"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8269:5:67",
                "type": ""
              }
            ],
            "src": "8233:133:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0e070c5d84d2ce64f06a55372ede71bea348c7746469ec289c4aba299bc05fdc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC20: operation did not succeed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_239a758de9f0ce47d52fe13b64cb71c51f5cdbbe35d6e83bdef1eb72f45ed578__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Cost fee fail\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 4)\n        mstore(add(headStart, 96), \"USER\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_3576d6dfb5a800b5f7598d3cc3220135845acd27db3901a5c3c655559195efba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"ERC20: call failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Can not deposit to a closed pool\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_791ec1189a554bfee89b9b6e3f4cb133ccead9dff9097a00db882514f12a1d93__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Refund fail\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Insufficient fee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_StakingInfo_$15565_memory_ptr__to_t_struct$_StakingInfo_$15565_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(mload(value0))))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "633:6157:52:-:0;;;1941:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:6;1821:7;:22;2035:10:52;2025:20;;;;;;2055:22;;;-1:-1:-1;;2055:22:52;;;2087:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;2109:24:52;;-1:-1:-1;;2109:24:52;;;-1:-1:-1;633:6157:52;;-1:-1:-1;633:6157:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;633:6157:52;;;-1:-1:-1;633:6157:52;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:67;95:13;;-1:-1:-1;;;;;137:31:67;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:1281::-;;;;365:2;353:9;344:7;340:23;336:32;333:2;;;386:6;378;371:22;333:2;414:42;446:9;414:42;:::i;:::-;475:2;506:18;;;500:25;404:52;;-1:-1:-1;475:2:67;-1:-1:-1;574:14:67;;;571:2;;;606:6;598;591:22;571:2;649:6;638:9;634:22;624:32;;694:7;687:4;683:2;679:13;675:27;665:2;;721:6;713;706:22;665:2;755;749:9;777:2;773;770:10;767:2;;;783:18;;:::i;:::-;832:2;826:9;-1:-1:-1;;901:2:67;882:13;;878:27;866:40;;862:49;;946:22;;;926:18;;;923:46;920:2;;;972:18;;:::i;:::-;1008:2;1001:22;1032:18;;;1069:11;;;1065:20;;1062:33;-1:-1:-1;1059:2:67;;;1113:6;1105;1098:22;1059:2;1140:6;1131:15;;1155:129;1169:2;1166:1;1163:9;1155:129;;;1257:10;;;1253:19;;1247:26;1226:14;;;1222:23;;1215:59;1180:10;;;;1155:129;;;1302:2;1299:1;1296:9;1293:2;;;1361:6;1356:2;1351;1343:6;1339:15;1335:24;1328:40;1293:2;1397:6;1387:16;;;;;;;1422:51;1469:2;1458:9;1454:18;1422:51;:::i;:::-;1412:61;;323:1156;;;;;:::o;1484:437::-;1569:1;1559:12;;1616:1;1606:12;;;1627:2;;1681:4;1673:6;1669:17;1659:27;;1627:2;1734;1726:6;1723:14;1703:18;1700:38;1697:2;;;-1:-1:-1;;;1768:1:67;1761:88;1872:4;1869:1;1862:15;1900:4;1897:1;1890:15;1697:2;;1539:382;;;:::o;1926:184::-;-1:-1:-1;;;1975:1:67;1968:88;2075:4;2072:1;2065:15;2099:4;2096:1;2089:15;1958:152;633:6157:52;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "633:6157:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4228:1882;;;;;;:::i;:::-;;:::i;:::-;;6486:142;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1531:35::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1671:32::-;;;;;;;;;;;;;:::i;6116:94::-;;;;;;;;;;;;;:::i;6320:160::-;;;;;;;;;;-1:-1:-1;6320:160:52;;;;;:::i;:::-;;:::i;6634:154::-;;;;;;;;;;-1:-1:-1;6634:154:52;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2181:2041::-;;;;;;:::i;:::-;;:::i;6216:98::-;;;;;;;;;;;;;:::i;1303:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4228:1882::-;2261:21:6;:19;:21::i;:::-;4320:11:52;4316:24:::1;;4333:7;;4316:24;4365:10;4353:23;::::0;;;:11:::1;:23;::::0;;;;;;;:30:::1;::::0;4349:48:::1;;4390:7;;4349:48;4408:16;4426:17:::0;4460:7:::1;-1:-1:-1::0;;;;;4447:32:52::1;;:34;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4407:74:::0;;-1:-1:-1;4407:74:52;-1:-1:-1;4495:13:52;;4491:402:::1;;4545:9;4532;:22;;4524:51;;;::::0;-1:-1:-1;;;4524:51:52;;::::1;::::0;::::1;;;:::i;:::-;;;;;;;;;4605:9;4593;:21;4589:177;;;4635:12;4653:10;4676:21;4688:9:::0;4676::::1;:21;:::i;:::-;4653:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4634:68;;;4728:7;4720:31;;;::::0;-1:-1:-1;;;4720:31:52;;::::1;::::0;::::1;;;:::i;:::-;4589:177;;4799:35;::::0;4780:13:::1;::::0;-1:-1:-1;;;;;4799:13:52;::::1;::::0;4820:9;;4799:35:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4779:55;;;4856:8;4848:34;;;::::0;-1:-1:-1;;;4848:34:52;;::::1;::::0;::::1;;;:::i;:::-;4491:402;;4961:53;::::0;-1:-1:-1;;;4961:53:52;;4972:9:::1;-1:-1:-1::0;;;;;4961:33:52::1;::::0;::::1;::::0;:53:::1;::::0;5003:10:::1;::::0;4961:53:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5194:60:52::1;::::0;-1:-1:-1;;;5194:60:52;;5025:15:::1;::::0;-1:-1:-1;5043:212:52::1;::::0;-1:-1:-1;;;;;;5205:9:52::1;5194:33;::::0;::::1;::::0;:60:::1;::::0;5236:4:::1;::::0;5243:10:::1;::::0;5194:60:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5104:48;::::0;-1:-1:-1;;;5104:48:52;;5043:133:::1;::::0;5171:4:::1;::::0;5043:110:::1;::::0;-1:-1:-1;;;;;5115:9:52::1;5104:33;::::0;::::1;::::0;:48:::1;::::0;5146:4:::1;::::0;5104:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5055:10;5043:23;::::0;;;:11:::1;:23;::::0;;;;;;;:43:::1;::::0;;:60:::1;:110::i;:::-;:127:::0;::::1;:133::i;:::-;:150:::0;::::1;:212::i;:::-;5025:230:::0;-1:-1:-1;5269:11:52;;5265:101:::1;;5296:59;::::0;-1:-1:-1;;;5296:59:52;;5307:9:::1;-1:-1:-1::0;;;;;5296:38:52::1;::::0;::::1;::::0;:59:::1;::::0;5335:10:::1;::::0;5347:7;;5296:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5265:101;5434:10;5376:22;5422:23:::0;;;:11:::1;:23;::::0;;;;;;:30:::1;::::0;5412:40;::::1;5408:143;;-1:-1:-1::0;5495:10:52::1;5483:23;::::0;;;:11:::1;:23;::::0;;;;;;;:30:::1;::::0;5408:143:::1;;;-1:-1:-1::0;5545:6:52;5408:143:::1;5562:61;5575:10;5595;5608:14;5562:12;:61::i;:::-;5679:10;5667:23;::::0;;;:11:::1;:23;::::0;;;;;;;:43:::1;::::0;:76:::1;::::0;5728:14;5667:60:::1;:76::i;:::-;5646:10;5634:23;::::0;;;:11:::1;:23;::::0;;;;;;;:30:::1;:109:::0;5773:17:::1;::::0;:50:::1;::::0;5808:14;5773:34:::1;:50::i;:::-;5753:17;:70:::0;5966:48:::1;::::0;-1:-1:-1;;;5966:48:52;;5845:9:::1;-1:-1:-1::0;;;;;5834:33:52::1;::::0;::::1;::::0;5881:10:::1;::::0;5905:133:::1;::::0;6033:4:::1;::::0;5905:110:::1;::::0;5834:33;;5966::::1;::::0;:48:::1;::::0;6008:4:::1;::::0;5966:48:::1;;;:::i;5905:133::-;5834:205;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6055:48:52::1;::::0;6076:10:::1;::::0;-1:-1:-1;6065:9:52::1;-1:-1:-1::0;;;;;6055:48:52::1;::::0;-1:-1:-1;6055:48:52::1;::::0;::::1;::::0;6088:14;;6055:48:::1;:::i;:::-;;;;;;;;2292:1:6;;;;;2303:20:::0;:18;:20::i;:::-;4228:1882:52;:::o;6486:142::-;6604:17;;6486:142;:::o;1531:35::-;;;:::o;1671:32::-;;;;:::o;6116:94::-;6196:7;6116:94;:::o;6320:160::-;-1:-1:-1;;;;;6449:17:52;6419:7;6449:17;;;-1:-1:-1;6449:17:52;;;;;;;;:24;;;6320:160::o;6634:154::-;6723:18;;:::i;:::-;-1:-1:-1;;;;;;6764:17:52;;;;;-1:-1:-1;6764:17:52;;;;;;;;;6757:24;;;;;;;;;;;;;;;;;;;;;;;;;6634:154::o;2181:2041::-;2261:21:6;:19;:21::i;:::-;2276:48:52::1;::::0;-1:-1:-1;;;2276:48:52;;2287:9:::1;-1:-1:-1::0;;;;;2276:33:52::1;::::0;::::1;::::0;:48:::1;::::0;2318:4:::1;::::0;2276:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2268:94;;;::::0;-1:-1:-1;;;2268:94:52;;::::1;::::0;::::1;;;:::i;:::-;2376:11:::0;2372:24:::1;;2389:7;;2372:24;2407:16;2425:17:::0;2459:7:::1;-1:-1:-1::0;;;;;2446:32:52::1;;:34;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2406:74:::0;;-1:-1:-1;2406:74:52;-1:-1:-1;2495:13:52;;2491:402:::1;;2545:9;2532;:22;;2524:51;;;::::0;-1:-1:-1;;;2524:51:52;;::::1;::::0;::::1;;;:::i;:::-;2605:9;2593;:21;2589:177;;;2635:12;2653:10;2676:21;2688:9:::0;2676::::1;:21;:::i;:::-;2653:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2634:68;;;2728:7;2720:31;;;::::0;-1:-1:-1;;;2720:31:52;;::::1;::::0;::::1;;;:::i;:::-;2589:177;;2799:35;::::0;2780:13:::1;::::0;-1:-1:-1;;;;;2799:13:52;::::1;::::0;2820:9;;2799:35:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2779:55;;;2856:8;2848:34;;;::::0;-1:-1:-1;;;2848:34:52;;::::1;::::0;::::1;;;:::i;:::-;2491:402;;2986:10;2974:23;::::0;;;:11:::1;:23;::::0;;;;:36;::::1;;2969:159;;3038:10;3026:23;::::0;;;3065:4:::1;3026:23;::::0;;;;;;:43;;-1:-1:-1;;3026:43:52::1;::::0;::::1;::::0;;3083:30:::1;:34:::0;2969:159:::1;3196:53;::::0;-1:-1:-1;;;3196:53:52;;3207:9:::1;-1:-1:-1::0;;;;;3196:33:52::1;::::0;::::1;::::0;:53:::1;::::0;3238:10:::1;::::0;3196:53:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3276:10:52::1;3297:1;3264:23:::0;;;:11:::1;:23;::::0;;;;;;;:30:::1;::::0;:34;;-1:-1:-1;3260:433:52::1;::::0;-1:-1:-1;3260:433:52::1;3499:60;::::0;-1:-1:-1;;;3499:60:52;;3314:15:::1;::::0;3332:228:::1;::::0;-1:-1:-1;;;;;3510:9:52::1;3499:33;::::0;::::1;::::0;:60:::1;::::0;3541:4:::1;::::0;3548:10:::1;::::0;3499:60:::1;;;:::i;3332:228::-;3314:246:::0;-1:-1:-1;3578:11:52;;3574:109:::1;;3609:59;::::0;-1:-1:-1;;;3609:59:52;;3620:9:::1;-1:-1:-1::0;;;;;3609:38:52::1;::::0;::::1;::::0;:59:::1;::::0;3648:10:::1;::::0;3660:7;;3609:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3574:109;3260:433;;3703:56;3713:10;3725;3745:4;3752:6;3703:9;:56::i;:::-;3815:10;3803:23;::::0;;;:11:::1;:23;::::0;;;;;;;:43:::1;::::0;:68:::1;::::0;3864:6;3803:60:::1;:68::i;:::-;3782:10;3770:23;::::0;;;:11:::1;:23;::::0;;;;;;;:30:::1;:101:::0;3901:17:::1;::::0;:42:::1;::::0;3936:6;3901:34:::1;:42::i;:::-;3881:17;:62:::0;4086:48:::1;::::0;-1:-1:-1;;;4086:48:52;;3965:9:::1;-1:-1:-1::0;;;;;3954:33:52::1;::::0;::::1;::::0;4001:10:::1;::::0;4025:133:::1;::::0;4153:4:::1;::::0;4025:110:::1;::::0;3954:33;;4086::::1;::::0;:48:::1;::::0;4128:4:::1;::::0;4086:48:::1;;;:::i;4025:133::-;3954:205;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4175:40:52::1;::::0;4196:10:::1;::::0;-1:-1:-1;4185:9:52::1;-1:-1:-1::0;;;;;4175:40:52::1;::::0;-1:-1:-1;4175:40:52::1;::::0;::::1;::::0;4208:6;;4175:40:::1;:::i;:::-;;;;;;;;2292:1:6;;2303:20:::0;:18;:20::i;6216:98:52:-;6298:9;6216:98;:::o;2336:287:6:-;1759:1;2468:7;;:19;;2460:63;;;;-1:-1:-1;;;2460:63:6;;;;;;;:::i;:::-;1759:1;2598:7;:18;2336:287::o;3465:96:26:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:26:o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;1220:219:33:-;1370:12;1393:39;1370:12;1414:9;1425:6;1393:13;:39::i;:::-;1220:219;;;;:::o;2629:209:6:-;1716:1;2809:7;:22;2629:209::o;725:250:33:-;895:12;918:50;895:12;943:5;950:9;961:6;918:17;:50::i;:::-;725:250;;;;;:::o;2755:96:26:-;2813:7;2839:5;2843:1;2839;:5;:::i;2536:229:33:-;2648:110;2671:5;2713:23;;;2738:2;2742:5;2690:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2690:58:33;;;;;;;;;;;;;;-1:-1:-1;;;;;2690:58:33;-1:-1:-1;;;;;;2690:58:33;;;;;;;;;;;2648:9;:110::i;:::-;2536:229;;;:::o;3029:265::-;3167:120;3190:5;3232:27;;;3261:4;3267:2;3271:5;3209:68;;;;;;;;;;:::i;3455:375::-;3567:25;;3526:12;;;;-1:-1:-1;;;;;3567:19:33;;;:25;;3587:4;;3567:25;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3525:67;;;;3610:7;3602:38;;;;-1:-1:-1;;;3602:38:33;;;;;;;:::i;:::-;3655:17;;:21;3651:173;;3728:10;3717:30;;;;;;;;;;;;:::i;:::-;3692:121;;;;-1:-1:-1;;;3692:121:33;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;14:259:67:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:324::-;;;418:2;406:9;397:7;393:23;389:32;386:2;;;439:6;431;424:22;386:2;476:9;470:16;495:33;522:5;495:33;:::i;:::-;592:2;577:18;;;;571:25;547:5;;571:25;;-1:-1:-1;;;376:226:67:o;607:297::-;;727:2;715:9;706:7;702:23;698:32;695:2;;;748:6;740;733:22;695:2;785:9;779:16;838:5;831:13;824:21;817:5;814:32;804:2;;865:6;857;850:22;909:190;;1021:2;1009:9;1000:7;996:23;992:32;989:2;;;1042:6;1034;1027:22;989:2;-1:-1:-1;1070:23:67;;979:120;-1:-1:-1;979:120:67:o;1104:194::-;;1227:2;1215:9;1206:7;1202:23;1198:32;1195:2;;;1248:6;1240;1233:22;1195:2;-1:-1:-1;1276:16:67;;1185:113;-1:-1:-1;1185:113:67:o;1303:274::-;;1470:6;1464:13;1486:53;1532:6;1527:3;1520:4;1512:6;1508:17;1486:53;:::i;:::-;1555:16;;;;;1440:137;-1:-1:-1;;1440:137:67:o;1582:205::-;1782:3;1773:14::o;1792:203::-;-1:-1:-1;;;;;1956:32:67;;;;1938:51;;1926:2;1911:18;;1893:102::o;2000:304::-;-1:-1:-1;;;;;2230:15:67;;;2212:34;;2282:15;;2277:2;2262:18;;2255:43;2162:2;2147:18;;2129:175::o;2309:375::-;-1:-1:-1;;;;;2567:15:67;;;2549:34;;2619:15;;;;2614:2;2599:18;;2592:43;2666:2;2651:18;;2644:34;;;;2499:2;2484:18;;2466:218::o;2689:274::-;-1:-1:-1;;;;;2881:32:67;;;;2863:51;;2945:2;2930:18;;2923:34;2851:2;2836:18;;2818:145::o;2968:383::-;;3117:2;3106:9;3099:21;3149:6;3143:13;3192:6;3187:2;3176:9;3172:18;3165:34;3208:66;3267:6;3262:2;3251:9;3247:18;3242:2;3234:6;3230:15;3208:66;:::i;:::-;3335:2;3314:15;-1:-1:-1;;3310:29:67;3295:45;;;;3342:2;3291:54;;3089:262;-1:-1:-1;;3089:262:67:o;3356:356::-;3558:2;3540:21;;;3577:18;;;3570:30;3636:34;3631:2;3616:18;;3609:62;3703:2;3688:18;;3530:182::o;3717:337::-;3919:2;3901:21;;;3958:2;3938:18;;;3931:30;-1:-1:-1;;;3992:2:67;3977:18;;3970:43;4045:2;4030:18;;3891:163::o;4059:427::-;4289:2;4271:21;;;4328:1;4308:18;;;4301:29;-1:-1:-1;;;4361:2:67;4346:18;;4339:34;-1:-1:-1;;;;;4447:32:67;;;;4440:4;4425:20;;4418:62;4405:3;4390:19;;4261:225::o;4491:342::-;4693:2;4675:21;;;4732:2;4712:18;;;4705:30;-1:-1:-1;;;4766:2:67;4751:18;;4744:48;4824:2;4809:18;;4665:168::o;4838:397::-;5040:2;5022:21;;;5079:2;5059:18;;;5052:30;5118:34;5113:2;5098:18;;5091:62;-1:-1:-1;;;5184:2:67;5169:18;;5162:31;5225:3;5210:19;;5012:223::o;5240:335::-;5442:2;5424:21;;;5481:2;5461:18;;;5454:30;-1:-1:-1;;;5515:2:67;5500:18;;5493:41;5566:2;5551:18;;5414:161::o;5580:340::-;5782:2;5764:21;;;5821:2;5801:18;;;5794:30;-1:-1:-1;;;5855:2:67;5840:18;;5833:46;5911:2;5896:18;;5754:166::o;5925:355::-;6127:2;6109:21;;;6166:2;6146:18;;;6139:30;6205:33;6200:2;6185:18;;6178:61;6271:2;6256:18;;6099:181::o;6285:323::-;6523:13;;6516:21;6509:29;6491:48;;6595:4;6583:17;;;6577:24;6555:20;;;6548:54;;;;6479:2;6464:18;;6446:162::o;6613:177::-;6759:25;;;6747:2;6732:18;;6714:76::o;6795:128::-;;6866:1;6862:6;6859:1;6856:13;6853:2;;;6872:18;;:::i;:::-;-1:-1:-1;6908:9:67;;6843:80::o;6928:217::-;;6994:1;6984:2;;-1:-1:-1;;;7019:31:67;;7073:4;7070:1;7063:15;7101:4;7019:31;7091:15;6984:2;-1:-1:-1;7130:9:67;;6974:171::o;7150:168::-;;7256:1;7252;7248:6;7244:14;7241:1;7238:21;7233:1;7226:9;7219:17;7215:45;7212:2;;;7263:18;;:::i;:::-;-1:-1:-1;7303:9:67;;7202:116::o;7323:125::-;;7391:1;7388;7385:8;7382:2;;;7396:18;;:::i;:::-;-1:-1:-1;7433:9:67;;7372:76::o;7453:258::-;7525:1;7535:113;7549:6;7546:1;7543:13;7535:113;;;7625:11;;;7619:18;7606:11;;;7599:39;7571:2;7564:10;7535:113;;;7666:6;7663:1;7660:13;7657:2;;;-1:-1:-1;;7701:1:67;7683:16;;7676:27;7506:205::o;7716:380::-;7801:1;7791:12;;7848:1;7838:12;;;7859:2;;7913:4;7905:6;7901:17;7891:27;;7859:2;7966;7958:6;7955:14;7935:18;7932:38;7929:2;;;8012:10;8007:3;8003:20;8000:1;7993:31;8047:4;8044:1;8037:15;8075:4;8072:1;8065:15;7929:2;;7771:325;;;:::o;8101:127::-;8162:10;8157:3;8153:20;8150:1;8143:31;8193:4;8190:1;8183:15;8217:4;8214:1;8207:15;8233:133;-1:-1:-1;;;;;8310:31:67;;8300:42;;8290:2;;8356:1;8353;8346:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"../../interfaces/ICommunity.sol\";\nimport \"../../interfaces/IPool.sol\";\nimport \"../../ERC20Helper.sol\";\nimport \"../../interfaces/IPoolFactory.sol\";\n\n/**\n * @dev Template contract of Nutbox staking pool.\n *\n * Every pool saves a user staking ledger of a specific staking asset.\n * The only place that user can deposit and withdraw their staked asset.\n * Also only user themself than withdraw their staked asset\n */\ncontract ERC20Staking is IPool, ERC20Helper, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    struct StakingInfo {\n        // First time when user staking, we need set options like userDebt to zero\n        bool hasDeposited;\n        // User staked amount\n        uint256 amount;\n    }\n    address immutable factory;\n\n    // stakingInfo used to save every user's staking information,\n    // including how many they deposited and its external chain account\n    // ( we support crosschain asset staking). With every staking event\n    // happened including deposit and withdraw asset this field should be updated.\n    mapping(address => StakingInfo) stakingInfo;\n\n    string public name;\n\n    // stakeToken actually is a asset contract entity, it represents the asset user stake of this pool.\n    // Bascially, it should be a normal ERC20 token or a lptoken of a specific token exchange pair\n    address immutable public stakeToken;\n    // community that pool belongs to\n    address immutable community;\n\n    // Total staked amount\n    uint256 public totalStakedAmount;\n\n    event Deposited(\n        address indexed community,\n        address indexed who,\n        uint256 amount\n    );\n    event Withdrawn(\n        address indexed community,\n        address indexed who,\n        uint256 amount\n    );\n\n    constructor(address _community, string memory _name, address _stakeToken) {\n        factory = msg.sender;\n        community = _community;\n        name = _name;\n        stakeToken = _stakeToken;\n    }\n\n    receive() external payable {}\n\n    function deposit(\n        uint256 amount\n    ) external nonReentrant payable {\n        require(ICommunity(community).poolActived(address(this)), 'Can not deposit to a closed pool.');\n        if (amount == 0) return;\n\n        (address receiver, uint256 feeAmount) = IPoolFactory(factory).getFeeInfo();\n\n        if (feeAmount > 0) {\n            require(msg.value >= feeAmount, \"Insufficient fee\");\n            if (msg.value > feeAmount) {\n                (bool success, ) = msg.sender.call{value: msg.value - feeAmount}(\"\");\n                require(success, \"Refund fail\");\n            }\n            (bool success1, ) = receiver.call{value: feeAmount}(\"\");\n            require(success1, \"Cost fee fail\");\n        }\n\n        // Add to staking list if account hasn't deposited before\n        if (!stakingInfo[msg.sender].hasDeposited) {\n            stakingInfo[msg.sender].hasDeposited = true;\n            stakingInfo[msg.sender].amount = 0;\n        }\n\n        // trigger community update all pool staking info\n        ICommunity(community).updatePools(\"USER\", msg.sender);\n\n        if (stakingInfo[msg.sender].amount > 0) {\n            uint256 pending = stakingInfo[msg.sender]\n                .amount\n                .mul(ICommunity(community).getShareAcc(address(this)))\n                .div(1e12)\n                .sub(ICommunity(community).getUserDebt(address(this), msg.sender));\n            if (pending > 0) {\n                ICommunity(community).appendUserReward(msg.sender, pending);\n            }\n        }\n\n        lockERC20(stakeToken, msg.sender, address(this), amount);\n\n        stakingInfo[msg.sender].amount = stakingInfo[msg.sender]\n            .amount\n            .add(amount);\n        totalStakedAmount = totalStakedAmount\n            .add(amount);\n\n        ICommunity(community).setUserDebt(\n            msg.sender,\n            stakingInfo[msg.sender]\n            .amount\n            .mul(ICommunity(community).getShareAcc(address(this)))\n            .div(1e12));\n\n        emit Deposited(community, msg.sender, amount);\n    }\n\n    function withdraw(\n        uint256 amount\n    ) external payable nonReentrant {\n        if (amount == 0) return;\n        if (stakingInfo[msg.sender].amount == 0) return;\n\n        (address receiver, uint256 feeAmount) = IPoolFactory(factory).getFeeInfo();\n        if (feeAmount > 0) {\n            require(msg.value >= feeAmount, \"Insufficient fee\");\n            if (msg.value > feeAmount) {\n                (bool success, ) = msg.sender.call{value: msg.value - feeAmount}(\"\");\n                require(success, \"Refund fail\");\n            }\n            (bool success1, ) = receiver.call{value: feeAmount}(\"\");\n            require(success1, \"Cost fee fail\");\n        }\n\n        // trigger community update all pool staking info\n        ICommunity(community).updatePools(\"USER\", msg.sender);\n\n        uint256 pending = stakingInfo[msg.sender]\n            .amount\n            .mul(ICommunity(community).getShareAcc(address(this)))\n            .div(1e12)\n            .sub(ICommunity(community).getUserDebt(address(this), msg.sender));\n        if (pending > 0) {\n            ICommunity(community).appendUserReward(msg.sender, pending);\n        }\n\n        uint256 withdrawAmount;\n        if (amount >= stakingInfo[msg.sender].amount)\n            withdrawAmount = stakingInfo[msg.sender].amount;\n        else withdrawAmount = amount;\n\n        releaseERC20(stakeToken, address(msg.sender), withdrawAmount);\n\n        stakingInfo[msg.sender].amount = stakingInfo[msg.sender]\n            .amount\n            .sub(withdrawAmount);\n        totalStakedAmount = totalStakedAmount\n            .sub(withdrawAmount);\n\n        ICommunity(community).setUserDebt(\n            msg.sender,\n            stakingInfo[msg.sender]\n            .amount\n            .mul(ICommunity(community).getShareAcc(address(this)))\n            .div(1e12));\n\n        emit Withdrawn(community, msg.sender, withdrawAmount);\n    }\n\n    function getFactory() external view override returns (address) {\n        return factory;\n    }\n\n    function getCommunity() external view override returns (address) {\n        return community;\n    }\n\n    function getUserStakedAmount(address user)\n        external\n        view\n        override returns (uint256)\n    {\n        return stakingInfo[user].amount;\n    }\n\n    function getTotalStakedAmount()\n        external\n        view\n        override returns (uint256)\n    {\n        return totalStakedAmount;\n    }\n\n    function getUserDepositInfo(address user)\n        external\n        view\n        returns (StakingInfo memory)\n    {\n        return stakingInfo[user];\n    }\n}\n",
  "sourcePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/erc20-staking/ERC20Staking.sol",
  "ast": {
    "absolutePath": "project:/contracts/dapps/erc20-staking/ERC20Staking.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "AccessControlEnumerable": [
        440
      ],
      "Context": [
        3799
      ],
      "ERC165": [
        4052
      ],
      "ERC20": [
        3127
      ],
      "ERC20Burnable": [
        3249
      ],
      "ERC20Helper": [
        8435
      ],
      "ERC20Pausable": [
        3286
      ],
      "ERC20PresetMinterPauser": [
        3447
      ],
      "ERC20Staking": [
        16157
      ],
      "EnumerableSet": [
        5960
      ],
      "IAccessControl": [
        513
      ],
      "IAccessControlEnumerable": [
        538
      ],
      "ICommunity": [
        17838
      ],
      "IERC165": [
        4064
      ],
      "IERC20": [
        3205
      ],
      "IERC20Metadata": [
        3311
      ],
      "IPool": [
        17901
      ],
      "IPoolFactory": [
        17924
      ],
      "Math": [
        4930
      ],
      "Pausable": [
        759
      ],
      "ReentrancyGuard": [
        824
      ],
      "SafeMath": [
        5242
      ],
      "SignedMath": [
        5347
      ],
      "Strings": [
        4028
      ]
    },
    "id": 16158,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15543,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:52"
      },
      {
        "id": 15544,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:52"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 15545,
        "nodeType": "ImportDirective",
        "scope": 16158,
        "sourceUnit": 5243,
        "src": "91:57:52",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 15546,
        "nodeType": "ImportDirective",
        "scope": 16158,
        "sourceUnit": 825,
        "src": "149:62:52",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ICommunity.sol",
        "file": "../../interfaces/ICommunity.sol",
        "id": 15547,
        "nodeType": "ImportDirective",
        "scope": 16158,
        "sourceUnit": 17839,
        "src": "212:41:52",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPool.sol",
        "file": "../../interfaces/IPool.sol",
        "id": 15548,
        "nodeType": "ImportDirective",
        "scope": 16158,
        "sourceUnit": 17902,
        "src": "254:36:52",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20Helper.sol",
        "file": "../../ERC20Helper.sol",
        "id": 15549,
        "nodeType": "ImportDirective",
        "scope": 16158,
        "sourceUnit": 8436,
        "src": "291:31:52",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPoolFactory.sol",
        "file": "../../interfaces/IPoolFactory.sol",
        "id": 15550,
        "nodeType": "ImportDirective",
        "scope": 16158,
        "sourceUnit": 17925,
        "src": "323:43:52",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15552,
              "name": "IPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17901,
              "src": "658:5:52"
            },
            "id": 15553,
            "nodeType": "InheritanceSpecifier",
            "src": "658:5:52"
          },
          {
            "baseName": {
              "id": 15554,
              "name": "ERC20Helper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8435,
              "src": "665:11:52"
            },
            "id": 15555,
            "nodeType": "InheritanceSpecifier",
            "src": "665:11:52"
          },
          {
            "baseName": {
              "id": 15556,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 824,
              "src": "678:15:52"
            },
            "id": 15557,
            "nodeType": "InheritanceSpecifier",
            "src": "678:15:52"
          }
        ],
        "contractDependencies": [
          824,
          8435,
          17901
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 15551,
          "nodeType": "StructuredDocumentation",
          "src": "368:264:52",
          "text": " @dev Template contract of Nutbox staking pool.\n Every pool saves a user staking ledger of a specific staking asset.\n The only place that user can deposit and withdraw their staked asset.\n Also only user themself than withdraw their staked asset"
        },
        "fullyImplemented": true,
        "id": 16157,
        "linearizedBaseContracts": [
          16157,
          824,
          8435,
          17901
        ],
        "name": "ERC20Staking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15560,
            "libraryName": {
              "id": 15558,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5242,
              "src": "706:8:52"
            },
            "nodeType": "UsingForDirective",
            "src": "700:27:52",
            "typeName": {
              "id": 15559,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "719:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "ERC20Staking.StakingInfo",
            "id": 15565,
            "members": [
              {
                "constant": false,
                "id": 15562,
                "mutability": "mutable",
                "name": "hasDeposited",
                "nodeType": "VariableDeclaration",
                "scope": 15565,
                "src": "845:17:52",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 15561,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "845:4:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15564,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 15565,
                "src": "902:14:52",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15563,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "902:7:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nodeType": "StructDefinition",
            "scope": 16157,
            "src": "733:190:52",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15567,
            "mutability": "immutable",
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "scope": 16157,
            "src": "928:25:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15566,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "928:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15572,
            "mutability": "mutable",
            "name": "stakingInfo",
            "nodeType": "VariableDeclaration",
            "scope": 16157,
            "src": "1253:43:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
              "typeString": "mapping(address => struct ERC20Staking.StakingInfo)"
            },
            "typeName": {
              "id": 15571,
              "keyType": {
                "id": 15568,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1261:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1253:31:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                "typeString": "mapping(address => struct ERC20Staking.StakingInfo)"
              },
              "valueType": {
                "id": 15570,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 15569,
                  "name": "StakingInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15565,
                  "src": "1272:11:52"
                },
                "referencedDeclaration": 15565,
                "src": "1272:11:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$15565_storage_ptr",
                  "typeString": "struct ERC20Staking.StakingInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 15574,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 16157,
            "src": "1303:18:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 15573,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1303:6:52",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "51ed6a30",
            "id": 15576,
            "mutability": "immutable",
            "name": "stakeToken",
            "nodeType": "VariableDeclaration",
            "scope": 16157,
            "src": "1531:35:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15575,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1531:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15578,
            "mutability": "immutable",
            "name": "community",
            "nodeType": "VariableDeclaration",
            "scope": 16157,
            "src": "1610:27:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15577,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1610:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "567e98f9",
            "id": 15580,
            "mutability": "mutable",
            "name": "totalStakedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 16157,
            "src": "1671:32:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15579,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1671:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 15588,
            "name": "Deposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15582,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 15588,
                  "src": "1735:25:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15584,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 15588,
                  "src": "1770:19:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15586,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15588,
                  "src": "1799:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1725:94:52"
            },
            "src": "1710:110:52"
          },
          {
            "anonymous": false,
            "id": 15596,
            "name": "Withdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15590,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 15596,
                  "src": "1850:25:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15592,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 15596,
                  "src": "1885:19:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1885:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15594,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15596,
                  "src": "1914:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1840:94:52"
            },
            "src": "1825:110:52"
          },
          {
            "body": {
              "id": 15622,
              "nodeType": "Block",
              "src": "2015:125:52",
              "statements": [
                {
                  "expression": {
                    "id": 15608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15605,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15567,
                      "src": "2025:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15606,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2035:3:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2035:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2025:20:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 15609,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:20:52"
                },
                {
                  "expression": {
                    "id": 15612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15610,
                      "name": "community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15578,
                      "src": "2055:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15611,
                      "name": "_community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15598,
                      "src": "2067:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2055:22:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 15613,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:22:52"
                },
                {
                  "expression": {
                    "id": 15616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15614,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15574,
                      "src": "2087:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15615,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15600,
                      "src": "2094:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2087:12:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 15617,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:12:52"
                },
                {
                  "expression": {
                    "id": 15620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15618,
                      "name": "stakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15576,
                      "src": "2109:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15619,
                      "name": "_stakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15602,
                      "src": "2122:11:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2109:24:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 15621,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:24:52"
                }
              ]
            },
            "id": 15623,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15598,
                  "mutability": "mutable",
                  "name": "_community",
                  "nodeType": "VariableDeclaration",
                  "scope": 15623,
                  "src": "1953:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15600,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 15623,
                  "src": "1973:19:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15599,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1973:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15602,
                  "mutability": "mutable",
                  "name": "_stakeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 15623,
                  "src": "1994:19:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1952:62:52"
            },
            "returnParameters": {
              "id": 15604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2015:0:52"
            },
            "scope": 16157,
            "src": "1941:199:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15626,
              "nodeType": "Block",
              "src": "2173:2:52",
              "statements": []
            },
            "id": 15627,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2153:2:52"
            },
            "returnParameters": {
              "id": 15625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2173:0:52"
            },
            "scope": 16157,
            "src": "2146:29:52",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15871,
              "nodeType": "Block",
              "src": "2258:1964:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 15641,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2318:4:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                  "typeString": "contract ERC20Staking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                  "typeString": "contract ERC20Staking"
                                }
                              ],
                              "id": 15640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2310:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 15639,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2310:7:52",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 15642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2310:13:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 15636,
                                "name": "community",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15578,
                                "src": "2287:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 15635,
                              "name": "ICommunity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17838,
                              "src": "2276:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                                "typeString": "type(contract ICommunity)"
                              }
                            },
                            "id": 15637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2276:21:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICommunity_$17838",
                              "typeString": "contract ICommunity"
                            }
                          },
                          "id": 15638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "poolActived",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17795,
                          "src": "2276:33:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 15643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2276:48:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c2e",
                        "id": 15644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2326:35:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                          "typeString": "literal_string \"Can not deposit to a closed pool.\""
                        },
                        "value": "Can not deposit to a closed pool."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                          "typeString": "literal_string \"Can not deposit to a closed pool.\""
                        }
                      ],
                      "id": 15634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2268:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2268:94:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15646,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:94:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15647,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15629,
                      "src": "2376:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2386:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2376:11:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15651,
                  "nodeType": "IfStatement",
                  "src": "2372:24:52",
                  "trueBody": {
                    "functionReturnParameters": 15633,
                    "id": 15650,
                    "nodeType": "Return",
                    "src": "2389:7:52"
                  }
                },
                {
                  "assignments": [
                    15653,
                    15655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15653,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nodeType": "VariableDeclaration",
                      "scope": 15871,
                      "src": "2407:16:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 15652,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2407:7:52",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15655,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 15871,
                      "src": "2425:17:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15654,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2425:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15661,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15657,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15567,
                            "src": "2459:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15656,
                          "name": "IPoolFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17924,
                          "src": "2446:12:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPoolFactory_$17924_$",
                            "typeString": "type(contract IPoolFactory)"
                          }
                        },
                        "id": 15658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2446:21:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolFactory_$17924",
                          "typeString": "contract IPoolFactory"
                        }
                      },
                      "id": 15659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFeeInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17923,
                      "src": "2446:32:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$_t_uint256_$",
                        "typeString": "function () view external returns (address,uint256)"
                      }
                    },
                    "id": 15660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:34:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2406:74:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15662,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15655,
                      "src": "2495:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2507:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2495:13:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15712,
                  "nodeType": "IfStatement",
                  "src": "2491:402:52",
                  "trueBody": {
                    "id": 15711,
                    "nodeType": "Block",
                    "src": "2510:383:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 15669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 15666,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2532:3:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 15667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2532:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 15668,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15655,
                                "src": "2545:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2532:22:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420666565",
                              "id": 15670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2556:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af",
                                "typeString": "literal_string \"Insufficient fee\""
                              },
                              "value": "Insufficient fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af",
                                "typeString": "literal_string \"Insufficient fee\""
                              }
                            ],
                            "id": 15665,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2524:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 15671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2524:51:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15672,
                        "nodeType": "ExpressionStatement",
                        "src": "2524:51:52"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 15673,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2593:3:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2593:9:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 15675,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15655,
                            "src": "2605:9:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2593:21:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15696,
                        "nodeType": "IfStatement",
                        "src": "2589:177:52",
                        "trueBody": {
                          "id": 15695,
                          "nodeType": "Block",
                          "src": "2616:150:52",
                          "statements": [
                            {
                              "assignments": [
                                15678,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 15678,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 15695,
                                  "src": "2635:12:52",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 15677,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2635:4:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 15689,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 15687,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2699:2:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 15679,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "2653:3:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 15680,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "2653:10:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 15681,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "2653:15:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 15686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 15685,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 15682,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "2676:3:52",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 15683,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "2676:9:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 15684,
                                        "name": "feeAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15655,
                                        "src": "2688:9:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2676:21:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "2653:45:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 15688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2653:49:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2634:68:52"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 15691,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15678,
                                    "src": "2728:7:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "526566756e64206661696c",
                                    "id": 15692,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2737:13:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_791ec1189a554bfee89b9b6e3f4cb133ccead9dff9097a00db882514f12a1d93",
                                      "typeString": "literal_string \"Refund fail\""
                                    },
                                    "value": "Refund fail"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_791ec1189a554bfee89b9b6e3f4cb133ccead9dff9097a00db882514f12a1d93",
                                      "typeString": "literal_string \"Refund fail\""
                                    }
                                  ],
                                  "id": 15690,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "2720:7:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 15693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2720:31:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 15694,
                              "nodeType": "ExpressionStatement",
                              "src": "2720:31:52"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          15698,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 15698,
                            "mutability": "mutable",
                            "name": "success1",
                            "nodeType": "VariableDeclaration",
                            "scope": 15711,
                            "src": "2780:13:52",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 15697,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2780:4:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 15705,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 15703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2831:2:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 15699,
                                "name": "receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15653,
                                "src": "2799:8:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 15700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2799:13:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 15702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 15701,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15655,
                                "src": "2820:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2799:31:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 15704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2799:35:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2779:55:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 15707,
                              "name": "success1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15698,
                              "src": "2856:8:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f737420666565206661696c",
                              "id": 15708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2866:15:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_239a758de9f0ce47d52fe13b64cb71c51f5cdbbe35d6e83bdef1eb72f45ed578",
                                "typeString": "literal_string \"Cost fee fail\""
                              },
                              "value": "Cost fee fail"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_239a758de9f0ce47d52fe13b64cb71c51f5cdbbe35d6e83bdef1eb72f45ed578",
                                "typeString": "literal_string \"Cost fee fail\""
                              }
                            ],
                            "id": 15706,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2848:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 15709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2848:34:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15710,
                        "nodeType": "ExpressionStatement",
                        "src": "2848:34:52"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 15718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2973:37:52",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 15713,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15572,
                          "src": "2974:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 15716,
                        "indexExpression": {
                          "expression": {
                            "id": 15714,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2986:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2986:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2974:23:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 15717,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hasDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15562,
                      "src": "2974:36:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15736,
                  "nodeType": "IfStatement",
                  "src": "2969:159:52",
                  "trueBody": {
                    "id": 15735,
                    "nodeType": "Block",
                    "src": "3012:116:52",
                    "statements": [
                      {
                        "expression": {
                          "id": 15725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 15719,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15572,
                                "src": "3026:11:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                                  "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                }
                              },
                              "id": 15722,
                              "indexExpression": {
                                "expression": {
                                  "id": 15720,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3038:3:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 15721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3038:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3026:23:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                                "typeString": "struct ERC20Staking.StakingInfo storage ref"
                              }
                            },
                            "id": 15723,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "hasDeposited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15562,
                            "src": "3026:36:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 15724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3065:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3026:43:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15726,
                        "nodeType": "ExpressionStatement",
                        "src": "3026:43:52"
                      },
                      {
                        "expression": {
                          "id": 15733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 15727,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15572,
                                "src": "3083:11:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                                  "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                }
                              },
                              "id": 15730,
                              "indexExpression": {
                                "expression": {
                                  "id": 15728,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3095:3:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 15729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3095:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3083:23:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                                "typeString": "struct ERC20Staking.StakingInfo storage ref"
                              }
                            },
                            "id": 15731,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15564,
                            "src": "3083:30:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 15732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3116:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3083:34:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15734,
                        "nodeType": "ExpressionStatement",
                        "src": "3083:34:52"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "55534552",
                        "id": 15741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3230:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        "value": "USER"
                      },
                      {
                        "expression": {
                          "id": 15742,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3238:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3238:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15738,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15578,
                            "src": "3207:9:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15737,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17838,
                          "src": "3196:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 15739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3196:21:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$17838",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 15740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17837,
                      "src": "3196:33:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) external"
                      }
                    },
                    "id": 15744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:53:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15745,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:53:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 15746,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15572,
                          "src": "3264:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 15749,
                        "indexExpression": {
                          "expression": {
                            "id": 15747,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3276:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3276:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3264:23:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 15750,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15564,
                      "src": "3264:30:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3297:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3264:34:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15803,
                  "nodeType": "IfStatement",
                  "src": "3260:433:52",
                  "trueBody": {
                    "id": 15802,
                    "nodeType": "Block",
                    "src": "3300:393:52",
                    "statements": [
                      {
                        "assignments": [
                          15754
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 15754,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "scope": 15802,
                            "src": "3314:15:52",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 15753,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3314:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 15787,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 15781,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "3541:4:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                        "typeString": "contract ERC20Staking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                        "typeString": "contract ERC20Staking"
                                      }
                                    ],
                                    "id": 15780,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3533:7:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 15779,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3533:7:52",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 15782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3533:13:52",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 15783,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3548:3:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 15784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3548:10:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 15776,
                                      "name": "community",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15578,
                                      "src": "3510:9:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 15775,
                                    "name": "ICommunity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17838,
                                    "src": "3499:10:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                                      "typeString": "type(contract ICommunity)"
                                    }
                                  },
                                  "id": 15777,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3499:21:52",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommunity_$17838",
                                    "typeString": "contract ICommunity"
                                  }
                                },
                                "id": 15778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getUserDebt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17816,
                                "src": "3499:33:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 15785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3499:60:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 15772,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3472:4:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 15767,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967268,
                                              "src": "3443:4:52",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                                "typeString": "contract ERC20Staking"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                                "typeString": "contract ERC20Staking"
                                              }
                                            ],
                                            "id": 15766,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3435:7:52",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 15765,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3435:7:52",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 15768,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3435:13:52",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 15762,
                                              "name": "community",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 15578,
                                              "src": "3412:9:52",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 15761,
                                            "name": "ICommunity",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 17838,
                                            "src": "3401:10:52",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                                              "typeString": "type(contract ICommunity)"
                                            }
                                          },
                                          "id": 15763,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3401:21:52",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ICommunity_$17838",
                                            "typeString": "contract ICommunity"
                                          }
                                        },
                                        "id": 15764,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getShareAcc",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 17802,
                                        "src": "3401:33:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 15769,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3401:48:52",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 15755,
                                          "name": "stakingInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 15572,
                                          "src": "3332:11:52",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                          }
                                        },
                                        "id": 15758,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 15756,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "3344:3:52",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 15757,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "3344:10:52",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3332:23:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                                        }
                                      },
                                      "id": 15759,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 15564,
                                      "src": "3332:47:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 15760,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5136,
                                    "src": "3332:68:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 15770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3332:118:52",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 15771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5151,
                                "src": "3332:139:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 15773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3332:145:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 15774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5121,
                            "src": "3332:166:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 15786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3332:228:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3314:246:52"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 15788,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15754,
                            "src": "3578:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 15789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3588:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3578:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15801,
                        "nodeType": "IfStatement",
                        "src": "3574:109:52",
                        "trueBody": {
                          "id": 15800,
                          "nodeType": "Block",
                          "src": "3591:92:52",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 15795,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3648:3:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 15796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3648:10:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 15797,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15754,
                                    "src": "3660:7:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 15792,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15578,
                                        "src": "3620:9:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 15791,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17838,
                                      "src": "3609:10:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 15793,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3609:21:52",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$17838",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 15794,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "appendUserReward",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17823,
                                  "src": "3609:38:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 15798,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3609:59:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 15799,
                              "nodeType": "ExpressionStatement",
                              "src": "3609:59:52"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15805,
                        "name": "stakeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15576,
                        "src": "3713:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 15806,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3725:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3725:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 15810,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3745:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                              "typeString": "contract ERC20Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                              "typeString": "contract ERC20Staking"
                            }
                          ],
                          "id": 15809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3737:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15808,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3737:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3737:13:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15812,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15629,
                        "src": "3752:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15804,
                      "name": "lockERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8265,
                      "src": "3703:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 15813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3703:56:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15814,
                  "nodeType": "ExpressionStatement",
                  "src": "3703:56:52"
                },
                {
                  "expression": {
                    "id": 15828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 15815,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15572,
                          "src": "3770:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 15818,
                        "indexExpression": {
                          "expression": {
                            "id": 15816,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3782:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3782:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3770:23:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 15819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15564,
                      "src": "3770:30:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15826,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15629,
                          "src": "3864:6:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 15820,
                              "name": "stakingInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15572,
                              "src": "3803:11:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                                "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                              }
                            },
                            "id": 15823,
                            "indexExpression": {
                              "expression": {
                                "id": 15821,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3815:3:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3815:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3803:23:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                              "typeString": "struct ERC20Staking.StakingInfo storage ref"
                            }
                          },
                          "id": 15824,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15564,
                          "src": "3803:43:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5106,
                        "src": "3803:60:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3803:68:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3770:101:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15829,
                  "nodeType": "ExpressionStatement",
                  "src": "3770:101:52"
                },
                {
                  "expression": {
                    "id": 15835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15830,
                      "name": "totalStakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15580,
                      "src": "3881:17:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15833,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15629,
                          "src": "3936:6:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 15831,
                          "name": "totalStakedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15580,
                          "src": "3901:17:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5106,
                        "src": "3901:34:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3901:42:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3881:62:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15836,
                  "nodeType": "ExpressionStatement",
                  "src": "3881:62:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15841,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4001:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4001:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 15860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4153:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 15855,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "4128:4:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      ],
                                      "id": 15854,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4120:7:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 15853,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4120:7:52",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 15856,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4120:13:52",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 15850,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15578,
                                        "src": "4097:9:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 15849,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17838,
                                      "src": "4086:10:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 15851,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4086:21:52",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$17838",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 15852,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getShareAcc",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17802,
                                  "src": "4086:33:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 15857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4086:48:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 15843,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15572,
                                    "src": "4025:11:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                                      "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 15846,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 15844,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "4037:3:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 15845,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4037:10:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4025:23:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                                    "typeString": "struct ERC20Staking.StakingInfo storage ref"
                                  }
                                },
                                "id": 15847,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15564,
                                "src": "4025:43:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 15848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5136,
                              "src": "4025:60:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 15858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4025:110:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 15859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5151,
                          "src": "4025:127:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 15861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4025:133:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15838,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15578,
                            "src": "3965:9:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15837,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17838,
                          "src": "3954:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 15839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3954:21:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$17838",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 15840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUserDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17830,
                      "src": "3954:33:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 15862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3954:205:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15863,
                  "nodeType": "ExpressionStatement",
                  "src": "3954:205:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 15865,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15578,
                        "src": "4185:9:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 15866,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4196:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4196:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15868,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15629,
                        "src": "4208:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15864,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15588,
                      "src": "4175:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4175:40:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15870,
                  "nodeType": "EmitStatement",
                  "src": "4170:45:52"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 15872,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15632,
                "modifierName": {
                  "id": 15631,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 789,
                  "src": "2237:12:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "2237:12:52"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15629,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15872,
                  "src": "2207:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2197:30:52"
            },
            "returnParameters": {
              "id": 15633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2258:0:52"
            },
            "scope": 16157,
            "src": "2181:2041:52",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16101,
              "nodeType": "Block",
              "src": "4306:1804:52",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15879,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15874,
                      "src": "4320:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4330:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4320:11:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15883,
                  "nodeType": "IfStatement",
                  "src": "4316:24:52",
                  "trueBody": {
                    "functionReturnParameters": 15878,
                    "id": 15882,
                    "nodeType": "Return",
                    "src": "4333:7:52"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 15884,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15572,
                          "src": "4353:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 15887,
                        "indexExpression": {
                          "expression": {
                            "id": 15885,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4365:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4365:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4353:23:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 15888,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15564,
                      "src": "4353:30:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4387:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4353:35:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15892,
                  "nodeType": "IfStatement",
                  "src": "4349:48:52",
                  "trueBody": {
                    "functionReturnParameters": 15878,
                    "id": 15891,
                    "nodeType": "Return",
                    "src": "4390:7:52"
                  }
                },
                {
                  "assignments": [
                    15894,
                    15896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15894,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nodeType": "VariableDeclaration",
                      "scope": 16101,
                      "src": "4408:16:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 15893,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4408:7:52",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15896,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 16101,
                      "src": "4426:17:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15895,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4426:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15902,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15898,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15567,
                            "src": "4460:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15897,
                          "name": "IPoolFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17924,
                          "src": "4447:12:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPoolFactory_$17924_$",
                            "typeString": "type(contract IPoolFactory)"
                          }
                        },
                        "id": 15899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4447:21:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolFactory_$17924",
                          "typeString": "contract IPoolFactory"
                        }
                      },
                      "id": 15900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFeeInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17923,
                      "src": "4447:32:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$_t_uint256_$",
                        "typeString": "function () view external returns (address,uint256)"
                      }
                    },
                    "id": 15901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:34:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4407:74:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15903,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15896,
                      "src": "4495:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4507:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4495:13:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15953,
                  "nodeType": "IfStatement",
                  "src": "4491:402:52",
                  "trueBody": {
                    "id": 15952,
                    "nodeType": "Block",
                    "src": "4510:383:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 15910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 15907,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4532:3:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 15908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "4532:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 15909,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15896,
                                "src": "4545:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4532:22:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420666565",
                              "id": 15911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4556:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af",
                                "typeString": "literal_string \"Insufficient fee\""
                              },
                              "value": "Insufficient fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af",
                                "typeString": "literal_string \"Insufficient fee\""
                              }
                            ],
                            "id": 15906,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4524:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 15912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4524:51:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15913,
                        "nodeType": "ExpressionStatement",
                        "src": "4524:51:52"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 15914,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4593:3:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "4593:9:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 15916,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15896,
                            "src": "4605:9:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4593:21:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15937,
                        "nodeType": "IfStatement",
                        "src": "4589:177:52",
                        "trueBody": {
                          "id": 15936,
                          "nodeType": "Block",
                          "src": "4616:150:52",
                          "statements": [
                            {
                              "assignments": [
                                15919,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 15919,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 15936,
                                  "src": "4635:12:52",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 15918,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4635:4:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 15930,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 15928,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4699:2:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 15920,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "4653:3:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 15921,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4653:10:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 15922,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "4653:15:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 15927,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 15926,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 15923,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "4676:3:52",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 15924,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "4676:9:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 15925,
                                        "name": "feeAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15896,
                                        "src": "4688:9:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4676:21:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "4653:45:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 15929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4653:49:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4634:68:52"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 15932,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15919,
                                    "src": "4728:7:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "526566756e64206661696c",
                                    "id": 15933,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4737:13:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_791ec1189a554bfee89b9b6e3f4cb133ccead9dff9097a00db882514f12a1d93",
                                      "typeString": "literal_string \"Refund fail\""
                                    },
                                    "value": "Refund fail"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_791ec1189a554bfee89b9b6e3f4cb133ccead9dff9097a00db882514f12a1d93",
                                      "typeString": "literal_string \"Refund fail\""
                                    }
                                  ],
                                  "id": 15931,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "4720:7:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 15934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4720:31:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 15935,
                              "nodeType": "ExpressionStatement",
                              "src": "4720:31:52"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          15939,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 15939,
                            "mutability": "mutable",
                            "name": "success1",
                            "nodeType": "VariableDeclaration",
                            "scope": 15952,
                            "src": "4780:13:52",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 15938,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4780:4:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 15946,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 15944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4831:2:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 15940,
                                "name": "receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15894,
                                "src": "4799:8:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 15941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "4799:13:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 15943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 15942,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15896,
                                "src": "4820:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "4799:31:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 15945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4799:35:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4779:55:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 15948,
                              "name": "success1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15939,
                              "src": "4856:8:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f737420666565206661696c",
                              "id": 15949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4866:15:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_239a758de9f0ce47d52fe13b64cb71c51f5cdbbe35d6e83bdef1eb72f45ed578",
                                "typeString": "literal_string \"Cost fee fail\""
                              },
                              "value": "Cost fee fail"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_239a758de9f0ce47d52fe13b64cb71c51f5cdbbe35d6e83bdef1eb72f45ed578",
                                "typeString": "literal_string \"Cost fee fail\""
                              }
                            ],
                            "id": 15947,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4848:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 15950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4848:34:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15951,
                        "nodeType": "ExpressionStatement",
                        "src": "4848:34:52"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "55534552",
                        "id": 15958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4995:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        "value": "USER"
                      },
                      {
                        "expression": {
                          "id": 15959,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5003:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5003:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15955,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15578,
                            "src": "4972:9:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15954,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17838,
                          "src": "4961:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 15956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4961:21:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$17838",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 15957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17837,
                      "src": "4961:33:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) external"
                      }
                    },
                    "id": 15961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4961:53:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15962,
                  "nodeType": "ExpressionStatement",
                  "src": "4961:53:52"
                },
                {
                  "assignments": [
                    15964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15964,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "scope": 16101,
                      "src": "5025:15:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15963,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5025:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15997,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 15991,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "5236:4:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                  "typeString": "contract ERC20Staking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                  "typeString": "contract ERC20Staking"
                                }
                              ],
                              "id": 15990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5228:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 15989,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5228:7:52",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 15992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5228:13:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15993,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5243:3:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5243:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 15986,
                                "name": "community",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15578,
                                "src": "5205:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 15985,
                              "name": "ICommunity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17838,
                              "src": "5194:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                                "typeString": "type(contract ICommunity)"
                              }
                            },
                            "id": 15987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5194:21:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICommunity_$17838",
                              "typeString": "contract ICommunity"
                            }
                          },
                          "id": 15988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getUserDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17816,
                          "src": "5194:33:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 15995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5194:60:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 15982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5171:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 15977,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "5146:4:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      ],
                                      "id": 15976,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5138:7:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 15975,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5138:7:52",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 15978,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5138:13:52",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 15972,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15578,
                                        "src": "5115:9:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 15971,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17838,
                                      "src": "5104:10:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 15973,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5104:21:52",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$17838",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 15974,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getShareAcc",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17802,
                                  "src": "5104:33:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 15979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5104:48:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 15965,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15572,
                                    "src": "5043:11:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                                      "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 15968,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 15966,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "5055:3:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 15967,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5055:10:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5043:23:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                                    "typeString": "struct ERC20Staking.StakingInfo storage ref"
                                  }
                                },
                                "id": 15969,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15564,
                                "src": "5043:43:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 15970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5136,
                              "src": "5043:60:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 15980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5043:110:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 15981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5151,
                          "src": "5043:127:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 15983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5043:133:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 15984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5121,
                      "src": "5043:150:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 15996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5043:212:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5025:230:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15998,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15964,
                      "src": "5269:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5279:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5269:11:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16011,
                  "nodeType": "IfStatement",
                  "src": "5265:101:52",
                  "trueBody": {
                    "id": 16010,
                    "nodeType": "Block",
                    "src": "5282:84:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16005,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5335:3:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 16006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5335:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16007,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15964,
                              "src": "5347:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 16002,
                                  "name": "community",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15578,
                                  "src": "5307:9:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 16001,
                                "name": "ICommunity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17838,
                                "src": "5296:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                                  "typeString": "type(contract ICommunity)"
                                }
                              },
                              "id": 16003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5296:21:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICommunity_$17838",
                                "typeString": "contract ICommunity"
                              }
                            },
                            "id": 16004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "appendUserReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17823,
                            "src": "5296:38:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 16008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5296:59:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16009,
                        "nodeType": "ExpressionStatement",
                        "src": "5296:59:52"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    16013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16013,
                      "mutability": "mutable",
                      "name": "withdrawAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 16101,
                      "src": "5376:22:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16012,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5376:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16014,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5376:22:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 16015,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15874,
                      "src": "5412:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 16016,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15572,
                          "src": "5422:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 16019,
                        "indexExpression": {
                          "expression": {
                            "id": 16017,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5434:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5434:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5422:23:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 16020,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15564,
                      "src": "5422:30:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5412:40:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 16032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 16030,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16013,
                        "src": "5528:14:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 16031,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15874,
                        "src": "5545:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5528:23:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16033,
                    "nodeType": "ExpressionStatement",
                    "src": "5528:23:52"
                  },
                  "id": 16034,
                  "nodeType": "IfStatement",
                  "src": "5408:143:52",
                  "trueBody": {
                    "expression": {
                      "id": 16028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 16022,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16013,
                        "src": "5466:14:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "baseExpression": {
                            "id": 16023,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15572,
                            "src": "5483:11:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                              "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                            }
                          },
                          "id": 16026,
                          "indexExpression": {
                            "expression": {
                              "id": 16024,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5495:3:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 16025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5495:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5483:23:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                            "typeString": "struct ERC20Staking.StakingInfo storage ref"
                          }
                        },
                        "id": 16027,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15564,
                        "src": "5483:30:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5466:47:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16029,
                    "nodeType": "ExpressionStatement",
                    "src": "5466:47:52"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16036,
                        "name": "stakeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15576,
                        "src": "5575:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16039,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5595:3:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 16040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5595:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 16038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5587:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5587:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5587:19:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16042,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16013,
                        "src": "5608:14:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16035,
                      "name": "releaseERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8289,
                      "src": "5562:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5562:61:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16044,
                  "nodeType": "ExpressionStatement",
                  "src": "5562:61:52"
                },
                {
                  "expression": {
                    "id": 16058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 16045,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15572,
                          "src": "5634:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                            "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                          }
                        },
                        "id": 16048,
                        "indexExpression": {
                          "expression": {
                            "id": 16046,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5646:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5646:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5634:23:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                          "typeString": "struct ERC20Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 16049,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15564,
                      "src": "5634:30:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16056,
                          "name": "withdrawAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16013,
                          "src": "5728:14:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 16050,
                              "name": "stakingInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15572,
                              "src": "5667:11:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                                "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                              }
                            },
                            "id": 16053,
                            "indexExpression": {
                              "expression": {
                                "id": 16051,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5679:3:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 16052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5679:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5667:23:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                              "typeString": "struct ERC20Staking.StakingInfo storage ref"
                            }
                          },
                          "id": 16054,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15564,
                          "src": "5667:43:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5121,
                        "src": "5667:60:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5667:76:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5634:109:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16059,
                  "nodeType": "ExpressionStatement",
                  "src": "5634:109:52"
                },
                {
                  "expression": {
                    "id": 16065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16060,
                      "name": "totalStakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15580,
                      "src": "5753:17:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16063,
                          "name": "withdrawAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16013,
                          "src": "5808:14:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 16061,
                          "name": "totalStakedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15580,
                          "src": "5773:17:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5121,
                        "src": "5773:34:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5773:50:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5753:70:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16066,
                  "nodeType": "ExpressionStatement",
                  "src": "5753:70:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16071,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5881:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5881:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 16090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6033:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 16085,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "6008:4:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ERC20Staking_$16157",
                                          "typeString": "contract ERC20Staking"
                                        }
                                      ],
                                      "id": 16084,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6000:7:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 16083,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6000:7:52",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 16086,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6000:13:52",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 16080,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15578,
                                        "src": "5977:9:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 16079,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17838,
                                      "src": "5966:10:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 16081,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5966:21:52",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$17838",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 16082,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getShareAcc",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17802,
                                  "src": "5966:33:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 16087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5966:48:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 16073,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15572,
                                    "src": "5905:11:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                                      "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 16076,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 16074,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "5917:3:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 16075,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5917:10:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5905:23:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                                    "typeString": "struct ERC20Staking.StakingInfo storage ref"
                                  }
                                },
                                "id": 16077,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15564,
                                "src": "5905:43:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 16078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5136,
                              "src": "5905:60:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 16088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5905:110:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 16089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5151,
                          "src": "5905:127:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 16091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5905:133:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 16068,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15578,
                            "src": "5845:9:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 16067,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17838,
                          "src": "5834:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$17838_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 16069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5834:21:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$17838",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 16070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUserDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17830,
                      "src": "5834:33:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 16092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5834:205:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16093,
                  "nodeType": "ExpressionStatement",
                  "src": "5834:205:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16095,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15578,
                        "src": "6065:9:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 16096,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6076:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6076:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16098,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16013,
                        "src": "6088:14:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16094,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15596,
                      "src": "6055:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6055:48:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16100,
                  "nodeType": "EmitStatement",
                  "src": "6050:53:52"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 16102,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15877,
                "modifierName": {
                  "id": 15876,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 789,
                  "src": "4293:12:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "4293:12:52"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15874,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16102,
                  "src": "4255:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4255:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4245:30:52"
            },
            "returnParameters": {
              "id": 15878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4306:0:52"
            },
            "scope": 16157,
            "src": "4228:1882:52",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17883
            ],
            "body": {
              "id": 16110,
              "nodeType": "Block",
              "src": "6179:31:52",
              "statements": [
                {
                  "expression": {
                    "id": 16108,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15567,
                    "src": "6196:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 16107,
                  "id": 16109,
                  "nodeType": "Return",
                  "src": "6189:14:52"
                }
              ]
            },
            "functionSelector": "88cc58e4",
            "id": 16111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFactory",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6152:8:52"
            },
            "parameters": {
              "id": 16103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6135:2:52"
            },
            "returnParameters": {
              "id": 16107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16106,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16111,
                  "src": "6170:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6170:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6169:9:52"
            },
            "scope": 16157,
            "src": "6116:94:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17888
            ],
            "body": {
              "id": 16119,
              "nodeType": "Block",
              "src": "6281:33:52",
              "statements": [
                {
                  "expression": {
                    "id": 16117,
                    "name": "community",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15578,
                    "src": "6298:9:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 16116,
                  "id": 16118,
                  "nodeType": "Return",
                  "src": "6291:16:52"
                }
              ]
            },
            "functionSelector": "c51db6b2",
            "id": 16120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommunity",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16113,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6254:8:52"
            },
            "parameters": {
              "id": 16112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6237:2:52"
            },
            "returnParameters": {
              "id": 16116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16115,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16120,
                  "src": "6272:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6272:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6271:9:52"
            },
            "scope": 16157,
            "src": "6216:98:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17895
            ],
            "body": {
              "id": 16133,
              "nodeType": "Block",
              "src": "6432:48:52",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 16128,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15572,
                        "src": "6449:11:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                          "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                        }
                      },
                      "id": 16130,
                      "indexExpression": {
                        "id": 16129,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16122,
                        "src": "6461:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6449:17:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                        "typeString": "struct ERC20Staking.StakingInfo storage ref"
                      }
                    },
                    "id": 16131,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 15564,
                    "src": "6449:24:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16127,
                  "id": 16132,
                  "nodeType": "Return",
                  "src": "6442:31:52"
                }
              ]
            },
            "functionSelector": "94465b21",
            "id": 16134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16124,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6401:8:52"
            },
            "parameters": {
              "id": 16123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16122,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 16134,
                  "src": "6349:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6349:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6348:14:52"
            },
            "returnParameters": {
              "id": 16127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16126,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16134,
                  "src": "6419:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6419:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6418:9:52"
            },
            "scope": 16157,
            "src": "6320:160:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17900
            ],
            "body": {
              "id": 16142,
              "nodeType": "Block",
              "src": "6587:41:52",
              "statements": [
                {
                  "expression": {
                    "id": 16140,
                    "name": "totalStakedAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15580,
                    "src": "6604:17:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16139,
                  "id": 16141,
                  "nodeType": "Return",
                  "src": "6597:24:52"
                }
              ]
            },
            "functionSelector": "38adb6f0",
            "id": 16143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16136,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6556:8:52"
            },
            "parameters": {
              "id": 16135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6515:2:52"
            },
            "returnParameters": {
              "id": 16139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16138,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16143,
                  "src": "6574:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6574:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6573:9:52"
            },
            "scope": 16157,
            "src": "6486:142:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16155,
              "nodeType": "Block",
              "src": "6747:41:52",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 16151,
                      "name": "stakingInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15572,
                      "src": "6764:11:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$15565_storage_$",
                        "typeString": "mapping(address => struct ERC20Staking.StakingInfo storage ref)"
                      }
                    },
                    "id": 16153,
                    "indexExpression": {
                      "id": 16152,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16145,
                      "src": "6776:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6764:17:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$15565_storage",
                      "typeString": "struct ERC20Staking.StakingInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 16150,
                  "id": 16154,
                  "nodeType": "Return",
                  "src": "6757:24:52"
                }
              ]
            },
            "functionSelector": "b3a7834d",
            "id": 16156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserDepositInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16145,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 16156,
                  "src": "6662:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6662:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6661:14:52"
            },
            "returnParameters": {
              "id": 16150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16149,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16156,
                  "src": "6723:18:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$15565_memory_ptr",
                    "typeString": "struct ERC20Staking.StakingInfo"
                  },
                  "typeName": {
                    "id": 16148,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16147,
                      "name": "StakingInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15565,
                      "src": "6723:11:52"
                    },
                    "referencedDeclaration": 15565,
                    "src": "6723:11:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$15565_storage_ptr",
                      "typeString": "struct ERC20Staking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6722:20:52"
            },
            "scope": 16157,
            "src": "6634:154:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 16158,
        "src": "633:6157:52"
      }
    ],
    "src": "33:6758:52"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2024-06-20T15:00:49.716Z",
  "devdoc": {
    "details": "Template contract of Nutbox staking pool. Every pool saves a user staking ledger of a specific staking asset. The only place that user can deposit and withdraw their staked asset. Also only user themself than withdraw their staked asset",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}