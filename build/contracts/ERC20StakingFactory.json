{
  "contractName": "ERC20StakingFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_communityFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        }
      ],
      "name": "ERC20StakingCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "communityFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_communityFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"}],\"name\":\"ERC20StakingCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"communityFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract of Nutbox ERC20 staking pool. x\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/erc20-staking/ERC20StakingFactory.sol\":\"ERC20StakingFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/Community.sol\":{\"keccak256\":\"0x454edbfbde8039209ebc91c564e44631a0f08cf433928a9b483f0e1ce6945990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5331943da057a53a3d207dcf0f8361f33ae70ed1183422bac19ff8ef6030596\",\"dweb:/ipfs/Qmb4F9GxC9cjymJrPvKWw6cbrk8wRgtnjiDTSTWb9Xj5n5\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol\":{\"keccak256\":\"0x651020221943be888ac06515c91ba57fb85a427ee46fe23e86db6eadfb3a2bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c05ef23811ecbda8079d230bc0e69c0b6fd8eb8411d10883c4313a786e78cbbb\",\"dweb:/ipfs/QmNms3YHXUFuY2nE5HkGHFtkRmpj5qffyXgSpmC4pZYgC6\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xddf2a441a9c0714ecc5c14ad5ee6c3ffa2e8155292229574369156004d2bcd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167987fa430b1303ad04b831fa610d31ca3f4202ad847e87cd9bb01156cfe9e0\",\"dweb:/ipfs/Qmf7a5unwgdUWTPfWZ94QRxVVxic12feERMNeC6krcmLmZ\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/community-token/MintableERC20.sol\":{\"keccak256\":\"0xd49c97ab428cd65d2326ad6875aed0082716bbfd094e5fd11cfafc6f778adcf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87da6adb416be4cfa38f6e08989390558297791f362cc237bee8c33080d3bd20\",\"dweb:/ipfs/QmYgQbaazS4L9KVvUhDq7pMxZGhCM8USrgJyjAsLkXDfLX\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/erc20-staking/ERC20Staking.sol\":{\"keccak256\":\"0xe6684284e6bd969a0f46b89ea4be45b76b5028e590372d01e95000adc58ce865\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76c4b1f341d29ca038a270caccf7ac50eaf0518169d94b2e8ab757e9475b56a5\",\"dweb:/ipfs/QmW2eRVQaUTaVUErXXmvoHnDW7uGQbgm85sPSS7GFkhE6u\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/erc20-staking/ERC20StakingFactory.sol\":{\"keccak256\":\"0x4001e9195bd99456ea33e950690a1f91a367830d565cb1ca903cd7b624de5a5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ecf7f8f1c69d41453c9216b0b0f1e4d93fb995fe50daebe8980279a0073476a\",\"dweb:/ipfs/QmU6QMDgBVrFDHpT3ypKy4Ch2FtZh6h58Ljz33YBy1DZpX\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ArbSys.sol\":{\"keccak256\":\"0x22f1cf1781c0d8828112ee5cce04e10bcc56dbb3fa668ceb10895393b21c70b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20f6c6a7c3b39241ebbb40490b70398ed8e013d061354447aba23553fd2a6ddc\",\"dweb:/ipfs/QmWzt87GoVDbz27AnbsZdAAoSK6763Jao7FEULLZfPY5by\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICalculator.sol\":{\"keccak256\":\"0x85e62c5ec77229d1e44b2c838b259829093e616ddbb887261eeaadd11c83c70a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8433eb15b4035948768e8707cae178742fc32fd60813dbba845d177ea87a89c7\",\"dweb:/ipfs/QmRByWaN4DZcSUyJABp1PViBDkBfQuHVAvqeU6FwqTPW9K\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommittee.sol\":{\"keccak256\":\"0x2190b0279cab5723ca36a492c45aad3b43f4f705d1df7d81e2932733b371397e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccd2ccfbbb75866a710e334056949888006443fd92404c66f22a2ffbd3a41acf\",\"dweb:/ipfs/QmUE1FEe5qLTp4TTrv9YBPgo97bdjABwUsRkZxkVcmXkUv\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunity.sol\":{\"keccak256\":\"0x9c8f1379634fc9df3fc965ebd5c11976ce3d71aab8996f8efe903aa4a3042811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e3fe744d29ff2f477050a263547fb192ee52180359d469b1cf1f79062f9db4\",\"dweb:/ipfs/QmcpTdndc9H2PmhTJgF5qabCotM74swULzMKCYDbDAACvp\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunityTokenFactory.sol\":{\"keccak256\":\"0x9a69a2d0752d3002d55ec2734724891fdab03de0a88e15ff297d85a3878924b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54fcdeb38c2292e11b14d0ff2b2d772ab8e14ce56d080685fede2f38749ff1d\",\"dweb:/ipfs/QmZdUicfe2kiGG5WaYpYN9yzNoXN7X3AmCMaosF4Vj6kzz\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IGauge.sol\":{\"keccak256\":\"0xafa9311f14cf7617763940d265d51448c613e574e6cbcdbb4412bd76ca7ae1fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d69b9acd6a010f1e8f5e0f3f533633a360c3f9d128d43c5191cc7e3d0864244\",\"dweb:/ipfs/QmQfwcyuTHGaw8xM9jwA9YzrxaKUSXTKNYobGwXLeCYus8\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xedea7672bb9703bcf57a6bbf386e4b528f55a698a08bc7c4481400738671ac83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20c0e753aa731e11ebe3e2918c863a4e72400983bb466660d3580ce4d9fbcf4\",\"dweb:/ipfs/QmUi3uZ9HVmZDAgyTTvWTPMtov2SudhFdSJ7jGLf8w3eis\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0x690fa318a561b45e70ceee542a68746d8b72a98c4ff83abb177c3e3710190fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91b6a4e9de1e1f01065c329d197dfd1f4d9a0996397f9f79b846804d75b1d2bd\",\"dweb:/ipfs/Qmc1eCVjE1xnQx2uMPkhAz5i3ohDDjEoVmJ5SZ8mdytScP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x1304796e9cdc64294735b4222849a240363b2aff374bb58b7c728f8dc0f4aa75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87398b4ba8f7c7e6613a5967e5407a5af6807e753d326d5e3b8c29697d33e36\",\"dweb:/ipfs/QmWGzaF9UWB5rNW1h9kvkJaWSf95WkQZ7RVR3bJ24oVgwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x978847fbff92d66d27d8767402a90ba996970b1936b372406aa17f5492bd8dc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1414cb92779420b50d3e796b47bad6ea800ef1805bc6f9bf35a3ccb4e17db3dc\",\"dweb:/ipfs/QmaMzwYqLiivfaWSgqeaAPboBtJjVD1hSrH48p7ExJZ7DG\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x670a64416cace45b7f4037a2c1cd66a83fbc2a573621fcf6aeb6b917abffde52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a53de93c53876cf4383ef42f9148f7262145e6ac3b0b2d77ec8e12fccacc81\",\"dweb:/ipfs/QmYqDjDinmFVdMZMwHfNdVFmRrZG9MR9LFfpnDxJAQegJB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051611e86380380611e8683398101604081905261002f916100f1565b61003f61003a61009d565b6100a1565b6001600160a01b038116610088576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007f9061011f565b60405180910390fd5b60601b6001600160601b031916608052610156565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610102578081fd5b81516001600160a01b0381168114610118578182fd5b9392505050565b6020808252600f908201527f496e76616c696420616464726573730000000000000000000000000000000000604082015260600190565b60805160601c611d0b61017b6000396000818161017901526103990152611d0b6000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c8063715018a614620000635780638da5cb5b146200006f578063b883cc2a1462000091578063f2fde38b14620000a8578063fac8a61014620000bf575b600080fd5b6200006d620000c9565b005b6200007962000126565b604051620000889190620006d7565b60405180910390f35b62000079620000a23660046200057e565b62000135565b6200006d620000b93660046200055a565b6200031a565b6200007962000397565b620000d3620003bb565b6001600160a01b0316620000e662000126565b6001600160a01b031614620001185760405162461bcd60e51b81526004016200010f9062000806565b60405180910390fd5b620001246000620003bf565b565b6000546001600160a01b031690565b60006001600160a01b0385163314620001625760405162461bcd60e51b81526004016200010f90620007bc565b604051633454a5b760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906368a94b6e90620001b0908890600401620006d7565b60206040518083038186803b158015620001c957600080fd5b505afa158015620001de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000204919062000667565b620002235760405162461bcd60e51b81526004016200010f9062000866565b60006200026e6000601486868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509294939250506200040f9050565b9050600060208201519050600087878360601c6040516200028f90620004e5565b6200029d93929190620006eb565b604051809103906000f080158015620002ba573d6000803e3d6000fd5b509050876001600160a01b0316816001600160a01b03167f246afd9fb9e1733d63ee77f86f5d1440fb048c65e36822f48d468d9e5e7b8f21898560601c6040516200030792919062000722565b60405180910390a3979650505050505050565b62000324620003bb565b6001600160a01b03166200033762000126565b6001600160a01b031614620003605760405162461bcd60e51b81526004016200010f9062000806565b6001600160a01b038116620003895760405162461bcd60e51b81526004016200010f906200074e565b6200039481620003bf565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060816200041f81601f62000891565b1015620004405760405162461bcd60e51b81526004016200010f9062000794565b6200044c828462000891565b845110156200046f5760405162461bcd60e51b81526004016200010f906200083b565b606082158015620004905760405191506000825260208201604052620004dc565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015620004cb578051835260209283019201620004b1565b5050858452601f01601f1916604052505b50949350505050565b61140980620008cd83390190565b80356001600160a01b03811681146200050b57600080fd5b919050565b60008083601f84011262000522578081fd5b50813567ffffffffffffffff8111156200053a578182fd5b6020830191508360208285010111156200055357600080fd5b9250929050565b6000602082840312156200056c578081fd5b6200057782620004f3565b9392505050565b6000806000806060858703121562000594578283fd5b6200059f85620004f3565b935060208086013567ffffffffffffffff80821115620005bd578586fd5b818801915088601f830112620005d1578586fd5b813581811115620005e657620005e6620008b6565b604051601f8201601f19168101850183811182821017156200060c576200060c620008b6565b60405281815283820185018b101562000623578788fd5b818585018683013787858383010152809750505060408801359250808311156200064b578485fd5b50506200065b8782880162000510565b95989497509550505050565b60006020828403121562000679578081fd5b8151801515811462000577578182fd5b60008151808452815b81811015620006b05760208185018101518683018201520162000692565b81811115620006c25782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b600060018060a01b038086168352606060208401526200070f606084018662000689565b9150808416604084015250949350505050565b60006040825262000737604083018562000689565b905060018060a01b03831660208301529392505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600e908201526d736c6963655f6f766572666c6f7760901b604082015260600190565b6020808252602a908201527f5065726d697373696f6e2064656e6965643a2063616c6c6572206973206e6f7460408201526920636f6d6d756e69747960b01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260119082015270736c6963655f6f75744f66426f756e647360781b604082015260600190565b602080825260119082015270496e76616c696420636f6d6d756e69747960781b604082015260600190565b60008219821115620008b157634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fdfe60e06040523480156200001157600080fd5b506040516200140938038062001409833981016040819052620000349162000144565b600160005533606090811b60805283901b6001600160601b03191660c05281516200006790600290602085019062000081565b5060601b6001600160601b03191660a05250620002c19050565b8280546200008f906200023c565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b80516001600160a01b03811681146200013f57600080fd5b919050565b60008060006060848603121562000159578283fd5b620001648462000127565b602085810151919450906001600160401b038082111562000183578485fd5b818701915087601f83011262000197578485fd5b815181811115620001ac57620001ac62000292565b604051601f8201601f1916810185018381118282101715620001d257620001d262000292565b60405281815283820185018a1015620001e9578687fd5b8692505b818310156200020c5783830185015181840186015291840191620001ed565b818311156200021d57868583830101525b8096505050505050620002336040850162000127565b90509250925092565b6002810460018216806200025157607f821691505b602082108114156200028c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60805160601c60a05160601c60c05160601c6110ad6200035c6000396000818161025b015281816102c90152818161037301528181610452015281816105760152818161061f0152818161077b01528181610872015281816108fb0152818161096601528181610a5701528181610b000152610b690152600081816104f70152818161069101526109d7015260006106bb01526110ad6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806388cc58e41161006657806388cc58e41461010857806394465b2114610110578063b3a7834d14610123578063b6b55f2514610143578063c51db6b2146101565761009e565b806306fdde03146100a35780632e1a7d4d146100c157806338adb6f0146100d657806351ed6a30146100eb578063567e98f914610100575b600080fd5b6100ab61015e565b6040516100b89190610e2f565b60405180910390f35b6100d46100cf366004610d78565b6101ec565b005b6100de610689565b6040516100b89190610f83565b6100f361068f565b6040516100b89190610dc4565b6100de6106b3565b6100f36106b9565b6100de61011e366004610d31565b6106dd565b610136610131366004610d31565b6106fc565b6040516100b89190610f6a565b6100d4610151366004610d78565b61073c565b6100f3610b67565b6002805461016b90611026565b80601f016020809104026020016040519081016040528092919081815260200182805461019790611026565b80156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b505050505081565b600260005414156102185760405162461bcd60e51b815260040161020f90610f33565b60405180910390fd5b60026000558061022757610681565b336000908152600160208190526040909120015461024457610681565b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f290610290903390600401610e97565b600060405180830381600087803b1580156102aa57600080fd5b505af11580156102be573d6000803e3d6000fd5b5050505060006104337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630336040518363ffffffff1660e01b8152600401610315929190610dd8565b60206040518083038186803b15801561032d57600080fd5b505afa158015610341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103659190610d90565b61042d64e8d4a510006104277f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016103bd9190610dc4565b60206040518083038186803b1580156103d557600080fd5b505afa1580156103e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040d9190610d90565b336000908152600160208190526040909120015490610b8b565b90610b9e565b90610baa565b905080156104bc57604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b7208906104899033908590600401610e16565b600060405180830381600087803b1580156104a357600080fd5b505af11580156104b7573d6000803e3d6000fd5b505050505b3360009081526001602081905260408220015483106104ef575033600090815260016020819052604090912001546104f2565b50815b61051d7f00000000000000000000000000000000000000000000000000000000000000003383610bb6565b336000908152600160208190526040909120015461053b9082610baa565b336000908152600160208190526040909120015560035461055c9082610baa565b60035560405163286a276f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063bf16c3c29033906105c49064e8d4a510009061042790869063a1a89dbc906103bd903090600401610dc4565b6040518363ffffffff1660e01b81526004016105e1929190610e16565b600060405180830381600087803b1580156105fb57600080fd5b505af115801561060f573d6000803e3d6000fd5b50505050336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb836040516106769190610f83565b60405180910390a350505b506001600055565b60035490565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b03166000908152600160208190526040909120015490565b610704610d1a565b506001600160a01b03166000908152600160208181526040928390208351808501909452805460ff1615158452909101549082015290565b6002600054141561075f5760405162461bcd60e51b815260040161020f90610f33565b6002600055604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a906107b0903090600401610dc4565b60206040518083038186803b1580156107c857600080fd5b505afa1580156107dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108009190610d58565b61081c5760405162461bcd60e51b815260040161020f90610ef2565b8061082657610681565b3360009081526001602052604090205460ff1661085b573360009081526001602081905260408220805460ff19168217815501555b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f2906108a7903390600401610e97565b600060405180830381600087803b1580156108c157600080fd5b505af11580156108d5573d6000803e3d6000fd5b505033600090815260016020819052604090912001541591506109d290505760006109477f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630336040518363ffffffff1660e01b8152600401610315929190610dd8565b905080156109d057604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b72089061099d9033908590600401610e16565b600060405180830381600087803b1580156109b757600080fd5b505af11580156109cb573d6000803e3d6000fd5b505050505b505b6109fe7f0000000000000000000000000000000000000000000000000000000000000000333084610bc8565b3360009081526001602081905260409091200154610a1c9082610bdc565b3360009081526001602081905260409091200155600354610a3d9082610bdc565b60035560405163286a276f60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063bf16c3c2903390610aa59064e8d4a510009061042790869063a1a89dbc906103bd903090600401610dc4565b6040518363ffffffff1660e01b8152600401610ac2929190610e16565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b50505050336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a783604051610b579190610f83565b60405180910390a3506001600055565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610b978284610fc4565b9392505050565b6000610b978284610fa4565b6000610b978284610fe3565b82610bc2818484610be8565b50505050565b83610bd581858585610c43565b5050505050565b6000610b978284610f8c565b610c3e8363a9059cbb60e01b8484604051602401610c07929190610e16565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610c64565b505050565b610bc2846323b872dd60e01b858585604051602401610c0793929190610df2565b600080836001600160a01b031683604051610c7f9190610da8565b6000604051808303816000865af19150503d8060008114610cbc576040519150601f19603f3d011682016040523d82523d6000602084013e610cc1565b606091505b509150915081610ce35760405162461bcd60e51b815260040161020f90610ec6565b805115610bc25780806020019051810190610cfe9190610d58565b610bc25760405162461bcd60e51b815260040161020f90610e62565b604080518082019091526000808252602082015290565b600060208284031215610d42578081fd5b81356001600160a01b0381168114610b97578182fd5b600060208284031215610d69578081fd5b81518015158114610b97578182fd5b600060208284031215610d89578081fd5b5035919050565b600060208284031215610da1578081fd5b5051919050565b60008251610dba818460208701610ffa565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602082528251806020840152610e4e816040850160208701610ffa565b601f01601f19169190910160400192915050565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b8151151581526020918201519181019190915260400190565b90815260200190565b60008219821115610f9f57610f9f611061565b500190565b600082610fbf57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610fde57610fde611061565b500290565b600082821015610ff557610ff5611061565b500390565b60005b83811015611015578181015183820152602001610ffd565b83811115610bc25750506000910152565b60028104600182168061103a57607f821691505b6020821081141561105b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122005c00aa78e9bc3f326397052bf5d31760b6603d2703851305e3849dfaa90745f64736f6c63430008000033a264697066735822122056a455b976f788320ad3aae190bec4dfbaa8b7da745ed9c7ead5bf2e278473b664736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {
    "8513": [
      {
        "length": 32,
        "start": 377
      },
      {
        "length": 32,
        "start": 921
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:670:48",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:48",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:48"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:48"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:48",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:48",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:48"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:48"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:48",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:48",
                "type": ""
              }
            ],
            "src": "14:310:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:165:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "520:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "531:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "513:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "554:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "565:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "550:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "550:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:2:48",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "543:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "543:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "609:17:48",
                        "type": "",
                        "value": "Invalid address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "582:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:45:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:45:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "636:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "648:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "644:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "636:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "480:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "494:4:48",
                "type": ""
              }
            ],
            "src": "329:339:48"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 48,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6432:48",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:48",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:48",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:48"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:48"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:48",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:48",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:48"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:48",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:48",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:48"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:48"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:48"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:48",
                "type": ""
              }
            ],
            "src": "14:175:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "268:299:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "317:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "326:6:48"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "334:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "319:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "319:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "319:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "296:6:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "304:4:48",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "292:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "292:17:48"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "311:3:48"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "288:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "288:27:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "281:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "281:35:48"
                  },
                  "nodeType": "YulIf",
                  "src": "278:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "352:30:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "375:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "362:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "362:20:48"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "352:6:48"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "425:30:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "434:8:48"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "444:8:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "427:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "427:26:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "427:26:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "397:6:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:18:48",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "394:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "394:30:48"
                  },
                  "nodeType": "YulIf",
                  "src": "391:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "464:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "480:6:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "488:4:48",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "476:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "476:17:48"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "464:8:48"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "545:16:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "554:1:48",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "557:1:48",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "547:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "547:12:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "547:12:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "516:6:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "524:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "512:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "512:19:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "533:4:48",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "508:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "508:30:48"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "540:3:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "505:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "505:39:48"
                  },
                  "nodeType": "YulIf",
                  "src": "502:2:48"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "231:6:48",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "239:3:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "247:8:48",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "257:6:48",
                "type": ""
              }
            ],
            "src": "194:373:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "642:128:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "688:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "697:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "705:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "690:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "690:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "690:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "663:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "672:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "659:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "659:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "684:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "655:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "652:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "723:41:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "754:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "733:20:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:31:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "723:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "608:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "619:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "631:6:48",
                "type": ""
              }
            ],
            "src": "572:198:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "908:1200:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "954:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "963:6:48"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "971:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "956:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "956:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "956:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "929:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "938:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "925:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "925:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "950:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "921:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "918:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "989:41:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1020:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "999:20:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "999:31:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "989:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1039:12:48",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1049:2:48",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1043:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1060:46:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1091:9:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1102:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1087:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1087:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1074:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:32:48"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1064:6:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1115:28:48",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1125:18:48",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1119:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1170:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1179:6:48"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1187:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1172:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1172:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1172:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1158:6:48"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1166:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1155:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:14:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1152:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1205:32:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1219:9:48"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1230:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1215:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:22:48"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1209:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1285:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1294:6:48"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1302:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1287:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1287:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1287:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1264:2:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1268:4:48",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1260:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1260:13:48"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1275:7:48"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1256:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1256:27:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1249:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:35:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1246:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1320:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1343:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1330:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1330:16:48"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1324:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1369:22:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1371:16:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1371:18:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1371:18:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1361:2:48"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1365:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1358:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1358:10:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1355:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1400:23:48",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1420:2:48",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1414:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1414:9:48"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1404:6:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1432:67:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1458:6:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1474:2:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1478:4:48",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1470:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1470:13:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1489:2:48",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1485:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1485:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1466:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1466:27:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1454:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1454:40:48"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1496:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1450:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1450:49:48"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1436:10:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1558:22:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1560:16:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1560:18:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1560:18:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1517:10:48"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1529:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1514:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1514:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1537:10:48"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1549:6:48"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1534:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1534:22:48"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1511:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:46:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1508:2:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1596:2:48",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1600:10:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:22:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1589:22:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1627:6:48"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1635:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1620:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1620:18:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1620:18:48"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1684:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1693:6:48"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1701:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1686:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1686:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1686:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1661:2:48"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1665:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1657:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1657:11:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1670:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1653:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:20:48"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1675:7:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1650:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:33:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1647:2:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1736:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1744:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1732:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1732:15:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1753:2:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1757:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1749:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1749:11:48"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1762:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1719:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1719:46:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1719:46:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1789:6:48"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1797:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1785:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1785:15:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1802:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1781:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:24:48"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1807:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1774:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1774:40:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1774:40:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1823:16:48",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1833:6:48"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1823:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1848:48:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1881:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1892:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1877:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1877:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1864:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1864:32:48"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1852:8:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1925:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1934:6:48"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1942:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1927:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1927:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1927:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1911:8:48"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1921:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1908:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:16:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1905:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1960:88:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2018:9:48"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2029:8:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2014:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2014:24:48"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2040:7:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1986:27:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1986:62:48"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "1964:8:48",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "1974:8:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2057:18:48",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2067:8:48"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2057:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2084:18:48",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2094:8:48"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2084:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "850:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "861:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "873:6:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "881:6:48",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "889:6:48",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "897:6:48",
                "type": ""
              }
            ],
            "src": "775:1333:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2191:219:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2237:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2246:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2254:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2239:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2239:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2239:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2212:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2221:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2208:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2208:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2233:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2204:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2204:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "2201:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2272:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2291:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2285:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2285:16:48"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2276:5:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2354:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2363:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2371:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2356:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2356:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2356:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2323:5:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2344:5:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2337:6:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2337:13:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2330:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2330:21:48"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2320:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2320:32:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2313:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2313:40:48"
                  },
                  "nodeType": "YulIf",
                  "src": "2310:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2389:15:48",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2399:5:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2389:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2157:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2168:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2180:6:48",
                "type": ""
              }
            ],
            "src": "2113:297:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2467:426:48",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2477:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2497:5:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2491:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2491:12:48"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2481:6:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2519:3:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2524:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2512:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2512:19:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2512:19:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2540:12:48",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "2549:3:48"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2544:1:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2613:110:48",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2627:14:48",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2637:4:48",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "2631:2:48",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2669:3:48"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2674:1:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2665:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2665:11:48"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2678:2:48"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2661:3:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2661:20:48"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2697:5:48"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2704:1:48"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2693:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2693:13:48"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2708:2:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2689:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2689:22:48"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2683:5:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2683:29:48"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2654:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2654:59:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2654:59:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2572:1:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2575:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2569:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2569:13:48"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2583:21:48",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2585:17:48",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2594:1:48"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2597:4:48",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2590:3:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2590:12:48"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2585:1:48"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2565:3:48",
                    "statements": []
                  },
                  "src": "2561:162:48"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2757:64:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2786:3:48"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2791:6:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2782:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2782:16:48"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2800:4:48",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2778:3:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2778:27:48"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "2807:3:48"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2771:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2771:40:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2771:40:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2738:1:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2741:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2735:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2735:13:48"
                  },
                  "nodeType": "YulIf",
                  "src": "2732:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2830:57:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2845:3:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2858:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2866:2:48",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2854:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2854:15:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2875:2:48",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2871:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2871:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2850:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2850:29:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2841:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2841:39:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2882:4:48",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2837:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2837:50:48"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2830:3:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2444:5:48",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2451:3:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2459:3:48",
                "type": ""
              }
            ],
            "src": "2415:478:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2999:102:48",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3009:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3021:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3032:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3017:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3017:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3009:4:48"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3051:9:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3066:6:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3082:3:48",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3087:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3078:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3078:11:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3091:1:48",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3074:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3074:19:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3062:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3062:32:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3044:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3044:51:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3044:51:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2968:9:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2979:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2990:4:48",
                "type": ""
              }
            ],
            "src": "2898:203:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3283:243:48",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3293:29:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3311:3:48",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3316:1:48",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3307:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3307:11:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3320:1:48",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3303:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3303:19:48"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3297:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3338:9:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3353:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3361:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3349:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3349:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3331:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3331:34:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3331:34:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3385:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3396:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3381:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3381:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3401:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3374:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3374:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3374:30:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3413:55:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3441:6:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3453:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3464:2:48",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3449:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "3421:19:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3421:47:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3413:4:48"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3488:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3499:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3484:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3484:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3508:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3516:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3504:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3504:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3477:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3477:43:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3477:43:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_address__to_t_address_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3236:9:48",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3247:6:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3255:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3263:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3274:4:48",
                "type": ""
              }
            ],
            "src": "3106:420:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3680:170:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3697:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3708:2:48",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3690:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3690:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3690:21:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3720:55:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3748:6:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3760:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3771:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3756:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3756:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "3728:19:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3728:47:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3720:4:48"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3795:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3806:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3791:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3791:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3815:6:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3831:3:48",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3836:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3827:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3827:11:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3840:1:48",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3823:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3823:19:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3811:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3811:32:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3784:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3784:60:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3784:60:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3641:9:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3652:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3660:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3671:4:48",
                "type": ""
              }
            ],
            "src": "3531:319:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4029:228:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4046:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4057:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4039:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4039:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4039:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4080:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4091:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4076:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4076:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4096:2:48",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4069:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4069:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4069:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4119:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4130:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4115:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4135:34:48",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4108:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4108:62:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4108:62:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4190:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4201:2:48",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4186:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4186:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4206:8:48",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4179:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4179:36:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4179:36:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4224:27:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4236:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4247:3:48",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4232:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4232:19:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4224:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4006:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4020:4:48",
                "type": ""
              }
            ],
            "src": "3855:402:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4436:164:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4453:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4464:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4446:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4446:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4446:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4487:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4498:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4483:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4483:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4503:2:48",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4476:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4476:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4476:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4526:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4537:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4522:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4522:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4542:16:48",
                        "type": "",
                        "value": "slice_overflow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4515:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4515:44:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4515:44:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4568:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4580:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4591:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4576:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4576:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4568:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4413:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4427:4:48",
                "type": ""
              }
            ],
            "src": "4262:338:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4779:232:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4796:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4807:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4789:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4789:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4789:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4830:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4841:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4826:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4826:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4846:2:48",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4819:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4819:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4819:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4869:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4880:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4865:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4865:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4885:34:48",
                        "type": "",
                        "value": "Permission denied: caller is not"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4858:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4858:62:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4858:62:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4940:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4951:2:48",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4936:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4936:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4956:12:48",
                        "type": "",
                        "value": " community"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4929:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4929:40:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4929:40:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4978:27:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4990:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5001:3:48",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4986:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4986:19:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4978:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4756:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4770:4:48",
                "type": ""
              }
            ],
            "src": "4605:406:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5190:182:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5207:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5218:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5200:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5200:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5200:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5241:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5252:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5237:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5237:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5257:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5230:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5230:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5230:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5280:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5291:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5276:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5276:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5296:34:48",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5269:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5269:62:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5269:62:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5340:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5352:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5363:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5348:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5348:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5340:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5167:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5181:4:48",
                "type": ""
              }
            ],
            "src": "5016:356:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5551:167:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5568:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5579:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5561:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5561:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5561:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5602:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5613:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5598:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5598:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5618:2:48",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5591:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5591:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5591:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5641:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5652:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5637:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5637:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5657:19:48",
                        "type": "",
                        "value": "slice_outOfBounds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5630:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5630:47:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5630:47:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5686:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5698:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5709:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5694:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5694:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5686:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5528:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5542:4:48",
                "type": ""
              }
            ],
            "src": "5377:341:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5897:167:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5914:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5925:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5907:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5907:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5907:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5948:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5959:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5944:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5944:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5964:2:48",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5937:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5937:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5937:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5987:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5998:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5983:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5983:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6003:19:48",
                        "type": "",
                        "value": "Invalid community"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5976:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5976:47:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5976:47:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6032:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6044:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6055:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6040:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6040:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6032:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5874:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5888:4:48",
                "type": ""
              }
            ],
            "src": "5723:341:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6117:181:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6152:115:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "6173:3:48"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6182:3:48",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6187:10:48",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6178:3:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6178:20:48"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6166:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6166:33:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6166:33:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6219:1:48",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6222:4:48",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6212:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6212:15:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6212:15:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "6247:3:48"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6252:4:48",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6240:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6240:17:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6240:17:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6133:1:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6140:1:48"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6136:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6136:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6130:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6130:13:48"
                  },
                  "nodeType": "YulIf",
                  "src": "6127:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6276:16:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6287:1:48"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6290:1:48"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6283:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:9:48"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6276:3:48"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6100:1:48",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6103:1:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6109:3:48",
                "type": ""
              }
            ],
            "src": "6069:229:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6335:95:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6352:1:48",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6359:3:48",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6364:10:48",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6355:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6355:20:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6345:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6345:31:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6345:31:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6392:1:48",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6395:4:48",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6385:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6385:15:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6385:15:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6416:1:48",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6419:4:48",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6409:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6409:15:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6409:15:48"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "6303:127:48"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(length, length) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value1)\n        value1 := memPtr\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _2) { revert(value2, value2) }\n        let value2_1, value3_1 := abi_decode_t_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_address__to_t_address_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_t_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_t_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"slice_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Permission denied: caller is not\")\n        mstore(add(headStart, 96), \" community\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"slice_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid community\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 48,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "376:1147:15:-:0;;;514:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:30;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;-1:-1:-1;;;;;571:31:15;;563:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;632:36;;-1:-1:-1;;;;;;632:36:15;;;376:1147;;640:96:41;719:10;640:96;:::o;2270:187:30:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:30;;;-1:-1:-1;;;;;;2378:17:30;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;14:310:48:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:48;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:48:o;329:339::-;531:2;513:21;;;570:2;550:18;;;543:30;609:17;604:2;589:18;;582:45;659:2;644:18;;503:165::o;:::-;376:1147:15;;;;;;;;;;;;",
  "deployedSourceMap": "376:1147:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:30;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;833:688:15;;;;;;:::i;:::-;;:::i;1918:198:30:-;;;;;;:::i;:::-;;:::i;466:41:15:-;;;:::i;1668:101:30:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:30;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:30;;1240:68;;;;-1:-1:-1;;;1240:68:30;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:30;1036:85;:::o;833:688:15:-;939:7;-1:-1:-1;;;;;966:23:15;;979:10;966:23;958:78;;;;-1:-1:-1;;;958:78:15;;;;;;;:::i;:::-;1054:62;;-1:-1:-1;;;1054:62:15;;-1:-1:-1;;;;;1071:16:15;1054:51;;;;:62;;1106:9;;1054:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1046:92;;;;-1:-1:-1;;;1046:92:15;;;;;;;:::i;:::-;1148:28;1179:17;1190:1;1193:2;1179:4;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1179:10:15;;:17;;-1:-1:-1;;1179:10:15;:17;-1:-1:-1;1179:17:15:i;:::-;1148:48;;1206:18;1298:4;1281:15;1277:26;1271:33;1257:47;;1323:17;1360:9;1371:4;1385:10;1377:19;;1343:54;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1323:74;;1447:9;-1:-1:-1;;;;;1412:72:15;1440:4;-1:-1:-1;;;;;1412:72:15;;1458:4;1472:10;1464:19;;1412:72;;;;;;;:::i;:::-;;;;;;;;1509:4;833:688;-1:-1:-1;;;;;;;833:688:15:o;1918:198:30:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:30;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:30;;1240:68;;;;-1:-1:-1;;;1240:68:30;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:30;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:30::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;466:41:15:-;;;:::o;640:96:41:-;719:10;640:96;:::o;2270:187:30:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:30;;;-1:-1:-1;;;;;;2378:17:30;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;9457:2804:47:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:47;;;;;;;:::i;:::-;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:47;;;;;;;:::i;:::-;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:47;;;11804:2;11787:11;-1:-1:-1;;11783:25:47;11777:4;11770:39;-1:-1:-1;9821:2397:47;-1:-1:-1;12245:9:47;9457:2804;-1:-1:-1;;;;9457:2804:47:o;-1:-1:-1:-;;;;;;;;:::o;14:175:48:-;84:20;;-1:-1:-1;;;;;133:31:48;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:373::-;;;311:3;304:4;296:6;292:17;288:27;278:2;;334:6;326;319:22;278:2;-1:-1:-1;362:20:48;;405:18;394:30;;391:2;;;444:8;434;427:26;391:2;488:4;480:6;476:17;464:29;;540:3;533:4;524:6;516;512:19;508:30;505:39;502:2;;;557:1;554;547:12;502:2;268:299;;;;;:::o;572:198::-;;684:2;672:9;663:7;659:23;655:32;652:2;;;705:6;697;690:22;652:2;733:31;754:9;733:31;:::i;:::-;723:41;642:128;-1:-1:-1;;;642:128:48:o;775:1333::-;;;;;950:2;938:9;929:7;925:23;921:32;918:2;;;971:6;963;956:22;918:2;999:31;1020:9;999:31;:::i;:::-;989:41;;1049:2;1102;1091:9;1087:18;1074:32;1125:18;1166:2;1158:6;1155:14;1152:2;;;1187:6;1179;1172:22;1152:2;1230:6;1219:9;1215:22;1205:32;;1275:7;1268:4;1264:2;1260:13;1256:27;1246:2;;1302:6;1294;1287:22;1246:2;1343;1330:16;1365:2;1361;1358:10;1355:2;;;1371:18;;:::i;:::-;1420:2;1414:9;1489:2;1470:13;;-1:-1:-1;;1466:27:48;1454:40;;1450:49;;1514:18;;;1534:22;;;1511:46;1508:2;;;1560:18;;:::i;:::-;1596:2;1589:22;1620:18;;;1657:11;;;1653:20;;1650:33;-1:-1:-1;1647:2:48;;;1701:6;1693;1686:22;1647:2;1762;1757;1753;1749:11;1744:2;1736:6;1732:15;1719:46;1807:6;1802:2;1797;1789:6;1785:15;1781:24;1774:40;1833:6;1823:16;;;;1892:2;1881:9;1877:18;1864:32;1848:48;;1921:2;1911:8;1908:16;1905:2;;;1942:6;1934;1927:22;1905:2;;;1986:62;2040:7;2029:8;2018:9;2014:24;1986:62;:::i;:::-;908:1200;;;;-1:-1:-1;2067:8:48;-1:-1:-1;;;;908:1200:48:o;2113:297::-;;2233:2;2221:9;2212:7;2208:23;2204:32;2201:2;;;2254:6;2246;2239:22;2201:2;2291:9;2285:16;2344:5;2337:13;2330:21;2323:5;2320:32;2310:2;;2371:6;2363;2356:22;2415:478;;2497:5;2491:12;2524:6;2519:3;2512:19;2549:3;2561:162;2575:6;2572:1;2569:13;2561:162;;;2637:4;2693:13;;;2689:22;;2683:29;2665:11;;;2661:20;;2654:59;2590:12;2561:162;;;2741:6;2738:1;2735:13;2732:2;;;2807:3;2800:4;2791:6;2786:3;2782:16;2778:27;2771:40;2732:2;-1:-1:-1;2875:2:48;2854:15;-1:-1:-1;;2850:29:48;2841:39;;;;2882:4;2837:50;;2467:426;-1:-1:-1;;2467:426:48:o;2898:203::-;-1:-1:-1;;;;;3062:32:48;;;;3044:51;;3032:2;3017:18;;2999:102::o;3106:420::-;;3320:1;3316;3311:3;3307:11;3303:19;3361:2;3353:6;3349:15;3338:9;3331:34;3401:2;3396;3385:9;3381:18;3374:30;3421:47;3464:2;3453:9;3449:18;3441:6;3421:47;:::i;:::-;3413:55;;3516:2;3508:6;3504:15;3499:2;3488:9;3484:18;3477:43;;3283:243;;;;;;:::o;3531:319::-;;3708:2;3697:9;3690:21;3728:47;3771:2;3760:9;3756:18;3748:6;3728:47;:::i;:::-;3720:55;;3840:1;3836;3831:3;3827:11;3823:19;3815:6;3811:32;3806:2;3795:9;3791:18;3784:60;3680:170;;;;;:::o;3855:402::-;4057:2;4039:21;;;4096:2;4076:18;;;4069:30;4135:34;4130:2;4115:18;;4108:62;-1:-1:-1;;;4201:2:48;4186:18;;4179:36;4247:3;4232:19;;4029:228::o;4262:338::-;4464:2;4446:21;;;4503:2;4483:18;;;4476:30;-1:-1:-1;;;4537:2:48;4522:18;;4515:44;4591:2;4576:18;;4436:164::o;4605:406::-;4807:2;4789:21;;;4846:2;4826:18;;;4819:30;4885:34;4880:2;4865:18;;4858:62;-1:-1:-1;;;4951:2:48;4936:18;;4929:40;5001:3;4986:19;;4779:232::o;5016:356::-;5218:2;5200:21;;;5237:18;;;5230:30;5296:34;5291:2;5276:18;;5269:62;5363:2;5348:18;;5190:182::o;5377:341::-;5579:2;5561:21;;;5618:2;5598:18;;;5591:30;-1:-1:-1;;;5652:2:48;5637:18;;5630:47;5709:2;5694:18;;5551:167::o;5723:341::-;5925:2;5907:21;;;5964:2;5944:18;;;5937:30;-1:-1:-1;;;5998:2:48;5983:18;;5976:47;6055:2;6040:18;;5897:167::o;6069:229::-;;6140:1;6136:6;6133:1;6130:13;6127:2;;;-1:-1:-1;;;6166:33:48;;6222:4;6219:1;6212:15;6252:4;6173:3;6240:17;6127:2;-1:-1:-1;6283:9:48;;6117:181::o;6303:127::-;6364:10;6359:3;6355:20;6352:1;6345:31;6395:4;6392:1;6385:15;6419:4;6416:1;6409:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"solidity-bytes-utils/contracts/BytesLib.sol\";\nimport \"../../interfaces/IPoolFactory.sol\";\nimport \"./ERC20Staking.sol\";\nimport \"../../CommunityFactory.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @dev Factory contract of Nutbox ERC20 staking pool.\n *x\n */\ncontract ERC20StakingFactory is IPoolFactory, Ownable {\n    using BytesLib for bytes;\n    address public immutable communityFactory;\n\n    constructor(address _communityFactory) {\n        require(_communityFactory != address(0), \"Invalid address\");\n        communityFactory = _communityFactory;\n    }\n\n    event ERC20StakingCreated(\n        address indexed pool,\n        address indexed community,\n        string name,\n        address erc20Token\n    );\n\n    function createPool(address community, string memory name, bytes calldata meta) override external returns(address) {\n        require(community == msg.sender, 'Permission denied: caller is not community');\n        require(CommunityFactory(communityFactory).createdCommunity(community), \"Invalid community\");\n        bytes memory stakeTokenBytes = meta.slice(0, 20);\n        bytes20 stakeToken;\n        assembly {\n            stakeToken := mload(add(stakeTokenBytes, 0x20))\n        }\n        ERC20Staking pool = new ERC20Staking(community, name, address(stakeToken));\n        emit ERC20StakingCreated(address(pool), community, name, address(stakeToken));\n        return address(pool);\n    }\n}\n",
  "sourcePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/erc20-staking/ERC20StakingFactory.sol",
  "ast": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/erc20-staking/ERC20StakingFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        9809
      ],
      "AccessControlEnumerable": [
        9934
      ],
      "ArbSys": [
        9257
      ],
      "BytesLib": [
        12821
      ],
      "Community": [
        1409
      ],
      "CommunityFactory": [
        1667
      ],
      "Context": [
        11338
      ],
      "ERC165": [
        11565
      ],
      "ERC20": [
        10978
      ],
      "ERC20Burnable": [
        11118
      ],
      "ERC20Helper": [
        1874
      ],
      "ERC20Pausable": [
        11155
      ],
      "ERC20PresetMinterPauser": [
        11316
      ],
      "ERC20Staking": [
        8495
      ],
      "ERC20StakingFactory": [
        8619
      ],
      "EnumerableSet": [
        12488
      ],
      "IAccessControl": [
        10007
      ],
      "IAccessControlEnumerable": [
        10032
      ],
      "ICalculator": [
        9296
      ],
      "ICommittee": [
        9367
      ],
      "ICommunity": [
        9421
      ],
      "ICommunityTokenFactory": [
        9433
      ],
      "IERC165": [
        11577
      ],
      "IERC20": [
        11056
      ],
      "IERC20Metadata": [
        11180
      ],
      "IGauge": [
        9457
      ],
      "IPool": [
        9484
      ],
      "IPoolFactory": [
        9500
      ],
      "MintableERC20": [
        6737
      ],
      "Ownable": [
        10137
      ],
      "Pausable": [
        10229
      ],
      "ReentrancyGuard": [
        10269
      ],
      "SafeMath": [
        11889
      ],
      "Strings": [
        11541
      ]
    },
    "id": 8620,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8497,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:15"
      },
      {
        "id": 8498,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:15"
      },
      {
        "absolutePath": "solidity-bytes-utils/contracts/BytesLib.sol",
        "file": "solidity-bytes-utils/contracts/BytesLib.sol",
        "id": 8499,
        "nodeType": "ImportDirective",
        "scope": 8620,
        "sourceUnit": 12822,
        "src": "91:53:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPoolFactory.sol",
        "file": "../../interfaces/IPoolFactory.sol",
        "id": 8500,
        "nodeType": "ImportDirective",
        "scope": 8620,
        "sourceUnit": 9501,
        "src": "145:43:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/erc20-staking/ERC20Staking.sol",
        "file": "./ERC20Staking.sol",
        "id": 8501,
        "nodeType": "ImportDirective",
        "scope": 8620,
        "sourceUnit": 8496,
        "src": "189:28:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol",
        "file": "../../CommunityFactory.sol",
        "id": 8502,
        "nodeType": "ImportDirective",
        "scope": 8620,
        "sourceUnit": 1668,
        "src": "218:36:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8503,
        "nodeType": "ImportDirective",
        "scope": 8620,
        "sourceUnit": 10138,
        "src": "255:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8505,
              "name": "IPoolFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9500,
              "src": "408:12:15"
            },
            "id": 8506,
            "nodeType": "InheritanceSpecifier",
            "src": "408:12:15"
          },
          {
            "baseName": {
              "id": 8507,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10137,
              "src": "422:7:15"
            },
            "id": 8508,
            "nodeType": "InheritanceSpecifier",
            "src": "422:7:15"
          }
        ],
        "contractDependencies": [
          8495,
          9500,
          10137,
          11338
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8504,
          "nodeType": "StructuredDocumentation",
          "src": "309:66:15",
          "text": " @dev Factory contract of Nutbox ERC20 staking pool.\nx"
        },
        "fullyImplemented": true,
        "id": 8619,
        "linearizedBaseContracts": [
          8619,
          10137,
          11338,
          9500
        ],
        "name": "ERC20StakingFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8511,
            "libraryName": {
              "id": 8509,
              "name": "BytesLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12821,
              "src": "442:8:15"
            },
            "nodeType": "UsingForDirective",
            "src": "436:25:15",
            "typeName": {
              "id": 8510,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "455:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fac8a610",
            "id": 8513,
            "mutability": "immutable",
            "name": "communityFactory",
            "nodeType": "VariableDeclaration",
            "scope": 8619,
            "src": "466:41:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8512,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "466:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8532,
              "nodeType": "Block",
              "src": "553:122:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8519,
                          "name": "_communityFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8515,
                          "src": "571:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "600:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "592:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8520,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "592:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "592:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "571:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 8525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "604:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 8518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "563:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8527,
                  "nodeType": "ExpressionStatement",
                  "src": "563:59:15"
                },
                {
                  "expression": {
                    "id": 8530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8528,
                      "name": "communityFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8513,
                      "src": "632:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8529,
                      "name": "_communityFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8515,
                      "src": "651:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "632:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8531,
                  "nodeType": "ExpressionStatement",
                  "src": "632:36:15"
                }
              ]
            },
            "id": 8533,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8515,
                  "mutability": "mutable",
                  "name": "_communityFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 8533,
                  "src": "526:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:27:15"
            },
            "returnParameters": {
              "id": 8517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:0:15"
            },
            "scope": 8619,
            "src": "514:161:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8543,
            "name": "ERC20StakingCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8535,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 8543,
                  "src": "716:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8537,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 8543,
                  "src": "746:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8539,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 8543,
                  "src": "781:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8538,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8541,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "erc20Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 8543,
                  "src": "802:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "706:120:15"
            },
            "src": "681:146:15"
          },
          {
            "baseFunctions": [
              9499
            ],
            "body": {
              "id": 8617,
              "nodeType": "Block",
              "src": "948:573:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8556,
                          "name": "community",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8545,
                          "src": "966:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8557,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "979:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "979:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "966:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e2064656e6965643a2063616c6c6572206973206e6f7420636f6d6d756e697479",
                        "id": 8560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "991:44:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6",
                          "typeString": "literal_string \"Permission denied: caller is not community\""
                        },
                        "value": "Permission denied: caller is not community"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6",
                          "typeString": "literal_string \"Permission denied: caller is not community\""
                        }
                      ],
                      "id": 8555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "958:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:78:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8562,
                  "nodeType": "ExpressionStatement",
                  "src": "958:78:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8568,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8545,
                            "src": "1106:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 8565,
                                "name": "communityFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8513,
                                "src": "1071:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8564,
                              "name": "CommunityFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1667,
                              "src": "1054:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CommunityFactory_$1667_$",
                                "typeString": "type(contract CommunityFactory)"
                              }
                            },
                            "id": 8566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1054:34:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CommunityFactory_$1667",
                              "typeString": "contract CommunityFactory"
                            }
                          },
                          "id": 8567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "createdCommunity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1427,
                          "src": "1054:51:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 8569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1054:62:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6d6d756e697479",
                        "id": 8570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1118:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374",
                          "typeString": "literal_string \"Invalid community\""
                        },
                        "value": "Invalid community"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374",
                          "typeString": "literal_string \"Invalid community\""
                        }
                      ],
                      "id": 8563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1046:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1046:92:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8572,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:92:15"
                },
                {
                  "assignments": [
                    8574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8574,
                      "mutability": "mutable",
                      "name": "stakeTokenBytes",
                      "nodeType": "VariableDeclaration",
                      "scope": 8617,
                      "src": "1148:28:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 8573,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1148:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8580,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 8577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1190:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3230",
                        "id": 8578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1193:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "id": 8575,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8549,
                        "src": "1179:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 8576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12552,
                      "src": "1179:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
                      }
                    },
                    "id": 8579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1179:17:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1148:48:15"
                },
                {
                  "assignments": [
                    8582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8582,
                      "mutability": "mutable",
                      "name": "stakeToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 8617,
                      "src": "1206:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 8581,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1206:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8583,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1206:18:15"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1243:71:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1257:47:15",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "stakeTokenBytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "1281:15:15"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1298:4:15",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1277:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1277:26:15"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1271:5:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1271:33:15"
                        },
                        "variableNames": [
                          {
                            "name": "stakeToken",
                            "nodeType": "YulIdentifier",
                            "src": "1257:10:15"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "constantinople",
                  "externalReferences": [
                    {
                      "declaration": 8582,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1257:10:15",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8574,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1281:15:15",
                      "valueSize": 1
                    }
                  ],
                  "id": 8584,
                  "nodeType": "InlineAssembly",
                  "src": "1234:80:15"
                },
                {
                  "assignments": [
                    8587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8587,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 8617,
                      "src": "1323:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                        "typeString": "contract ERC20Staking"
                      },
                      "typeName": {
                        "id": 8586,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8585,
                          "name": "ERC20Staking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8495,
                          "src": "1323:12:15"
                        },
                        "referencedDeclaration": 8495,
                        "src": "1323:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                          "typeString": "contract ERC20Staking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8598,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8591,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8545,
                        "src": "1360:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8592,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8547,
                        "src": "1371:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8595,
                            "name": "stakeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8582,
                            "src": "1385:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          ],
                          "id": 8594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1377:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8593,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1377:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1377:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1343:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_ERC20Staking_$8495_$",
                        "typeString": "function (address,string memory,address) returns (contract ERC20Staking)"
                      },
                      "typeName": {
                        "id": 8589,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8588,
                          "name": "ERC20Staking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8495,
                          "src": "1347:12:15"
                        },
                        "referencedDeclaration": 8495,
                        "src": "1347:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                          "typeString": "contract ERC20Staking"
                        }
                      }
                    },
                    "id": 8597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:54:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                      "typeString": "contract ERC20Staking"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1323:74:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8602,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8587,
                            "src": "1440:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                              "typeString": "contract ERC20Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                              "typeString": "contract ERC20Staking"
                            }
                          ],
                          "id": 8601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1432:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8600,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1432:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8604,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8545,
                        "src": "1447:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8605,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8547,
                        "src": "1458:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8608,
                            "name": "stakeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8582,
                            "src": "1472:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          ],
                          "id": 8607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1464:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8606,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1464:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1464:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8599,
                      "name": "ERC20StakingCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8543,
                      "src": "1412:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,address,string memory,address)"
                      }
                    },
                    "id": 8610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1412:72:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8611,
                  "nodeType": "EmitStatement",
                  "src": "1407:77:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8614,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8587,
                        "src": "1509:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                          "typeString": "contract ERC20Staking"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                          "typeString": "contract ERC20Staking"
                        }
                      ],
                      "id": 8613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1501:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 8612,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1501:7:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 8615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:13:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8554,
                  "id": 8616,
                  "nodeType": "Return",
                  "src": "1494:20:15"
                }
              ]
            },
            "functionSelector": "b883cc2a",
            "id": 8618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8551,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "913:8:15"
            },
            "parameters": {
              "id": 8550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8545,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 8618,
                  "src": "853:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8547,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 8618,
                  "src": "872:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8549,
                  "mutability": "mutable",
                  "name": "meta",
                  "nodeType": "VariableDeclaration",
                  "scope": 8618,
                  "src": "892:19:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8548,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "852:60:15"
            },
            "returnParameters": {
              "id": 8554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8553,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8618,
                  "src": "939:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "938:9:15"
            },
            "scope": 8619,
            "src": "833:688:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8620,
        "src": "376:1147:15"
      }
    ],
    "src": "33:1491:15"
  },
  "legacyAST": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/erc20-staking/ERC20StakingFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        9809
      ],
      "AccessControlEnumerable": [
        9934
      ],
      "ArbSys": [
        9257
      ],
      "BytesLib": [
        12821
      ],
      "Community": [
        1409
      ],
      "CommunityFactory": [
        1667
      ],
      "Context": [
        11338
      ],
      "ERC165": [
        11565
      ],
      "ERC20": [
        10978
      ],
      "ERC20Burnable": [
        11118
      ],
      "ERC20Helper": [
        1874
      ],
      "ERC20Pausable": [
        11155
      ],
      "ERC20PresetMinterPauser": [
        11316
      ],
      "ERC20Staking": [
        8495
      ],
      "ERC20StakingFactory": [
        8619
      ],
      "EnumerableSet": [
        12488
      ],
      "IAccessControl": [
        10007
      ],
      "IAccessControlEnumerable": [
        10032
      ],
      "ICalculator": [
        9296
      ],
      "ICommittee": [
        9367
      ],
      "ICommunity": [
        9421
      ],
      "ICommunityTokenFactory": [
        9433
      ],
      "IERC165": [
        11577
      ],
      "IERC20": [
        11056
      ],
      "IERC20Metadata": [
        11180
      ],
      "IGauge": [
        9457
      ],
      "IPool": [
        9484
      ],
      "IPoolFactory": [
        9500
      ],
      "MintableERC20": [
        6737
      ],
      "Ownable": [
        10137
      ],
      "Pausable": [
        10229
      ],
      "ReentrancyGuard": [
        10269
      ],
      "SafeMath": [
        11889
      ],
      "Strings": [
        11541
      ]
    },
    "id": 8620,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8497,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:15"
      },
      {
        "id": 8498,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:15"
      },
      {
        "absolutePath": "solidity-bytes-utils/contracts/BytesLib.sol",
        "file": "solidity-bytes-utils/contracts/BytesLib.sol",
        "id": 8499,
        "nodeType": "ImportDirective",
        "scope": 8620,
        "sourceUnit": 12822,
        "src": "91:53:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPoolFactory.sol",
        "file": "../../interfaces/IPoolFactory.sol",
        "id": 8500,
        "nodeType": "ImportDirective",
        "scope": 8620,
        "sourceUnit": 9501,
        "src": "145:43:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/erc20-staking/ERC20Staking.sol",
        "file": "./ERC20Staking.sol",
        "id": 8501,
        "nodeType": "ImportDirective",
        "scope": 8620,
        "sourceUnit": 8496,
        "src": "189:28:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol",
        "file": "../../CommunityFactory.sol",
        "id": 8502,
        "nodeType": "ImportDirective",
        "scope": 8620,
        "sourceUnit": 1668,
        "src": "218:36:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8503,
        "nodeType": "ImportDirective",
        "scope": 8620,
        "sourceUnit": 10138,
        "src": "255:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8505,
              "name": "IPoolFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9500,
              "src": "408:12:15"
            },
            "id": 8506,
            "nodeType": "InheritanceSpecifier",
            "src": "408:12:15"
          },
          {
            "baseName": {
              "id": 8507,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10137,
              "src": "422:7:15"
            },
            "id": 8508,
            "nodeType": "InheritanceSpecifier",
            "src": "422:7:15"
          }
        ],
        "contractDependencies": [
          8495,
          9500,
          10137,
          11338
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8504,
          "nodeType": "StructuredDocumentation",
          "src": "309:66:15",
          "text": " @dev Factory contract of Nutbox ERC20 staking pool.\nx"
        },
        "fullyImplemented": true,
        "id": 8619,
        "linearizedBaseContracts": [
          8619,
          10137,
          11338,
          9500
        ],
        "name": "ERC20StakingFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8511,
            "libraryName": {
              "id": 8509,
              "name": "BytesLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12821,
              "src": "442:8:15"
            },
            "nodeType": "UsingForDirective",
            "src": "436:25:15",
            "typeName": {
              "id": 8510,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "455:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fac8a610",
            "id": 8513,
            "mutability": "immutable",
            "name": "communityFactory",
            "nodeType": "VariableDeclaration",
            "scope": 8619,
            "src": "466:41:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8512,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "466:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8532,
              "nodeType": "Block",
              "src": "553:122:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8519,
                          "name": "_communityFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8515,
                          "src": "571:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "600:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "592:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8520,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "592:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "592:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "571:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 8525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "604:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 8518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "563:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8527,
                  "nodeType": "ExpressionStatement",
                  "src": "563:59:15"
                },
                {
                  "expression": {
                    "id": 8530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8528,
                      "name": "communityFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8513,
                      "src": "632:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8529,
                      "name": "_communityFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8515,
                      "src": "651:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "632:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8531,
                  "nodeType": "ExpressionStatement",
                  "src": "632:36:15"
                }
              ]
            },
            "id": 8533,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8515,
                  "mutability": "mutable",
                  "name": "_communityFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 8533,
                  "src": "526:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:27:15"
            },
            "returnParameters": {
              "id": 8517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:0:15"
            },
            "scope": 8619,
            "src": "514:161:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8543,
            "name": "ERC20StakingCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8535,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 8543,
                  "src": "716:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8537,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 8543,
                  "src": "746:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8539,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 8543,
                  "src": "781:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8538,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8541,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "erc20Token",
                  "nodeType": "VariableDeclaration",
                  "scope": 8543,
                  "src": "802:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "706:120:15"
            },
            "src": "681:146:15"
          },
          {
            "baseFunctions": [
              9499
            ],
            "body": {
              "id": 8617,
              "nodeType": "Block",
              "src": "948:573:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8556,
                          "name": "community",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8545,
                          "src": "966:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8557,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "979:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "979:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "966:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e2064656e6965643a2063616c6c6572206973206e6f7420636f6d6d756e697479",
                        "id": 8560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "991:44:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6",
                          "typeString": "literal_string \"Permission denied: caller is not community\""
                        },
                        "value": "Permission denied: caller is not community"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6",
                          "typeString": "literal_string \"Permission denied: caller is not community\""
                        }
                      ],
                      "id": 8555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "958:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:78:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8562,
                  "nodeType": "ExpressionStatement",
                  "src": "958:78:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8568,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8545,
                            "src": "1106:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 8565,
                                "name": "communityFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8513,
                                "src": "1071:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8564,
                              "name": "CommunityFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1667,
                              "src": "1054:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CommunityFactory_$1667_$",
                                "typeString": "type(contract CommunityFactory)"
                              }
                            },
                            "id": 8566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1054:34:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CommunityFactory_$1667",
                              "typeString": "contract CommunityFactory"
                            }
                          },
                          "id": 8567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "createdCommunity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1427,
                          "src": "1054:51:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 8569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1054:62:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6d6d756e697479",
                        "id": 8570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1118:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374",
                          "typeString": "literal_string \"Invalid community\""
                        },
                        "value": "Invalid community"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374",
                          "typeString": "literal_string \"Invalid community\""
                        }
                      ],
                      "id": 8563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1046:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1046:92:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8572,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:92:15"
                },
                {
                  "assignments": [
                    8574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8574,
                      "mutability": "mutable",
                      "name": "stakeTokenBytes",
                      "nodeType": "VariableDeclaration",
                      "scope": 8617,
                      "src": "1148:28:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 8573,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1148:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8580,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 8577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1190:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3230",
                        "id": 8578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1193:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "id": 8575,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8549,
                        "src": "1179:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 8576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12552,
                      "src": "1179:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
                      }
                    },
                    "id": 8579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1179:17:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1148:48:15"
                },
                {
                  "assignments": [
                    8582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8582,
                      "mutability": "mutable",
                      "name": "stakeToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 8617,
                      "src": "1206:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 8581,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1206:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8583,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1206:18:15"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1243:71:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1257:47:15",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "stakeTokenBytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "1281:15:15"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1298:4:15",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1277:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1277:26:15"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1271:5:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1271:33:15"
                        },
                        "variableNames": [
                          {
                            "name": "stakeToken",
                            "nodeType": "YulIdentifier",
                            "src": "1257:10:15"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "constantinople",
                  "externalReferences": [
                    {
                      "declaration": 8582,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1257:10:15",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8574,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1281:15:15",
                      "valueSize": 1
                    }
                  ],
                  "id": 8584,
                  "nodeType": "InlineAssembly",
                  "src": "1234:80:15"
                },
                {
                  "assignments": [
                    8587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8587,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 8617,
                      "src": "1323:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                        "typeString": "contract ERC20Staking"
                      },
                      "typeName": {
                        "id": 8586,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8585,
                          "name": "ERC20Staking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8495,
                          "src": "1323:12:15"
                        },
                        "referencedDeclaration": 8495,
                        "src": "1323:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                          "typeString": "contract ERC20Staking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8598,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8591,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8545,
                        "src": "1360:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8592,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8547,
                        "src": "1371:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8595,
                            "name": "stakeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8582,
                            "src": "1385:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          ],
                          "id": 8594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1377:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8593,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1377:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1377:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1343:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_ERC20Staking_$8495_$",
                        "typeString": "function (address,string memory,address) returns (contract ERC20Staking)"
                      },
                      "typeName": {
                        "id": 8589,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8588,
                          "name": "ERC20Staking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8495,
                          "src": "1347:12:15"
                        },
                        "referencedDeclaration": 8495,
                        "src": "1347:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                          "typeString": "contract ERC20Staking"
                        }
                      }
                    },
                    "id": 8597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:54:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                      "typeString": "contract ERC20Staking"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1323:74:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8602,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8587,
                            "src": "1440:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                              "typeString": "contract ERC20Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                              "typeString": "contract ERC20Staking"
                            }
                          ],
                          "id": 8601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1432:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8600,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1432:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8604,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8545,
                        "src": "1447:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8605,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8547,
                        "src": "1458:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8608,
                            "name": "stakeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8582,
                            "src": "1472:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          ],
                          "id": 8607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1464:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8606,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1464:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1464:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8599,
                      "name": "ERC20StakingCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8543,
                      "src": "1412:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,address,string memory,address)"
                      }
                    },
                    "id": 8610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1412:72:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8611,
                  "nodeType": "EmitStatement",
                  "src": "1407:77:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8614,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8587,
                        "src": "1509:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                          "typeString": "contract ERC20Staking"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Staking_$8495",
                          "typeString": "contract ERC20Staking"
                        }
                      ],
                      "id": 8613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1501:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 8612,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1501:7:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 8615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:13:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8554,
                  "id": 8616,
                  "nodeType": "Return",
                  "src": "1494:20:15"
                }
              ]
            },
            "functionSelector": "b883cc2a",
            "id": 8618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8551,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "913:8:15"
            },
            "parameters": {
              "id": 8550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8545,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 8618,
                  "src": "853:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8547,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 8618,
                  "src": "872:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8549,
                  "mutability": "mutable",
                  "name": "meta",
                  "nodeType": "VariableDeclaration",
                  "scope": 8618,
                  "src": "892:19:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8548,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "852:60:15"
            },
            "returnParameters": {
              "id": 8554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8553,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8618,
                  "src": "939:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "938:9:15"
            },
            "scope": 8619,
            "src": "833:688:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8620,
        "src": "376:1147:15"
      }
    ],
    "src": "33:1491:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2023-06-14T03:47:44.703Z",
  "devdoc": {
    "details": "Factory contract of Nutbox ERC20 staking pool. x",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}