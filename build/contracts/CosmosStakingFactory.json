{
  "contractName": "CosmosStakingFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_communityFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "chainId",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "AdminAddBridge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "chainId",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "AdminRemoveBridge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "chainId",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "CosmosStakingCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "communityFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isBridge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_chainId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "adminAddBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_chainId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "adminRemoveBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_communityFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"chainId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"AdminAddBridge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"chainId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"AdminRemoveBridge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"chainId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"CosmosStakingCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_chainId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"adminAddBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_chainId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"adminRemoveBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBridge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract of Nutbox cosmos delegate pool. Like the sp delegate, we use update method to update user's total delegate amount of the validator x\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dapps/cosmos-atom/CosmosStakingFactory.sol\":\"CosmosStakingFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"project:/contracts/Community.sol\":{\"keccak256\":\"0xfbd868e5bb00df9d39a5c173285e3c41b5598a6ecf1f9c03cd9ff6554f31ce22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b2973d1358430cca28d3c5b056fd980a4b5afe96a0ad65e50169c92cfdd4b20\",\"dweb:/ipfs/QmXXupkX6GAgDvbicGNF4qhqS2aU9t7T6ZjAdBBcc57tcY\"]},\"project:/contracts/CommunityFactory.sol\":{\"keccak256\":\"0x651020221943be888ac06515c91ba57fb85a427ee46fe23e86db6eadfb3a2bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c05ef23811ecbda8079d230bc0e69c0b6fd8eb8411d10883c4313a786e78cbbb\",\"dweb:/ipfs/QmNms3YHXUFuY2nE5HkGHFtkRmpj5qffyXgSpmC4pZYgC6\"]},\"project:/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xddf2a441a9c0714ecc5c14ad5ee6c3ffa2e8155292229574369156004d2bcd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167987fa430b1303ad04b831fa610d31ca3f4202ad847e87cd9bb01156cfe9e0\",\"dweb:/ipfs/Qmf7a5unwgdUWTPfWZ94QRxVVxic12feERMNeC6krcmLmZ\"]},\"project:/contracts/community-token/MintableERC20.sol\":{\"keccak256\":\"0xd49c97ab428cd65d2326ad6875aed0082716bbfd094e5fd11cfafc6f778adcf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87da6adb416be4cfa38f6e08989390558297791f362cc237bee8c33080d3bd20\",\"dweb:/ipfs/QmYgQbaazS4L9KVvUhDq7pMxZGhCM8USrgJyjAsLkXDfLX\"]},\"project:/contracts/dapps/cosmos-atom/CosmosStaking.sol\":{\"keccak256\":\"0xaef5d30c62f8d081edda1aa60e4a5528f8cdd581ac1c03e8b495fdf84de0ed8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bf81f6e7b162b723d0c2a00ea8cabc04b1886e5605c8945e5849167bc46513e\",\"dweb:/ipfs/QmaZNX5nQQMrm2wBw887wJ3Bym6MvizXRTXA7PRiuLSVsZ\"]},\"project:/contracts/dapps/cosmos-atom/CosmosStakingFactory.sol\":{\"keccak256\":\"0x771eed7a33be0a21a47430cd82a2d04abd6fbc3c4411e72df97cc15561066e49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d92960257d05e5b7b25ab8790f172c3c44cbecac3e059475af09ba700c5594f8\",\"dweb:/ipfs/QmWbKShrWjdnSUe1BCVv1Nabdh98ogU96HNKgzfytTrLhx\"]},\"project:/contracts/interfaces/ArbSys.sol\":{\"keccak256\":\"0x22f1cf1781c0d8828112ee5cce04e10bcc56dbb3fa668ceb10895393b21c70b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20f6c6a7c3b39241ebbb40490b70398ed8e013d061354447aba23553fd2a6ddc\",\"dweb:/ipfs/QmWzt87GoVDbz27AnbsZdAAoSK6763Jao7FEULLZfPY5by\"]},\"project:/contracts/interfaces/ICalculator.sol\":{\"keccak256\":\"0x85e62c5ec77229d1e44b2c838b259829093e616ddbb887261eeaadd11c83c70a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8433eb15b4035948768e8707cae178742fc32fd60813dbba845d177ea87a89c7\",\"dweb:/ipfs/QmRByWaN4DZcSUyJABp1PViBDkBfQuHVAvqeU6FwqTPW9K\"]},\"project:/contracts/interfaces/ICommittee.sol\":{\"keccak256\":\"0x2190b0279cab5723ca36a492c45aad3b43f4f705d1df7d81e2932733b371397e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccd2ccfbbb75866a710e334056949888006443fd92404c66f22a2ffbd3a41acf\",\"dweb:/ipfs/QmUE1FEe5qLTp4TTrv9YBPgo97bdjABwUsRkZxkVcmXkUv\"]},\"project:/contracts/interfaces/ICommunity.sol\":{\"keccak256\":\"0x9c8f1379634fc9df3fc965ebd5c11976ce3d71aab8996f8efe903aa4a3042811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e3fe744d29ff2f477050a263547fb192ee52180359d469b1cf1f79062f9db4\",\"dweb:/ipfs/QmcpTdndc9H2PmhTJgF5qabCotM74swULzMKCYDbDAACvp\"]},\"project:/contracts/interfaces/ICommunityTokenFactory.sol\":{\"keccak256\":\"0x9a69a2d0752d3002d55ec2734724891fdab03de0a88e15ff297d85a3878924b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54fcdeb38c2292e11b14d0ff2b2d772ab8e14ce56d080685fede2f38749ff1d\",\"dweb:/ipfs/QmZdUicfe2kiGG5WaYpYN9yzNoXN7X3AmCMaosF4Vj6kzz\"]},\"project:/contracts/interfaces/IGauge.sol\":{\"keccak256\":\"0xafa9311f14cf7617763940d265d51448c613e574e6cbcdbb4412bd76ca7ae1fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d69b9acd6a010f1e8f5e0f3f533633a360c3f9d128d43c5191cc7e3d0864244\",\"dweb:/ipfs/QmQfwcyuTHGaw8xM9jwA9YzrxaKUSXTKNYobGwXLeCYus8\"]},\"project:/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xedea7672bb9703bcf57a6bbf386e4b528f55a698a08bc7c4481400738671ac83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20c0e753aa731e11ebe3e2918c863a4e72400983bb466660d3580ce4d9fbcf4\",\"dweb:/ipfs/QmUi3uZ9HVmZDAgyTTvWTPMtov2SudhFdSJ7jGLf8w3eis\"]},\"project:/contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0xe70966dfe9d2336a6b310658bf543fdc45600d773283d3e73c1d5b65962e339e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e0b6147e311f14564c54905e9129930251f5a15b79712a708626de6b8ef92bf\",\"dweb:/ipfs/QmQqfsNinTUcLpY4MHe7UAvMJEqt6gQETPbTv6Qtba691B\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200009f5760003560e01c8063b883cc2a116200006f578063b883cc2a1462000103578063e5247eda146200011a578063eadef9bb1462000140578063f2fde38b1462000157578063fac8a610146200016e576200009f565b806202eab714620000a45780634040768c14620000c7578063715018a614620000e05780638da5cb5b14620000ea575b600080fd5b620000ae62000178565b604051620000be9291906200091f565b60405180910390f35b620000de620000d836600462000840565b62000190565b005b620000de6200022b565b620000f462000243565b604051620000be9190620008cb565b620000f46200011436600462000735565b62000252565b620001316200012b36600462000840565b62000473565b604051620000be919062000938565b620000de6200015136600462000840565b62000493565b620000de6200016836600462000711565b62000520565b620000f462000561565b6000806200018562000243565b600254915091509091565b6200019a62000585565b6001600160a01b038116620001cc5760405162461bcd60e51b8152600401620001c3906200097b565b60405180910390fd5b60ff821660008181526001602081815260408084206001600160a01b0387168086529252808420805460ff191690931790925590519092917f61fe8d00fc1fc3740ddf3274c6ed063cf44f8aad526f5786ab55a7da3793c09291a35050565b6200023562000585565b620002416000620005cb565b565b6000546001600160a01b031690565b60006001600160a01b03851633146200027f5760405162461bcd60e51b8152600401620001c390620009ea565b604051633454a5b760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906368a94b6e90620002cd908890600401620008cb565b60206040518083038186803b158015620002e657600080fd5b505afa158015620002fb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200032191906200081e565b620003405760405162461bcd60e51b8152600401620001c39062000a98565b600062000388600085858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506200061b9050565b90506000620003d2600186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293925050620006569050565b9050600087878484604051620003e8906200069c565b620003f79493929190620008df565b604051809103906000f08015801562000414573d6000803e3d6000fd5b509050876001600160a01b0316816001600160a01b03167f9dc0534a7e6ff3805b6764eebcb730c12d1df3eaa0edb613388fec082cd89ce5898686604051620004609392919062000943565b60405180910390a3979650505050505050565b600160209081526000928352604080842090915290825290205460ff1681565b6200049d62000585565b6001600160a01b038116620004c65760405162461bcd60e51b8152600401620001c3906200097b565b60ff821660008181526001602090815260408083206001600160a01b0386168085529252808320805460ff19169055519092917f6e231a60b8d8b543cda9d08b527a8f288d6e61728f0af434c56cb526b930a43591a35050565b6200052a62000585565b6001600160a01b038116620005535760405162461bcd60e51b8152600401620001c390620009a4565b6200055e81620005cb565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6200058f62000698565b6001600160a01b0316620005a262000243565b6001600160a01b031614620002415760405162461bcd60e51b8152600401620001c39062000a34565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200062a82600162000af0565b835110156200064d5760405162461bcd60e51b8152600401620001c39062000ac3565b50016001015190565b60006200066582601462000af0565b83511015620006885760405162461bcd60e51b8152600401620001c39062000a69565b500160200151600160601b900490565b3390565b61124c8062000b2c83390190565b80356001600160a01b0381168114620006c257600080fd5b919050565b60008083601f840112620006d9578081fd5b50813567ffffffffffffffff811115620006f1578182fd5b6020830191508360208285010111156200070a57600080fd5b9250929050565b60006020828403121562000723578081fd5b6200072e82620006aa565b9392505050565b600080600080606085870312156200074b578283fd5b6200075685620006aa565b935060208086013567ffffffffffffffff8082111562000774578586fd5b818801915088601f83011262000788578586fd5b8135818111156200079d576200079d62000b15565b604051601f8201601f1916810185018381118282101715620007c357620007c362000b15565b60405281815283820185018b1015620007da578788fd5b8185850186830137878583830101528097505050604088013592508083111562000802578485fd5b50506200081287828801620006c7565b95989497509550505050565b60006020828403121562000830578081fd5b815180151581146200072e578182fd5b6000806040838503121562000853578182fd5b823560ff8116811462000864578283fd5b91506200087460208401620006aa565b90509250929050565b60008151808452815b81811015620008a45760208185018101518683018201520162000886565b81811115620008b65782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b600060018060a01b038087168352608060208401526200090360808401876200087d565b60ff959095166040840152929092166060909101525092915050565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000606082526200095860608301866200087d565b60ff949094166020830152506001600160a01b0391909116604090910152919050565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602a908201527f5065726d697373696f6e2064656e6965643a2063616c6c6572206973206e6f7460408201526920636f6d6d756e69747960b01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260159082015274746f416464726573735f6f75744f66426f756e647360581b604082015260600190565b602080825260119082015270496e76616c696420636f6d6d756e69747960781b604082015260600190565b602080825260139082015272746f55696e74385f6f75744f66426f756e647360681b604082015260600190565b6000821982111562000b1057634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fdfe60e06040523480156200001157600080fd5b506040516200124c3803806200124c833981016040819052620000349162000189565b33606090811b60805284901b6001600160601b03191660a052825162000062906002906020860190620000b4565b50600380546001600160a01b0319166001600160a01b039290921691909117905560f81b7fff000000000000000000000000000000000000000000000000000000000000001660c05250620003199050565b828054620000c29062000294565b90600052602060002090601f016020900481019282620000e6576000855562000131565b82601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b5b808211156200013f576000815560010162000144565b80516001600160a01b03811681146200017257600080fd5b919050565b805160ff811681146200017257600080fd5b600080600080608085870312156200019f578384fd5b620001aa856200015a565b602086810151919550906001600160401b0380821115620001c9578586fd5b818801915088601f830112620001dd578586fd5b815181811115620001f257620001f2620002ea565b604051601f8201601f1916810185018381118282101715620002185762000218620002ea565b60405281815283820185018b10156200022f578788fd5b8792505b8183101562000252578383018501518184018601529184019162000233565b818311156200026357878583830101525b8097505050505050620002796040860162000177565b915062000289606086016200015a565b905092959194509250565b600281046001821680620002a957607f821691505b60208210811415620002e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60805160601c60a05160601c60c05160f81c610ebb6200039160003960006102c40152600081816103d901528181610546015281816105f6015281816106a00152818161078801528181610840015281816108e901526109f80152600081816102120152818161057301526109610152610ebb6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806388cc58e41161006657806388cc58e41461010857806394465b2114610110578063b3a7834d14610123578063c51db6b214610143578063e73df6741461014b5761009e565b806306fdde03146100a35780631e31d053146100c15780632b8509a7146100d657806338adb6f0146100eb578063567e98f914610100575b600080fd5b6100ab61015e565b6040516100b89190610ba0565b60405180910390f35b6100c96101ec565b6040516100b89190610b59565b6100e96100e4366004610af5565b6101fb565b005b6100f3610953565b6040516100b89190610d93565b6100f3610959565b6100c961095f565b6100f361011e366004610aa3565b610983565b610136610131366004610aa3565b6109a6565b6040516100b89190610d67565b6100c96109f6565b6100c9610159366004610aa3565b610a1a565b6002805461016b90610e34565b80601f016020809104026020016040519081016040528092919081815260200182805461019790610e34565b80156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b505050505081565b6003546001600160a01b031681565b6040516372923f6d60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e5247eda906102499088903390600401610daa565b60206040518083038186803b15801561026157600080fd5b505afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610abd565b6102be5760405162461bcd60e51b81526004016102b590610c9a565b60405180910390fd5b8460ff167f000000000000000000000000000000000000000000000000000000000000000060ff16146103035760405162461bcd60e51b81526004016102b590610d08565b6003546001600160a01b038581169116146103305760405162461bcd60e51b81526004016102b590610c63565b6001600160a01b0381811660009081526020819052604090205416158061037357506001600160a01b038181166000908152602081905260409020548116908416145b61038f5760405162461bcd60e51b81526004016102b590610cd1565b6001600160a01b03831660009081526001602081905260409091200154828114156103ba575061094c565b8281101561047a57604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a9061040e903090600401610b59565b60206040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610abd565b61047a5760405162461bcd60e51b81526004016102b590610c22565b6001600160a01b03841660009081526001602052604090205460ff166104f0576001600160a01b038085166000818152600160208181526040808420805460ff19169093178355600290920180549588166001600160a01b0319968716811790915583528290529020805490921617905561052f565b6001600160a01b0384811660009081526001602052604090206002015481169083161461052f5760405162461bcd60e51b81526004016102b590610d30565b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f29061059b907f000000000000000000000000000000000000000000000000000000000000000090600401610bf3565b600060405180830381600087803b1580156105b557600080fd5b505af11580156105c9573d6000803e3d6000fd5b505050506001600160a01b03841660009081526001602081905260409091200154156107f45760006107697f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630886040518363ffffffff1660e01b8152600401610642929190610b6d565b60206040518083038186803b15801561065a57600080fd5b505afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610add565b61076364e8d4a5100061075d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016106ea9190610b59565b60206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610add565b6001600160a01b038b166000908152600160208190526040909120015490610a35565b90610a48565b90610a54565b905080156107f257604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b7208906107bf9088908590600401610b87565b600060405180830381600087803b1580156107d957600080fd5b505af11580156107ed573d6000803e3d6000fd5b505050505b505b61080d8161076385600454610a6090919063ffffffff16565b60049081556001600160a01b03808616600090815260016020819052604091829020018690555163286a276f60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169163bf16c3c291879161088e9164e8d4a510009161075d91879163a1a89dbc916106ea91309101610b59565b6040518363ffffffff1660e01b81526004016108ab929190610b87565b600060405180830381600087803b1580156108c557600080fd5b505af11580156108d9573d6000803e3d6000fd5b50505050836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8572960e25f62a888f92ba98fda1ca3cba3fc98b664e8ae79fdc97a644c7bae48386604051610942929190610d9c565b60405180910390a3505b5050505050565b60045490565b60045481565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038116600090815260016020819052604090912001545b919050565b6109ae610a6c565b506001600160a01b039081166000908152600160208181526040928390208351606081018552815460ff16151581529281015491830191909152600201549092169082015290565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000602081905290815260409020546001600160a01b031681565b6000610a418284610dfe565b9392505050565b6000610a418284610dde565b6000610a418284610e1d565b6000610a418284610dc6565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b03811681146109a157600080fd5b600060208284031215610ab4578081fd5b610a4182610a8c565b600060208284031215610ace578081fd5b81518015158114610a41578182fd5b600060208284031215610aee578081fd5b5051919050565b600080600080600060a08688031215610b0c578081fd5b853560ff81168114610b1c578182fd5b9450610b2a60208701610a8c565b9350610b3860408701610a8c565b925060608601359150610b4d60808701610a8c565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080835283518082850152825b81811015610bcc57858101830151858201604001528201610bb0565b81811115610bdd5783604083870101525b50601f01601f1916929092016040019392505050565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b60208082526017908201527f57726f6e672064656c656761746565206163636f756e74000000000000000000604082015260600190565b6020808252601d908201527f4f6e6c79207665726966696564206272696467652063616e2063616c6c000000604082015260600190565b6020808252601a908201527f426f756e6420627363206163636f756e74206469736d61746368000000000000604082015260600190565b6020808252600e908201526d15dc9bdb99c818da185a5b881a5960921b604082015260600190565b6020808252601d908201527f426f756e6420636f736d6f73206163636f756e74206469736d61746368000000604082015260600190565b815115158152602080830151908201526040918201516001600160a01b03169181019190915260600190565b90815260200190565b918252602082015260400190565b60ff9290921682526001600160a01b0316602082015260400190565b60008219821115610dd957610dd9610e6f565b500190565b600082610df957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e1857610e18610e6f565b500290565b600082821015610e2f57610e2f610e6f565b500390565b600281046001821680610e4857607f821691505b60208210811415610e6957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204c104f0cf054b0c37630ce05d2e221395cb76bd66a22d0909f99674813e3f1cc64736f6c63430008000033a26469706673582212200a38df491239462593054f4c86f121355d64e7c1c06fe350c7ec00bdfd2bbdbe64736f6c63430008000033",
  "immutableReferences": {
    "14235": [
      {
        "length": 32,
        "start": 662
      },
      {
        "length": 32,
        "start": 1379
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:670:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:67",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:67",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:67"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:67",
                "type": ""
              }
            ],
            "src": "14:310:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:165:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "520:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "531:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "513:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "554:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "565:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "550:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "550:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:2:67",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "543:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "543:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "609:17:67",
                        "type": "",
                        "value": "Invalid address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "582:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:45:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:45:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "636:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "648:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "644:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "636:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "480:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "494:4:67",
                "type": ""
              }
            ],
            "src": "329:339:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7784:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:67",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:67",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:67"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:67"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:67",
                "type": ""
              }
            ],
            "src": "14:175:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "268:299:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "317:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "326:6:67"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "334:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "319:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "319:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "319:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "296:6:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "304:4:67",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "292:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "292:17:67"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "311:3:67"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "288:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "288:27:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "281:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "281:35:67"
                  },
                  "nodeType": "YulIf",
                  "src": "278:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "352:30:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "375:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "362:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "362:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "352:6:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "425:30:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "434:8:67"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "444:8:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "427:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "427:26:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "427:26:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "397:6:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:18:67",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "394:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "394:30:67"
                  },
                  "nodeType": "YulIf",
                  "src": "391:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "464:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "480:6:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "488:4:67",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "476:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "476:17:67"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "464:8:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "545:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "554:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "557:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "547:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "547:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "547:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "516:6:67"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "524:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "512:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "512:19:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "533:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "508:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "508:30:67"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "540:3:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "505:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "505:39:67"
                  },
                  "nodeType": "YulIf",
                  "src": "502:2:67"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "231:6:67",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "239:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "247:8:67",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "257:6:67",
                "type": ""
              }
            ],
            "src": "194:373:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "642:128:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "688:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "697:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "705:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "690:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "690:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "690:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "663:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "672:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "659:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "659:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "684:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "655:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "652:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "723:41:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "754:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "733:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:31:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "723:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "608:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "619:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "631:6:67",
                "type": ""
              }
            ],
            "src": "572:198:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "908:1200:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "954:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "963:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "971:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "956:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "956:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "956:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "929:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "938:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "925:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "925:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "950:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "921:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "918:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "989:41:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1020:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "999:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "999:31:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "989:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1039:12:67",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1049:2:67",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1043:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1060:46:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1091:9:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1102:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1087:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1087:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1074:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:32:67"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1064:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1115:28:67",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1125:18:67",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1119:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1170:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1179:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1187:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1172:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1172:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1172:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1158:6:67"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1166:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1155:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:14:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1152:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1205:32:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1219:9:67"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1230:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1215:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:22:67"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1209:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1285:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1294:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1302:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1287:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1287:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1287:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1264:2:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1268:4:67",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1260:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1260:13:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1275:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1256:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1256:27:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1249:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:35:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1246:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1320:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1343:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1330:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1330:16:67"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1324:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1369:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1371:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1371:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1371:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1361:2:67"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1365:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1358:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1358:10:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1355:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1400:23:67",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1420:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1414:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1414:9:67"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1404:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1432:67:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1458:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1474:2:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1478:4:67",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1470:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1470:13:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1489:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1485:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1485:7:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1466:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1466:27:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1454:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1454:40:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1496:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1450:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1450:49:67"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1436:10:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1558:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1560:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1560:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1560:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1517:10:67"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1529:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1514:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1514:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1537:10:67"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1549:6:67"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1534:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1534:22:67"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1511:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:46:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1508:2:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1596:2:67",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1600:10:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:22:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1589:22:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1627:6:67"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1635:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1620:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1620:18:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1620:18:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1684:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1693:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1701:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1686:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1686:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1686:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1661:2:67"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1665:2:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1657:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1657:11:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1670:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1653:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:20:67"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1675:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1650:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:33:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1647:2:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1736:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1744:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1732:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1732:15:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1753:2:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1757:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1749:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1749:11:67"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1762:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1719:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1719:46:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1719:46:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1789:6:67"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1797:2:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1785:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1785:15:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1802:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1781:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:24:67"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1807:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1774:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1774:40:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1774:40:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1823:16:67",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1833:6:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1823:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1848:48:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1881:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1892:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1877:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1877:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1864:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1864:32:67"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1852:8:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1925:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1934:6:67"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1942:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1927:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1927:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1927:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1911:8:67"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1921:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1908:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:16:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1905:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1960:88:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2018:9:67"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2029:8:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2014:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2014:24:67"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2040:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1986:27:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1986:62:67"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "1964:8:67",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "1974:8:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2057:18:67",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2067:8:67"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2057:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2084:18:67",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2094:8:67"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2084:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "850:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "861:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "873:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "881:6:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "889:6:67",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "897:6:67",
                "type": ""
              }
            ],
            "src": "775:1333:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2191:219:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2237:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2246:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2254:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2239:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2239:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2239:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2212:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2221:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2208:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2208:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2233:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2204:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2204:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2201:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2272:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2291:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2285:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2285:16:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2276:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2354:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2363:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2371:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2356:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2356:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2356:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2323:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2344:5:67"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2337:6:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2337:13:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2330:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2330:21:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2320:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2320:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2313:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2313:40:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2310:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2389:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2399:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2389:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2157:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2168:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2180:6:67",
                "type": ""
              }
            ],
            "src": "2113:297:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2500:280:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2546:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2555:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2563:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2548:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2548:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2548:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2521:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2530:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2517:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2517:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2542:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2513:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2513:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2510:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2581:36:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2607:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2594:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2594:23:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2585:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2665:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2674:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2682:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2667:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2667:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2667:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2639:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2650:5:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2657:4:67",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2646:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2646:16:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2636:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2636:27:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2629:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2629:35:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2626:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2700:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2710:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2700:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2724:50:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2759:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2770:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2755:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2755:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2734:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2734:40:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2724:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2458:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2469:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2481:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2489:6:67",
                "type": ""
              }
            ],
            "src": "2415:365:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2837:426:67",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2847:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2867:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2861:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2861:12:67"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2851:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2889:3:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2894:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2882:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2882:19:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2882:19:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2910:12:67",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "2919:3:67"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2914:1:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2983:110:67",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2997:14:67",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3007:4:67",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "3001:2:67",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "3039:3:67"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3044:1:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3035:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3035:11:67"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3048:2:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3031:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3031:20:67"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "3067:5:67"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3074:1:67"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3063:3:67"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3063:13:67"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3078:2:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3059:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3059:22:67"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3053:5:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3053:29:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3024:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3024:59:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3024:59:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2942:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2945:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2939:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2939:13:67"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2953:21:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2955:17:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2964:1:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2967:4:67",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2960:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2960:12:67"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2955:1:67"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2935:3:67",
                    "statements": []
                  },
                  "src": "2931:162:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3127:64:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "3156:3:67"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "3161:6:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3152:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3152:16:67"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3170:4:67",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3148:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3148:27:67"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "3177:3:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3141:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3141:40:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3141:40:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3108:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3111:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3105:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3105:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "3102:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3200:57:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3215:3:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3228:6:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3236:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3224:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3224:15:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3245:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3241:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3241:7:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3220:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3220:29:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3211:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3211:39:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3252:4:67",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3207:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3207:50:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3200:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2814:5:67",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2821:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2829:3:67",
                "type": ""
              }
            ],
            "src": "2785:478:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3369:102:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3379:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3391:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3402:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3387:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3387:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3379:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3421:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3436:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3452:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3457:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3448:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3448:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3461:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3444:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3444:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3432:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3432:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3414:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3414:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3414:51:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3338:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3349:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3360:4:67",
                "type": ""
              }
            ],
            "src": "3268:203:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3677:299:67",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3687:29:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3705:3:67",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3710:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3701:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3701:11:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3714:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3697:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3697:19:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3691:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3732:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3747:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3755:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3743:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3743:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3725:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3725:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3725:34:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3779:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3790:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3775:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3775:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3795:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3768:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3768:31:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3768:31:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3808:56:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3836:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3848:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3859:3:67",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3844:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3844:19:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "3816:19:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3816:48:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3808:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3884:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3895:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3880:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3880:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3904:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3912:4:67",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3900:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3900:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3873:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3873:45:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3873:45:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3938:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3949:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3934:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3934:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "3958:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3966:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3954:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3954:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3927:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3927:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3927:43:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_uint8_t_address__to_t_address_t_string_memory_ptr_t_uint8_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3622:9:67",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3633:6:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3641:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3649:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3657:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3668:4:67",
                "type": ""
              }
            ],
            "src": "3476:500:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4110:145:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4120:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4132:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4143:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4128:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4128:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4120:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4162:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4177:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4193:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4198:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4189:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4189:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4202:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4185:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4185:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4173:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4173:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4155:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4155:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4155:51:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4226:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4237:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4222:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4222:18:67"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4242:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4215:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4215:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4215:34:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4071:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4082:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4090:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4101:4:67",
                "type": ""
              }
            ],
            "src": "3981:274:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4355:92:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4365:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4377:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4388:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4373:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4373:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4365:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4407:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4432:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4425:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4425:14:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4418:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4418:22:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4400:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4400:41:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4400:41:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4324:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4335:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4346:4:67",
                "type": ""
              }
            ],
            "src": "4260:187:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4625:224:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4642:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4653:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4635:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4635:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4635:21:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4665:55:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4693:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4705:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4716:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4701:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4701:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "4673:19:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4673:47:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4665:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4740:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4751:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4736:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4736:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4760:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4768:4:67",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4756:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4756:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4729:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4729:45:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4729:45:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4794:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4805:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4790:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4790:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4814:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4830:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4835:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4826:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4826:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4839:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4822:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4822:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4810:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4810:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4783:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4783:60:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4783:60:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_uint8_t_address__to_t_string_memory_ptr_t_uint8_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4578:9:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4589:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4597:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4605:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4616:4:67",
                "type": ""
              }
            ],
            "src": "4452:397:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5028:165:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5045:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5056:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5038:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5038:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5038:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5079:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5090:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5075:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5075:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5095:2:67",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5068:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5068:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5068:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5118:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5129:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5114:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5114:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5134:17:67",
                        "type": "",
                        "value": "Invalid address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5107:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5107:45:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5107:45:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5161:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5173:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5184:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5169:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5169:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5161:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5005:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5019:4:67",
                "type": ""
              }
            ],
            "src": "4854:339:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5372:228:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5389:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5400:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5382:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5382:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5382:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5423:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5434:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5419:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5419:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5439:2:67",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5412:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5412:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5412:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5462:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5473:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5458:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5458:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5478:34:67",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5451:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5451:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5451:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5533:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5544:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5529:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5529:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5549:8:67",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5522:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5522:36:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5522:36:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5567:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5579:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5590:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5575:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5575:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5567:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5349:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5363:4:67",
                "type": ""
              }
            ],
            "src": "5198:402:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5779:232:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5796:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5807:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5789:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5789:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5789:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5830:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5841:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5826:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5826:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5846:2:67",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5819:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5819:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5819:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5869:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5880:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5865:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5865:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5885:34:67",
                        "type": "",
                        "value": "Permission denied: caller is not"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5858:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5858:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5858:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5940:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5951:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5936:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5936:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5956:12:67",
                        "type": "",
                        "value": " community"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5929:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5929:40:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5929:40:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5978:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5990:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6001:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5986:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5986:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5978:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5756:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5770:4:67",
                "type": ""
              }
            ],
            "src": "5605:406:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6190:182:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6207:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6218:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6200:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6200:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6200:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6241:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6252:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6237:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6237:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6257:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6230:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6230:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6230:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6280:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6291:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6276:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6276:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6296:34:67",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6269:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6269:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6269:62:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6340:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6352:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6363:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6348:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6348:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6340:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6167:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6181:4:67",
                "type": ""
              }
            ],
            "src": "6016:356:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6551:171:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6568:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6579:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6561:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6561:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6561:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6602:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6613:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6598:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6598:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6618:2:67",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6591:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6591:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6591:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6641:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6652:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6637:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6637:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6657:23:67",
                        "type": "",
                        "value": "toAddress_outOfBounds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6630:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6630:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6630:51:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6690:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6702:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6713:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6698:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6698:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6690:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6528:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6542:4:67",
                "type": ""
              }
            ],
            "src": "6377:345:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6901:167:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6918:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6929:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6911:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6911:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6911:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6952:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6963:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6948:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6948:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6968:2:67",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6941:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6941:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6941:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6991:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7002:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6987:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6987:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7007:19:67",
                        "type": "",
                        "value": "Invalid community"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6980:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6980:47:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6980:47:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7036:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7048:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7059:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7044:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7044:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7036:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6878:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6892:4:67",
                "type": ""
              }
            ],
            "src": "6727:341:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7247:169:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7264:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7275:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7257:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7257:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7257:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7298:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7309:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7294:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7294:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7314:2:67",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7287:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7287:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7287:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7337:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7348:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7333:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7333:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7353:21:67",
                        "type": "",
                        "value": "toUint8_outOfBounds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7326:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7326:49:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7326:49:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7384:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7396:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7407:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7392:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7392:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7384:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7224:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7238:4:67",
                "type": ""
              }
            ],
            "src": "7073:343:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7469:181:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7504:115:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "7525:3:67"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7534:3:67",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7539:10:67",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7530:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7530:20:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7518:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7518:33:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7518:33:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7571:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7574:4:67",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7564:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7564:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7564:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "7599:3:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7604:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7592:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7592:17:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7592:17:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7485:1:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7492:1:67"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7488:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7488:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7482:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7482:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "7479:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7628:16:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7639:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7642:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7635:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7635:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7628:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7452:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7455:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7461:3:67",
                "type": ""
              }
            ],
            "src": "7421:229:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7687:95:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7704:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7711:3:67",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7716:10:67",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7707:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7707:20:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7697:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7697:31:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7697:31:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7744:1:67",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7747:4:67",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7737:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7737:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7737:15:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7768:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7771:4:67",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7761:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7761:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7761:15:67"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7655:127:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(length, length) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value1)\n        value1 := memPtr\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _2) { revert(value2, value2) }\n        let value2_1, value3_1 := abi_decode_t_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint8t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint8_t_address__to_t_address_t_string_memory_ptr_t_uint8_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_t_string(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint8_t_address__to_t_string_memory_ptr_t_uint8_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_t_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Permission denied: caller is not\")\n        mstore(add(headStart, 96), \" community\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"toAddress_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid community\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"toUint8_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "481:2063:47:-:0;;;804:13;777:40;;824:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;955:12;:10;:12::i;:::-;936:18;:32::i;:::-;-1:-1:-1;;;;;881:31:47;;873:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;942:36;;-1:-1:-1;;;;;;942:36:47;;;481:2063;;640:96:21;719:10;640:96;:::o;2426:187:4:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:4;;;-1:-1:-1;;;;;;2534:17:4;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2426:187;;:::o;14:310:67:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:67;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:67:o;329:339::-;531:2;513:21;;;570:2;550:18;;;543:30;609:17;604:2;589:18;;582:45;659:2;644:18;;503:165::o;:::-;481:2063:47;;;;;;;;;;;;",
  "deployedSourceMap": "481:2063:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1316:113;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2061:234;;;;;;:::i;:::-;;:::i;:::-;;1824:101:4;;;:::i;1201:85::-;;;:::i;:::-;;;;;;;:::i;1435:620:47:-;;;;;;:::i;:::-;;:::i;665:59::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2301:241::-;;;;;;:::i;:::-;;:::i;2074:198:4:-;;;;;;:::i;:::-;;:::i;730:41:47:-;;;:::i;1316:113::-;1368:7;1377;1404;:5;:7::i;:::-;1413:8;;1396:26;;;;1316:113;;:::o;2061:234::-;1094:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;2155:21:47;::::1;2147:49;;;;-1:-1:-1::0;;;2147:49:47::1;;;;;;;:::i;:::-;;;;;;;;;2206:18;::::0;::::1;;::::0;;;2236:4:::1;2206:18;::::0;;;;;;;-1:-1:-1;;;;;2206:27:47;::::1;::::0;;;;;;;;:34;;-1:-1:-1;;2206:34:47::1;::::0;;::::1;::::0;;;2255:33;;2206:27;;:18;2255:33:::1;::::0;::::1;2061:234:::0;;:::o;1824:101:4:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;1201:85;:::o;1435:620:47:-;1541:7;-1:-1:-1;;;;;1568:23:47;;1581:10;1568:23;1560:78;;;;-1:-1:-1;;;1560:78:47;;;;;;;:::i;:::-;1656:62;;-1:-1:-1;;;1656:62:47;;-1:-1:-1;;;;;1673:16:47;1656:51;;;;:62;;1708:9;;1656:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1648:92;;;;-1:-1:-1;;;1648:92:47;;;;;;;:::i;:::-;1750:13;1766:15;1779:1;1766:4;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1766:12:47;;:15;-1:-1:-1;;1766:12:47;:15;-1:-1:-1;1766:15:47:i;:::-;1750:31;;1809:17;1829;1844:1;1829:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1829:14:47;;:17;-1:-1:-1;;1829:14:47;:17;-1:-1:-1;1829:17:47:i;:::-;1809:37;;1856:18;1895:9;1906:4;1912:7;1921:9;1877:54;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1856:75;;1982:9;-1:-1:-1;;;;;1946:72:47;1975:4;-1:-1:-1;;;;;1946:72:47;;1993:4;1999:7;2008:9;1946:72;;;;;;;;:::i;:::-;;;;;;;;2043:4;1435:620;-1:-1:-1;;;;;;;1435:620:47:o;665:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2301:241::-;1094:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;2398:21:47;::::1;2390:49;;;;-1:-1:-1::0;;;2390:49:47::1;;;;;;;:::i;:::-;2449:18;::::0;::::1;2479:5;2449:18:::0;;;:8:::1;:18;::::0;;;;;;;-1:-1:-1;;;;;2449:27:47;::::1;::::0;;;;;;;;:35;;-1:-1:-1;;2449:35:47::1;::::0;;2499:36;2449:27;;:18;2499:36:::1;::::0;::::1;2301:241:::0;;:::o;2074:198:4:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:4;::::1;2154:73;;;;-1:-1:-1::0;;;2154:73:4::1;;;;;;;:::i;:::-;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;730:41:47:-;;;:::o;1359:130:4:-;1433:12;:10;:12::i;:::-;-1:-1:-1;;;;;1422:23:4;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:4;;1414:68;;;;-1:-1:-1;;;1414:68:4;;;;;;;:::i;2426:187::-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:4;;;-1:-1:-1;;;;;;2534:17:4;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2426:187;;:::o;12627:302:66:-;12704:5;12746:10;:6;12755:1;12746:10;:::i;:::-;12729:6;:13;:27;;12721:60;;;;-1:-1:-1;;;12721:60:66;;;;;;;:::i;:::-;-1:-1:-1;12857:29:66;12873:3;12857:29;12851:36;;12627:302::o;12267:354::-;12346:7;12390:11;:6;12399:2;12390:11;:::i;:::-;12373:6;:13;:28;;12365:62;;;;-1:-1:-1;;;12365:62:66;;;;;;;:::i;:::-;-1:-1:-1;12515:30:66;12531:4;12515:30;12509:37;-1:-1:-1;;;12505:71:66;;;12267:354::o;640:96:21:-;719:10;640:96;:::o;-1:-1:-1:-;;;;;;;;:::o;14:175:67:-;84:20;;-1:-1:-1;;;;;133:31:67;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:373::-;;;311:3;304:4;296:6;292:17;288:27;278:2;;334:6;326;319:22;278:2;-1:-1:-1;362:20:67;;405:18;394:30;;391:2;;;444:8;434;427:26;391:2;488:4;480:6;476:17;464:29;;540:3;533:4;524:6;516;512:19;508:30;505:39;502:2;;;557:1;554;547:12;502:2;268:299;;;;;:::o;572:198::-;;684:2;672:9;663:7;659:23;655:32;652:2;;;705:6;697;690:22;652:2;733:31;754:9;733:31;:::i;:::-;723:41;642:128;-1:-1:-1;;;642:128:67:o;775:1333::-;;;;;950:2;938:9;929:7;925:23;921:32;918:2;;;971:6;963;956:22;918:2;999:31;1020:9;999:31;:::i;:::-;989:41;;1049:2;1102;1091:9;1087:18;1074:32;1125:18;1166:2;1158:6;1155:14;1152:2;;;1187:6;1179;1172:22;1152:2;1230:6;1219:9;1215:22;1205:32;;1275:7;1268:4;1264:2;1260:13;1256:27;1246:2;;1302:6;1294;1287:22;1246:2;1343;1330:16;1365:2;1361;1358:10;1355:2;;;1371:18;;:::i;:::-;1420:2;1414:9;1489:2;1470:13;;-1:-1:-1;;1466:27:67;1454:40;;1450:49;;1514:18;;;1534:22;;;1511:46;1508:2;;;1560:18;;:::i;:::-;1596:2;1589:22;1620:18;;;1657:11;;;1653:20;;1650:33;-1:-1:-1;1647:2:67;;;1701:6;1693;1686:22;1647:2;1762;1757;1753;1749:11;1744:2;1736:6;1732:15;1719:46;1807:6;1802:2;1797;1789:6;1785:15;1781:24;1774:40;1833:6;1823:16;;;;1892:2;1881:9;1877:18;1864:32;1848:48;;1921:2;1911:8;1908:16;1905:2;;;1942:6;1934;1927:22;1905:2;;;1986:62;2040:7;2029:8;2018:9;2014:24;1986:62;:::i;:::-;908:1200;;;;-1:-1:-1;2067:8:67;-1:-1:-1;;;;908:1200:67:o;2113:297::-;;2233:2;2221:9;2212:7;2208:23;2204:32;2201:2;;;2254:6;2246;2239:22;2201:2;2291:9;2285:16;2344:5;2337:13;2330:21;2323:5;2320:32;2310:2;;2371:6;2363;2356:22;2415:365;;;2542:2;2530:9;2521:7;2517:23;2513:32;2510:2;;;2563:6;2555;2548:22;2510:2;2607:9;2594:23;2657:4;2650:5;2646:16;2639:5;2636:27;2626:2;;2682:6;2674;2667:22;2626:2;2710:5;-1:-1:-1;2734:40:67;2770:2;2755:18;;2734:40;:::i;:::-;2724:50;;2500:280;;;;;:::o;2785:478::-;;2867:5;2861:12;2894:6;2889:3;2882:19;2919:3;2931:162;2945:6;2942:1;2939:13;2931:162;;;3007:4;3063:13;;;3059:22;;3053:29;3035:11;;;3031:20;;3024:59;2960:12;2931:162;;;3111:6;3108:1;3105:13;3102:2;;;3177:3;3170:4;3161:6;3156:3;3152:16;3148:27;3141:40;3102:2;-1:-1:-1;3245:2:67;3224:15;-1:-1:-1;;3220:29:67;3211:39;;;;3252:4;3207:50;;2837:426;-1:-1:-1;;2837:426:67:o;3268:203::-;-1:-1:-1;;;;;3432:32:67;;;;3414:51;;3402:2;3387:18;;3369:102::o;3476:500::-;;3714:1;3710;3705:3;3701:11;3697:19;3755:2;3747:6;3743:15;3732:9;3725:34;3795:3;3790:2;3779:9;3775:18;3768:31;3816:48;3859:3;3848:9;3844:19;3836:6;3816:48;:::i;:::-;3912:4;3900:17;;;;3895:2;3880:18;;3873:45;3954:15;;;;3949:2;3934:18;;;3927:43;-1:-1:-1;3808:56:67;3677:299;-1:-1:-1;;3677:299:67:o;3981:274::-;-1:-1:-1;;;;;4173:32:67;;;;4155:51;;4237:2;4222:18;;4215:34;4143:2;4128:18;;4110:145::o;4260:187::-;4425:14;;4418:22;4400:41;;4388:2;4373:18;;4355:92::o;4452:397::-;;4653:2;4642:9;4635:21;4673:47;4716:2;4705:9;4701:18;4693:6;4673:47;:::i;:::-;4768:4;4756:17;;;;4751:2;4736:18;;4729:45;-1:-1:-1;;;;;;4810:32:67;;;;4805:2;4790:18;;;4783:60;4665:55;4625:224;-1:-1:-1;4625:224:67:o;4854:339::-;5056:2;5038:21;;;5095:2;5075:18;;;5068:30;-1:-1:-1;;;5129:2:67;5114:18;;5107:45;5184:2;5169:18;;5028:165::o;5198:402::-;5400:2;5382:21;;;5439:2;5419:18;;;5412:30;5478:34;5473:2;5458:18;;5451:62;-1:-1:-1;;;5544:2:67;5529:18;;5522:36;5590:3;5575:19;;5372:228::o;5605:406::-;5807:2;5789:21;;;5846:2;5826:18;;;5819:30;5885:34;5880:2;5865:18;;5858:62;-1:-1:-1;;;5951:2:67;5936:18;;5929:40;6001:3;5986:19;;5779:232::o;6016:356::-;6218:2;6200:21;;;6237:18;;;6230:30;6296:34;6291:2;6276:18;;6269:62;6363:2;6348:18;;6190:182::o;6377:345::-;6579:2;6561:21;;;6618:2;6598:18;;;6591:30;-1:-1:-1;;;6652:2:67;6637:18;;6630:51;6713:2;6698:18;;6551:171::o;6727:341::-;6929:2;6911:21;;;6968:2;6948:18;;;6941:30;-1:-1:-1;;;7002:2:67;6987:18;;6980:47;7059:2;7044:18;;6901:167::o;7073:343::-;7275:2;7257:21;;;7314:2;7294:18;;;7287:30;-1:-1:-1;;;7348:2:67;7333:18;;7326:49;7407:2;7392:18;;7247:169::o;7421:229::-;;7492:1;7488:6;7485:1;7482:13;7479:2;;;-1:-1:-1;;;7518:33:67;;7574:4;7571:1;7564:15;7604:4;7525:3;7592:17;7479:2;-1:-1:-1;7635:9:67;;7469:181::o;7655:127::-;7716:10;7711:3;7707:20;7704:1;7697:31;7747:4;7744:1;7737:15;7771:4;7768:1;7761:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"../../interfaces/IPoolFactory.sol\";\nimport \"./CosmosStaking.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"solidity-bytes-utils/contracts/BytesLib.sol\";\nimport \"../../CommunityFactory.sol\";\n\n/**\n * @dev Factory contract of Nutbox cosmos delegate pool.\n * Like the sp delegate, we use update method to update user's total delegate amount of the validator\n *x\n */\ncontract CosmosStakingFactory is IPoolFactory, Ownable {\n    using BytesLib for bytes;\n    // chain id => user address => is bridge\n    // every chain has it's own bridge accounts\n    mapping (uint8 => mapping(address => bool)) public isBridge;\n    address public immutable communityFactory;\n    uint256 private transFee = 0.00001 ether;\n\n    constructor(address _communityFactory) {\n        require(_communityFactory != address(0), \"Invalid address\");\n        communityFactory = _communityFactory;\n    }\n\n    event CosmosStakingCreated(\n        address indexed pool,\n        address indexed community,\n        string name,\n        uint8 chainId,\n        address delegatee\n    );\n\n    event AdminAddBridge(uint8 indexed chainId, address indexed bridge);\n    event AdminRemoveBridge(uint8 indexed chainId, address indexed bridge);\n\n    function getFeeInfo() public override view returns (address, uint256) {\n        return (owner(), transFee);\n    }\n\n    function createPool(address community, string memory name, bytes calldata meta) override external returns(address) {\n        require(community == msg.sender, 'Permission denied: caller is not community');\n        require(CommunityFactory(communityFactory).createdCommunity(community), \"Invalid community\");\n        uint8 chainId = meta.toUint8(0);  // cosmos-hub: 3\n        address delegatee = meta.toAddress(1);\n        CosmosStaking pool = new CosmosStaking(community, name, chainId, delegatee);\n        emit CosmosStakingCreated(address(pool), community, name, chainId, delegatee);\n        return address(pool);\n    }\n\n    function adminAddBridge(uint8 _chainId, address _bridge) external onlyOwner {\n        require(_bridge != address(0), \"Invalid address\");\n        isBridge[_chainId][_bridge] = true;\n        emit AdminAddBridge(_chainId, _bridge);\n    }\n\n    function adminRemoveBridge(uint8 _chainId, address _bridge) external onlyOwner {\n        require(_bridge != address(0), \"Invalid address\");\n        isBridge[_chainId][_bridge] = false;\n        emit AdminRemoveBridge(_chainId, _bridge);\n    }\n}\n",
  "sourcePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/cosmos-atom/CosmosStakingFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/dapps/cosmos-atom/CosmosStakingFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "AccessControlEnumerable": [
        440
      ],
      "ArbSys": [
        17674
      ],
      "BytesLib": [
        18257
      ],
      "Community": [
        7954
      ],
      "CommunityFactory": [
        8212
      ],
      "Context": [
        3799
      ],
      "CosmosStaking": [
        14211
      ],
      "CosmosStakingFactory": [
        14436
      ],
      "ERC165": [
        4052
      ],
      "ERC20": [
        3127
      ],
      "ERC20Burnable": [
        3249
      ],
      "ERC20Helper": [
        8435
      ],
      "ERC20Pausable": [
        3286
      ],
      "ERC20PresetMinterPauser": [
        3447
      ],
      "EnumerableSet": [
        5960
      ],
      "IAccessControl": [
        513
      ],
      "IAccessControlEnumerable": [
        538
      ],
      "ICalculator": [
        17713
      ],
      "ICommittee": [
        17784
      ],
      "ICommunity": [
        17838
      ],
      "ICommunityTokenFactory": [
        17850
      ],
      "IERC165": [
        4064
      ],
      "IERC20": [
        3205
      ],
      "IERC20Metadata": [
        3311
      ],
      "IGauge": [
        17874
      ],
      "IPool": [
        17901
      ],
      "IPoolFactory": [
        17924
      ],
      "Math": [
        4930
      ],
      "MintableERC20": [
        13434
      ],
      "Ownable": [
        651
      ],
      "Pausable": [
        759
      ],
      "SafeMath": [
        5242
      ],
      "SignedMath": [
        5347
      ],
      "Strings": [
        4028
      ]
    },
    "id": 14437,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14213,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:47"
      },
      {
        "id": 14214,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:47"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPoolFactory.sol",
        "file": "../../interfaces/IPoolFactory.sol",
        "id": 14215,
        "nodeType": "ImportDirective",
        "scope": 14437,
        "sourceUnit": 17925,
        "src": "91:43:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/dapps/cosmos-atom/CosmosStaking.sol",
        "file": "./CosmosStaking.sol",
        "id": 14216,
        "nodeType": "ImportDirective",
        "scope": 14437,
        "sourceUnit": 14212,
        "src": "135:29:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 14217,
        "nodeType": "ImportDirective",
        "scope": 14437,
        "sourceUnit": 652,
        "src": "165:52:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "solidity-bytes-utils/contracts/BytesLib.sol",
        "file": "solidity-bytes-utils/contracts/BytesLib.sol",
        "id": 14218,
        "nodeType": "ImportDirective",
        "scope": 14437,
        "sourceUnit": 18258,
        "src": "218:53:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CommunityFactory.sol",
        "file": "../../CommunityFactory.sol",
        "id": 14219,
        "nodeType": "ImportDirective",
        "scope": 14437,
        "sourceUnit": 8213,
        "src": "272:36:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14221,
              "name": "IPoolFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17924,
              "src": "514:12:47"
            },
            "id": 14222,
            "nodeType": "InheritanceSpecifier",
            "src": "514:12:47"
          },
          {
            "baseName": {
              "id": 14223,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "528:7:47"
            },
            "id": 14224,
            "nodeType": "InheritanceSpecifier",
            "src": "528:7:47"
          }
        ],
        "contractDependencies": [
          651,
          3799,
          14211,
          17924
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 14220,
          "nodeType": "StructuredDocumentation",
          "src": "310:170:47",
          "text": " @dev Factory contract of Nutbox cosmos delegate pool.\n Like the sp delegate, we use update method to update user's total delegate amount of the validator\nx"
        },
        "fullyImplemented": true,
        "id": 14436,
        "linearizedBaseContracts": [
          14436,
          651,
          3799,
          17924
        ],
        "name": "CosmosStakingFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14227,
            "libraryName": {
              "id": 14225,
              "name": "BytesLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18257,
              "src": "548:8:47"
            },
            "nodeType": "UsingForDirective",
            "src": "542:25:47",
            "typeName": {
              "id": 14226,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "561:5:47",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "e5247eda",
            "id": 14233,
            "mutability": "mutable",
            "name": "isBridge",
            "nodeType": "VariableDeclaration",
            "scope": 14436,
            "src": "665:59:47",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint8 => mapping(address => bool))"
            },
            "typeName": {
              "id": 14232,
              "keyType": {
                "id": 14228,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "674:5:47",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "665:43:47",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint8 => mapping(address => bool))"
              },
              "valueType": {
                "id": 14231,
                "keyType": {
                  "id": 14229,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "691:7:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "683:24:47",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 14230,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "702:4:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fac8a610",
            "id": 14235,
            "mutability": "immutable",
            "name": "communityFactory",
            "nodeType": "VariableDeclaration",
            "scope": 14436,
            "src": "730:41:47",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14234,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "730:7:47",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14238,
            "mutability": "mutable",
            "name": "transFee",
            "nodeType": "VariableDeclaration",
            "scope": 14436,
            "src": "777:40:47",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "777:7:47",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3030303031",
              "id": 14237,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "804:13:47",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000_by_1",
                "typeString": "int_const 10000000000000"
              },
              "value": "0.00001"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 14257,
              "nodeType": "Block",
              "src": "863:122:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14244,
                          "name": "_communityFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14240,
                          "src": "881:17:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "910:1:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "902:7:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14245,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "902:7:47",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "902:10:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "881:31:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 14250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "914:17:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 14243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "873:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "873:59:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14252,
                  "nodeType": "ExpressionStatement",
                  "src": "873:59:47"
                },
                {
                  "expression": {
                    "id": 14255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14253,
                      "name": "communityFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14235,
                      "src": "942:16:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14254,
                      "name": "_communityFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14240,
                      "src": "961:17:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "942:36:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14256,
                  "nodeType": "ExpressionStatement",
                  "src": "942:36:47"
                }
              ]
            },
            "id": 14258,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14240,
                  "mutability": "mutable",
                  "name": "_communityFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 14258,
                  "src": "836:25:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:27:47"
            },
            "returnParameters": {
              "id": 14242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:0:47"
            },
            "scope": 14436,
            "src": "824:161:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 14270,
            "name": "CosmosStakingCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14260,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 14270,
                  "src": "1027:20:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14262,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 14270,
                  "src": "1057:25:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14264,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 14270,
                  "src": "1092:11:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14263,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14266,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 14270,
                  "src": "1113:13:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14265,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:5:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14268,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 14270,
                  "src": "1136:17:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1017:142:47"
            },
            "src": "991:169:47"
          },
          {
            "anonymous": false,
            "id": 14276,
            "name": "AdminAddBridge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14272,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 14276,
                  "src": "1187:21:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14271,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:5:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14274,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 14276,
                  "src": "1210:22:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1186:47:47"
            },
            "src": "1166:68:47"
          },
          {
            "anonymous": false,
            "id": 14282,
            "name": "AdminRemoveBridge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14278,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 14282,
                  "src": "1263:21:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14277,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:5:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14280,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 14282,
                  "src": "1286:22:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1262:47:47"
            },
            "src": "1239:71:47"
          },
          {
            "baseFunctions": [
              17923
            ],
            "body": {
              "id": 14295,
              "nodeType": "Block",
              "src": "1386:43:47",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14290,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 579,
                          "src": "1404:5:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1404:7:47",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14292,
                        "name": "transFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14238,
                        "src": "1413:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 14293,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1403:19:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 14289,
                  "id": 14294,
                  "nodeType": "Return",
                  "src": "1396:26:47"
                }
              ]
            },
            "functionSelector": "0002eab7",
            "id": 14296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFeeInfo",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14284,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1345:8:47"
            },
            "parameters": {
              "id": 14283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:2:47"
            },
            "returnParameters": {
              "id": 14289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14286,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 14296,
                  "src": "1368:7:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14288,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 14296,
                  "src": "1377:7:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1367:18:47"
            },
            "scope": 14436,
            "src": "1316:113:47",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17916
            ],
            "body": {
              "id": 14368,
              "nodeType": "Block",
              "src": "1550:505:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14309,
                          "name": "community",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14298,
                          "src": "1568:9:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 14310,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1581:3:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1581:10:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1568:23:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e2064656e6965643a2063616c6c6572206973206e6f7420636f6d6d756e697479",
                        "id": 14313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1593:44:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6",
                          "typeString": "literal_string \"Permission denied: caller is not community\""
                        },
                        "value": "Permission denied: caller is not community"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6",
                          "typeString": "literal_string \"Permission denied: caller is not community\""
                        }
                      ],
                      "id": 14308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1560:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1560:78:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14315,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:78:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14321,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14298,
                            "src": "1708:9:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 14318,
                                "name": "communityFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14235,
                                "src": "1673:16:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 14317,
                              "name": "CommunityFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8212,
                              "src": "1656:16:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CommunityFactory_$8212_$",
                                "typeString": "type(contract CommunityFactory)"
                              }
                            },
                            "id": 14319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1656:34:47",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CommunityFactory_$8212",
                              "typeString": "contract CommunityFactory"
                            }
                          },
                          "id": 14320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "createdCommunity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7972,
                          "src": "1656:51:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 14322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1656:62:47",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6d6d756e697479",
                        "id": 14323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:19:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374",
                          "typeString": "literal_string \"Invalid community\""
                        },
                        "value": "Invalid community"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374",
                          "typeString": "literal_string \"Invalid community\""
                        }
                      ],
                      "id": 14316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1648:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1648:92:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14325,
                  "nodeType": "ExpressionStatement",
                  "src": "1648:92:47"
                },
                {
                  "assignments": [
                    14327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14327,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "scope": 14368,
                      "src": "1750:13:47",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 14326,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1750:5:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14332,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 14330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1779:1:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 14328,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14302,
                        "src": "1766:4:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 14329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint8",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18040,
                      "src": "1766:12:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,uint256) pure returns (uint8)"
                      }
                    },
                    "id": 14331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:15:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1750:31:47"
                },
                {
                  "assignments": [
                    14334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14334,
                      "mutability": "mutable",
                      "name": "delegatee",
                      "nodeType": "VariableDeclaration",
                      "scope": 14368,
                      "src": "1809:17:47",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14333,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1809:7:47",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14339,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 14337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:1:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 14335,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14302,
                        "src": "1829:4:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 14336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18014,
                      "src": "1829:14:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,uint256) pure returns (address)"
                      }
                    },
                    "id": 14338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:17:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1809:37:47"
                },
                {
                  "assignments": [
                    14342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14342,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 14368,
                      "src": "1856:18:47",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CosmosStaking_$14211",
                        "typeString": "contract CosmosStaking"
                      },
                      "typeName": {
                        "id": 14341,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14340,
                          "name": "CosmosStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14211,
                          "src": "1856:13:47"
                        },
                        "referencedDeclaration": 14211,
                        "src": "1856:13:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CosmosStaking_$14211",
                          "typeString": "contract CosmosStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14351,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14346,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14298,
                        "src": "1895:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14347,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14300,
                        "src": "1906:4:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 14348,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14327,
                        "src": "1912:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 14349,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14334,
                        "src": "1921:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1877:17:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint8_$_t_address_$returns$_t_contract$_CosmosStaking_$14211_$",
                        "typeString": "function (address,string memory,uint8,address) returns (contract CosmosStaking)"
                      },
                      "typeName": {
                        "id": 14344,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14343,
                          "name": "CosmosStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14211,
                          "src": "1881:13:47"
                        },
                        "referencedDeclaration": 14211,
                        "src": "1881:13:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CosmosStaking_$14211",
                          "typeString": "contract CosmosStaking"
                        }
                      }
                    },
                    "id": 14350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:54:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CosmosStaking_$14211",
                      "typeString": "contract CosmosStaking"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1856:75:47"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14355,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14342,
                            "src": "1975:4:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CosmosStaking_$14211",
                              "typeString": "contract CosmosStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CosmosStaking_$14211",
                              "typeString": "contract CosmosStaking"
                            }
                          ],
                          "id": 14354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1967:7:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14353,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1967:7:47",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1967:13:47",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14357,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14298,
                        "src": "1982:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14358,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14300,
                        "src": "1993:4:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 14359,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14327,
                        "src": "1999:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 14360,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14334,
                        "src": "2008:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14352,
                      "name": "CosmosStakingCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14270,
                      "src": "1946:20:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (address,address,string memory,uint8,address)"
                      }
                    },
                    "id": 14361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1946:72:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14362,
                  "nodeType": "EmitStatement",
                  "src": "1941:77:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14365,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14342,
                        "src": "2043:4:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CosmosStaking_$14211",
                          "typeString": "contract CosmosStaking"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CosmosStaking_$14211",
                          "typeString": "contract CosmosStaking"
                        }
                      ],
                      "id": 14364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2035:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 14363,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2035:7:47",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 14366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:13:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 14307,
                  "id": 14367,
                  "nodeType": "Return",
                  "src": "2028:20:47"
                }
              ]
            },
            "functionSelector": "b883cc2a",
            "id": 14369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14304,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1515:8:47"
            },
            "parameters": {
              "id": 14303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14298,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 14369,
                  "src": "1455:17:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14300,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 14369,
                  "src": "1474:18:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14299,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14302,
                  "mutability": "mutable",
                  "name": "meta",
                  "nodeType": "VariableDeclaration",
                  "scope": 14369,
                  "src": "1494:19:47",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14301,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:5:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1454:60:47"
            },
            "returnParameters": {
              "id": 14307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14306,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 14369,
                  "src": "1541:7:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1541:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1540:9:47"
            },
            "scope": 14436,
            "src": "1435:620:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14401,
              "nodeType": "Block",
              "src": "2137:158:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14379,
                          "name": "_bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14373,
                          "src": "2155:7:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2174:1:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2166:7:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14380,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2166:7:47",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2166:10:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2155:21:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 14385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2178:17:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 14378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2147:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2147:49:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14387,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:49:47"
                },
                {
                  "expression": {
                    "id": 14394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 14388,
                          "name": "isBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14233,
                          "src": "2206:8:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint8_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint8 => mapping(address => bool))"
                          }
                        },
                        "id": 14391,
                        "indexExpression": {
                          "id": 14389,
                          "name": "_chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14371,
                          "src": "2215:8:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2206:18:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 14392,
                      "indexExpression": {
                        "id": 14390,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14373,
                        "src": "2225:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2206:27:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 14393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2236:4:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2206:34:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14395,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:34:47"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14397,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14371,
                        "src": "2270:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 14398,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14373,
                        "src": "2280:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14396,
                      "name": "AdminAddBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14276,
                      "src": "2255:14:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,address)"
                      }
                    },
                    "id": 14399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2255:33:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14400,
                  "nodeType": "EmitStatement",
                  "src": "2250:38:47"
                }
              ]
            },
            "functionSelector": "4040768c",
            "id": 14402,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14376,
                "modifierName": {
                  "id": 14375,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 570,
                  "src": "2127:9:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "2127:9:47"
              }
            ],
            "name": "adminAddBridge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14371,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 14402,
                  "src": "2085:14:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14370,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:5:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14373,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 14402,
                  "src": "2101:15:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2101:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2084:33:47"
            },
            "returnParameters": {
              "id": 14377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2137:0:47"
            },
            "scope": 14436,
            "src": "2061:234:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14434,
              "nodeType": "Block",
              "src": "2380:162:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14412,
                          "name": "_bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14406,
                          "src": "2398:7:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2417:1:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2409:7:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14413,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2409:7:47",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2409:10:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2398:21:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 14418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2421:17:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 14411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2390:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2390:49:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14420,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:49:47"
                },
                {
                  "expression": {
                    "id": 14427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 14421,
                          "name": "isBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14233,
                          "src": "2449:8:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint8_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint8 => mapping(address => bool))"
                          }
                        },
                        "id": 14424,
                        "indexExpression": {
                          "id": 14422,
                          "name": "_chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14404,
                          "src": "2458:8:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2449:18:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 14425,
                      "indexExpression": {
                        "id": 14423,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14406,
                        "src": "2468:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2449:27:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 14426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2479:5:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2449:35:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14428,
                  "nodeType": "ExpressionStatement",
                  "src": "2449:35:47"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14430,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14404,
                        "src": "2517:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 14431,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14406,
                        "src": "2527:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14429,
                      "name": "AdminRemoveBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14282,
                      "src": "2499:17:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,address)"
                      }
                    },
                    "id": 14432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2499:36:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14433,
                  "nodeType": "EmitStatement",
                  "src": "2494:41:47"
                }
              ]
            },
            "functionSelector": "eadef9bb",
            "id": 14435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14409,
                "modifierName": {
                  "id": 14408,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 570,
                  "src": "2370:9:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "2370:9:47"
              }
            ],
            "name": "adminRemoveBridge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14404,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 14435,
                  "src": "2328:14:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14403,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2328:5:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14406,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 14435,
                  "src": "2344:15:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2344:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2327:33:47"
            },
            "returnParameters": {
              "id": 14410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2380:0:47"
            },
            "scope": 14436,
            "src": "2301:241:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14437,
        "src": "481:2063:47"
      }
    ],
    "src": "33:2512:47"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2024-06-20T15:00:49.690Z",
  "devdoc": {
    "details": "Factory contract of Nutbox cosmos delegate pool. Like the sp delegate, we use update method to update user's total delegate amount of the validator x",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}