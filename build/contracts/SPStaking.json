{
  "contractName": "SPStaking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_community",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_chainId",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_delegatee",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "UpdateStaking",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "accountBindMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegatee",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_chainId",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_delegatee",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_bindAccount",
          "type": "bytes32"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCommunity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserDepositInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasDeposited",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "bindAccount",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SPStaking.StakingInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_community\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_chainId\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_delegatee\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdateStaking\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"accountBindMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegatee\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommunity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasDeposited\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"bindAccount\",\"type\":\"bytes32\"}],\"internalType\":\"struct SPStaking.StakingInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_chainId\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_delegatee\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_bindAccount\",\"type\":\"bytes32\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Template contract of SP/HP staking pool. Delegation only can be updated through update().\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dapps/sp-staking/SPStaking.sol\":\"SPStaking\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x1304796e9cdc64294735b4222849a240363b2aff374bb58b7c728f8dc0f4aa75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87398b4ba8f7c7e6613a5967e5407a5af6807e753d326d5e3b8c29697d33e36\",\"dweb:/ipfs/QmWGzaF9UWB5rNW1h9kvkJaWSf95WkQZ7RVR3bJ24oVgwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x978847fbff92d66d27d8767402a90ba996970b1936b372406aa17f5492bd8dc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1414cb92779420b50d3e796b47bad6ea800ef1805bc6f9bf35a3ccb4e17db3dc\",\"dweb:/ipfs/QmaMzwYqLiivfaWSgqeaAPboBtJjVD1hSrH48p7ExJZ7DG\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x670a64416cace45b7f4037a2c1cd66a83fbc2a573621fcf6aeb6b917abffde52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a53de93c53876cf4383ef42f9148f7262145e6ac3b0b2d77ec8e12fccacc81\",\"dweb:/ipfs/QmYqDjDinmFVdMZMwHfNdVFmRrZG9MR9LFfpnDxJAQegJB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]},\"project:/contracts/Community.sol\":{\"keccak256\":\"0xfc6e71ea2417741d5ba19763d533ffd815b41ef931c69a1242bae54c154fa048\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://423f44c86b40dd3858d2c4dc69e632f27061383252a0650f98e6725e398bd854\",\"dweb:/ipfs/Qmam3cdgAD6nqpiR6JoVy3hbZYcak9yKsPVqtn5C8NyPDC\"]},\"project:/contracts/CommunityFactory.sol\":{\"keccak256\":\"0x651020221943be888ac06515c91ba57fb85a427ee46fe23e86db6eadfb3a2bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c05ef23811ecbda8079d230bc0e69c0b6fd8eb8411d10883c4313a786e78cbbb\",\"dweb:/ipfs/QmNms3YHXUFuY2nE5HkGHFtkRmpj5qffyXgSpmC4pZYgC6\"]},\"project:/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xddf2a441a9c0714ecc5c14ad5ee6c3ffa2e8155292229574369156004d2bcd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167987fa430b1303ad04b831fa610d31ca3f4202ad847e87cd9bb01156cfe9e0\",\"dweb:/ipfs/Qmf7a5unwgdUWTPfWZ94QRxVVxic12feERMNeC6krcmLmZ\"]},\"project:/contracts/community-token/MintableERC20.sol\":{\"keccak256\":\"0xd49c97ab428cd65d2326ad6875aed0082716bbfd094e5fd11cfafc6f778adcf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87da6adb416be4cfa38f6e08989390558297791f362cc237bee8c33080d3bd20\",\"dweb:/ipfs/QmYgQbaazS4L9KVvUhDq7pMxZGhCM8USrgJyjAsLkXDfLX\"]},\"project:/contracts/dapps/sp-staking/SPStaking.sol\":{\"keccak256\":\"0x987094a1912df9918ea09467d70e4f515540f840f66acd7bd45e5a3699e02cec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://197cff07b09a3f0d4633c476f7623934e7b8c6758c7b23c381958bfaf666d103\",\"dweb:/ipfs/QmQ9eMpnRRo61FVGPrACJEbu873XdzEiLMiUhXK4gM8rm9\"]},\"project:/contracts/dapps/sp-staking/SPStakingFactory.sol\":{\"keccak256\":\"0xc1a9a8bfe2788af9c05a45963107857b8a2f4ad3cc9c0c021e8c5c017e6b8871\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebeaf8bfa4e4f4a1fa2246c6f5e2f67698085603cd5998f48d52820cc9972ac2\",\"dweb:/ipfs/QmfMoNwub7ayzszS2nWMjMHcDHXACHoWf2fTkuUhFLvLYZ\"]},\"project:/contracts/interfaces/ICalculator.sol\":{\"keccak256\":\"0x85e62c5ec77229d1e44b2c838b259829093e616ddbb887261eeaadd11c83c70a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8433eb15b4035948768e8707cae178742fc32fd60813dbba845d177ea87a89c7\",\"dweb:/ipfs/QmRByWaN4DZcSUyJABp1PViBDkBfQuHVAvqeU6FwqTPW9K\"]},\"project:/contracts/interfaces/ICommittee.sol\":{\"keccak256\":\"0x2190b0279cab5723ca36a492c45aad3b43f4f705d1df7d81e2932733b371397e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccd2ccfbbb75866a710e334056949888006443fd92404c66f22a2ffbd3a41acf\",\"dweb:/ipfs/QmUE1FEe5qLTp4TTrv9YBPgo97bdjABwUsRkZxkVcmXkUv\"]},\"project:/contracts/interfaces/ICommunity.sol\":{\"keccak256\":\"0x9c8f1379634fc9df3fc965ebd5c11976ce3d71aab8996f8efe903aa4a3042811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e3fe744d29ff2f477050a263547fb192ee52180359d469b1cf1f79062f9db4\",\"dweb:/ipfs/QmcpTdndc9H2PmhTJgF5qabCotM74swULzMKCYDbDAACvp\"]},\"project:/contracts/interfaces/ICommunityTokenFactory.sol\":{\"keccak256\":\"0x9a69a2d0752d3002d55ec2734724891fdab03de0a88e15ff297d85a3878924b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54fcdeb38c2292e11b14d0ff2b2d772ab8e14ce56d080685fede2f38749ff1d\",\"dweb:/ipfs/QmZdUicfe2kiGG5WaYpYN9yzNoXN7X3AmCMaosF4Vj6kzz\"]},\"project:/contracts/interfaces/IGauge.sol\":{\"keccak256\":\"0xafa9311f14cf7617763940d265d51448c613e574e6cbcdbb4412bd76ca7ae1fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d69b9acd6a010f1e8f5e0f3f533633a360c3f9d128d43c5191cc7e3d0864244\",\"dweb:/ipfs/QmQfwcyuTHGaw8xM9jwA9YzrxaKUSXTKNYobGwXLeCYus8\"]},\"project:/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xedea7672bb9703bcf57a6bbf386e4b528f55a698a08bc7c4481400738671ac83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20c0e753aa731e11ebe3e2918c863a4e72400983bb466660d3580ce4d9fbcf4\",\"dweb:/ipfs/QmUi3uZ9HVmZDAgyTTvWTPMtov2SudhFdSJ7jGLf8w3eis\"]},\"project:/contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0x690fa318a561b45e70ceee542a68746d8b72a98c4ff83abb177c3e3710190fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91b6a4e9de1e1f01065c329d197dfd1f4d9a0996397f9f79b846804d75b1d2bd\",\"dweb:/ipfs/Qmc1eCVjE1xnQx2uMPkhAz5i3ohDDjEoVmJ5SZ8mdytScP\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b506040516200124238038062001242833981016040819052620000349162000154565b33606090811b60805284901b6001600160601b03191660a05282516200006290600290602086019062000097565b5060035560f81b7fff000000000000000000000000000000000000000000000000000000000000001660c05250620002e59050565b828054620000a59062000260565b90600052602060002090601f016020900481019282620000c9576000855562000114565b82601f10620000e457805160ff191683800117855562000114565b8280016001018555821562000114579182015b8281111562000114578251825591602001919060010190620000f7565b506200012292915062000126565b5090565b5b8082111562000122576000815560010162000127565b805160ff811681146200014f57600080fd5b919050565b600080600080608085870312156200016a578384fd5b84516001600160a01b038116811462000181578485fd5b602086810151919550906001600160401b0380821115620001a0578586fd5b818801915088601f830112620001b4578586fd5b815181811115620001c957620001c9620002b6565b604051601f8201601f1916810185018381118282101715620001ef57620001ef620002b6565b60405281815283820185018b101562000206578788fd5b8792505b818310156200022957838301850151818401860152918401916200020a565b818311156200023a57878583830101525b809750505050505062000250604086016200013d565b6060959095015193969295505050565b6002810460018216806200027557607f821691505b60208210811415620002b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60805160601c60a05160601c60c05160f81c610ee56200035d600039600061030d015260008181610410015281816105bd0152818161066d01528181610717015281816107ff015281816108b7015281816109600152610a3901526000818161021b0152818161023f01526105ea0152610ee56000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806388cc58e41161006657806388cc58e414610106578063919034701461010e57806394465b2114610123578063b3a7834d14610136578063c51db6b2146101565761009e565b806306fdde03146100a35780631e31d053146100c157806338adb6f0146100d6578063567e98f9146100de578063630949c7146100e6575b600080fd5b6100ab61015e565b6040516100b89190610be0565b60405180910390f35b6100c96101ec565b6040516100b89190610b90565b6100c96101f2565b6100c96101f8565b6100f96100f4366004610b0a565b6101fe565b6040516100b89190610b99565b6100f9610219565b61012161011c366004610b3a565b61023d565b005b6100c9610131366004610ab2565b6109ca565b610149610144366004610ab2565b6109e9565b6040516100b89190610da7565b6100f9610a37565b6002805461016b90610e46565b80601f016020809104026020016040519081016040528092919081815260200182805461019790610e46565b80156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b505050505081565b60035481565b60045490565b60045481565b6000602081905290815260409020546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e78cea926040518163ffffffff1660e01b815260040160206040518083038186803b15801561029657600080fd5b505afa1580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190610ace565b6001600160a01b0316336001600160a01b0316146103075760405162461bcd60e51b81526004016102fe90610d11565b60405180910390fd5b8460ff167f000000000000000000000000000000000000000000000000000000000000000060ff161461034c5760405162461bcd60e51b81526004016102fe90610d7f565b836003541461036d5760405162461bcd60e51b81526004016102fe90610cda565b6000818152602081905260409020546001600160a01b031615806103aa57506000818152602081905260409020546001600160a01b038481169116145b6103c65760405162461bcd60e51b81526004016102fe90610d48565b6001600160a01b03831660009081526001602081905260409091200154828114156103f157506109c3565b828110156104b157604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a90610445903090600401610b99565b60206040518083038186803b15801561045d57600080fd5b505afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610aea565b6104b15760405162461bcd60e51b81526004016102fe90610c99565b6001600160a01b03841660009081526001602052604090205460ff16610522576001600160a01b0384166000818152600160208181526040808420805460ff1916841781559283018490556002909201869055858352829052902080546001600160a01b03191690911790556105a6565b816040516020016105339190610b90565b60408051601f1981840301815282825280516020918201206001600160a01b03881660009081526001835292909220600201549192610573929101610b90565b60405160208183030381529060405280519060200120146105a65760405162461bcd60e51b81526004016102fe90610c33565b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f290610612907f000000000000000000000000000000000000000000000000000000000000000090600401610c6a565b600060405180830381600087803b15801561062c57600080fd5b505af1158015610640573d6000803e3d6000fd5b505050506001600160a01b038416600090815260016020819052604090912001541561086b5760006107e07f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630886040518363ffffffff1660e01b81526004016106b9929190610bad565b60206040518083038186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610b22565b6107da64e8d4a510006107d47f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016107619190610b99565b60206040518083038186803b15801561077957600080fd5b505afa15801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b19190610b22565b6001600160a01b038b166000908152600160208190526040909120015490610a5b565b90610a6e565b90610a7a565b9050801561086957604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b7208906108369088908590600401610bc7565b600060405180830381600087803b15801561085057600080fd5b505af1158015610864573d6000803e3d6000fd5b505050505b505b610884816107da85600454610a8690919063ffffffff16565b60049081556001600160a01b03808616600090815260016020819052604091829020018690555163286a276f60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169163bf16c3c29187916109059164e8d4a51000916107d491879163a1a89dbc9161076191309101610b99565b6040518363ffffffff1660e01b8152600401610922929190610bc7565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b50505050836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8572960e25f62a888f92ba98fda1ca3cba3fc98b664e8ae79fdc97a644c7bae483866040516109b9929190610dca565b60405180910390a3505b5050505050565b6001600160a01b03166000908152600160208190526040909120015490565b6109f1610a92565b506001600160a01b03166000908152600160208181526040928390208351606081018552815460ff16151581529281015491830191909152600201549181019190915290565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610a678284610e10565b9392505050565b6000610a678284610df0565b6000610a678284610e2f565b6000610a678284610dd8565b604080516060810182526000808252602082018190529181019190915290565b600060208284031215610ac3578081fd5b8135610a6781610e97565b600060208284031215610adf578081fd5b8151610a6781610e97565b600060208284031215610afb578081fd5b81518015158114610a67578182fd5b600060208284031215610b1b578081fd5b5035919050565b600060208284031215610b33578081fd5b5051919050565b600080600080600060a08688031215610b51578081fd5b853560ff81168114610b61578182fd5b9450602086013593506040860135610b7881610e97565b94979396509394606081013594506080013592915050565b90815260200190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080835283518082850152825b81811015610c0c57858101830151858201604001528201610bf0565b81811115610c1d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601c908201527f426f756e6420737465656d206163636f756e74206469736d6174636800000000604082015260600190565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b60208082526017908201527f57726f6e672064656c656761746565206163636f756e74000000000000000000604082015260600190565b6020808252601d908201527f4f6e6c79207665726966696564206272696467652063616e2063616c6c000000604082015260600190565b6020808252601a908201527f426f756e6420627363206163636f756e74206469736d61746368000000000000604082015260600190565b6020808252600e908201526d15dc9bdb99c818da185a5b881a5960921b604082015260600190565b815115158152602080830151908201526040918201519181019190915260600190565b918252602082015260400190565b60008219821115610deb57610deb610e81565b500190565b600082610e0b57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e2a57610e2a610e81565b500290565b600082821015610e4157610e41610e81565b500390565b600281046001821680610e5a57607f821691505b60208210811415610e7b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610eac57600080fd5b5056fea26469706673582212203198a1ad4a84f24ecabd10ff76aa9bd16aa012ae1d785bd7f026004c7bafd83064736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806388cc58e41161006657806388cc58e414610106578063919034701461010e57806394465b2114610123578063b3a7834d14610136578063c51db6b2146101565761009e565b806306fdde03146100a35780631e31d053146100c157806338adb6f0146100d6578063567e98f9146100de578063630949c7146100e6575b600080fd5b6100ab61015e565b6040516100b89190610be0565b60405180910390f35b6100c96101ec565b6040516100b89190610b90565b6100c96101f2565b6100c96101f8565b6100f96100f4366004610b0a565b6101fe565b6040516100b89190610b99565b6100f9610219565b61012161011c366004610b3a565b61023d565b005b6100c9610131366004610ab2565b6109ca565b610149610144366004610ab2565b6109e9565b6040516100b89190610da7565b6100f9610a37565b6002805461016b90610e46565b80601f016020809104026020016040519081016040528092919081815260200182805461019790610e46565b80156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b505050505081565b60035481565b60045490565b60045481565b6000602081905290815260409020546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e78cea926040518163ffffffff1660e01b815260040160206040518083038186803b15801561029657600080fd5b505afa1580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190610ace565b6001600160a01b0316336001600160a01b0316146103075760405162461bcd60e51b81526004016102fe90610d11565b60405180910390fd5b8460ff167f000000000000000000000000000000000000000000000000000000000000000060ff161461034c5760405162461bcd60e51b81526004016102fe90610d7f565b836003541461036d5760405162461bcd60e51b81526004016102fe90610cda565b6000818152602081905260409020546001600160a01b031615806103aa57506000818152602081905260409020546001600160a01b038481169116145b6103c65760405162461bcd60e51b81526004016102fe90610d48565b6001600160a01b03831660009081526001602081905260409091200154828114156103f157506109c3565b828110156104b157604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a90610445903090600401610b99565b60206040518083038186803b15801561045d57600080fd5b505afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610aea565b6104b15760405162461bcd60e51b81526004016102fe90610c99565b6001600160a01b03841660009081526001602052604090205460ff16610522576001600160a01b0384166000818152600160208181526040808420805460ff1916841781559283018490556002909201869055858352829052902080546001600160a01b03191690911790556105a6565b816040516020016105339190610b90565b60408051601f1981840301815282825280516020918201206001600160a01b03881660009081526001835292909220600201549192610573929101610b90565b60405160208183030381529060405280519060200120146105a65760405162461bcd60e51b81526004016102fe90610c33565b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f290610612907f000000000000000000000000000000000000000000000000000000000000000090600401610c6a565b600060405180830381600087803b15801561062c57600080fd5b505af1158015610640573d6000803e3d6000fd5b505050506001600160a01b038416600090815260016020819052604090912001541561086b5760006107e07f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630886040518363ffffffff1660e01b81526004016106b9929190610bad565b60206040518083038186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610b22565b6107da64e8d4a510006107d47f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016107619190610b99565b60206040518083038186803b15801561077957600080fd5b505afa15801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b19190610b22565b6001600160a01b038b166000908152600160208190526040909120015490610a5b565b90610a6e565b90610a7a565b9050801561086957604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b7208906108369088908590600401610bc7565b600060405180830381600087803b15801561085057600080fd5b505af1158015610864573d6000803e3d6000fd5b505050505b505b610884816107da85600454610a8690919063ffffffff16565b60049081556001600160a01b03808616600090815260016020819052604091829020018690555163286a276f60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169163bf16c3c29187916109059164e8d4a51000916107d491879163a1a89dbc9161076191309101610b99565b6040518363ffffffff1660e01b8152600401610922929190610bc7565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b50505050836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8572960e25f62a888f92ba98fda1ca3cba3fc98b664e8ae79fdc97a644c7bae483866040516109b9929190610dca565b60405180910390a3505b5050505050565b6001600160a01b03166000908152600160208190526040909120015490565b6109f1610a92565b506001600160a01b03166000908152600160208181526040928390208351606081018552815460ff16151581529281015491830191909152600201549181019190915290565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610a678284610e10565b9392505050565b6000610a678284610df0565b6000610a678284610e2f565b6000610a678284610dd8565b604080516060810182526000808252602082018190529181019190915290565b600060208284031215610ac3578081fd5b8135610a6781610e97565b600060208284031215610adf578081fd5b8151610a6781610e97565b600060208284031215610afb578081fd5b81518015158114610a67578182fd5b600060208284031215610b1b578081fd5b5035919050565b600060208284031215610b33578081fd5b5051919050565b600080600080600060a08688031215610b51578081fd5b853560ff81168114610b61578182fd5b9450602086013593506040860135610b7881610e97565b94979396509394606081013594506080013592915050565b90815260200190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080835283518082850152825b81811015610c0c57858101830151858201604001528201610bf0565b81811115610c1d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601c908201527f426f756e6420737465656d206163636f756e74206469736d6174636800000000604082015260600190565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b60208082526017908201527f57726f6e672064656c656761746565206163636f756e74000000000000000000604082015260600190565b6020808252601d908201527f4f6e6c79207665726966696564206272696467652063616e2063616c6c000000604082015260600190565b6020808252601a908201527f426f756e6420627363206163636f756e74206469736d61746368000000000000604082015260600190565b6020808252600e908201526d15dc9bdb99c818da185a5b881a5960921b604082015260600190565b815115158152602080830151908201526040918201519181019190915260600190565b918252602082015260400190565b60008219821115610deb57610deb610e81565b500190565b600082610e0b57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e2a57610e2a610e81565b500290565b600082821015610e4157610e41610e81565b500390565b600281046001821680610e5a57607f821691505b60208210811415610e7b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610eac57600080fd5b5056fea26469706673582212203198a1ad4a84f24ecabd10ff76aa9bd16aa012ae1d785bd7f026004c7bafd83064736f6c63430008000033",
  "immutableReferences": {
    "12390": [
      {
        "length": 32,
        "start": 539
      },
      {
        "length": 32,
        "start": 575
      },
      {
        "length": 32,
        "start": 1514
      }
    ],
    "12394": [
      {
        "length": 32,
        "start": 1040
      },
      {
        "length": 32,
        "start": 1469
      },
      {
        "length": 32,
        "start": 1645
      },
      {
        "length": 32,
        "start": 1815
      },
      {
        "length": 32,
        "start": 2047
      },
      {
        "length": 32,
        "start": 2231
      },
      {
        "length": 32,
        "start": 2400
      },
      {
        "length": 32,
        "start": 2617
      }
    ],
    "12398": [
      {
        "length": 32,
        "start": 781
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2243:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:102:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "154:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "163:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "166:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "156:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "156:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "156:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "146:4:50",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:16:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:27:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "115:2:50"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:50",
                "type": ""
              }
            ],
            "src": "14:162:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "321:1289:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "368:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "377:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "385:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "370:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "370:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "370:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "342:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "351:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "338:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "338:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "363:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "334:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "334:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "331:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "403:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "416:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "416:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "407:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "495:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "504:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "512:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "497:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "497:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "497:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "454:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "465:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "480:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "485:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "476:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "476:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "489:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "472:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "472:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "461:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "461:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "451:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "451:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "444:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "441:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "530:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "540:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "530:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "554:12:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "564:2:50",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "558:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "575:39:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "599:9:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "610:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "595:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "595:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "589:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "589:25:50"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "579:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "623:28:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:2:50",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "645:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "637:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "637:10:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "649:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "633:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "633:18:50"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "627:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "678:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "687:6:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "695:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "680:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "680:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "680:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "666:6:50"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "674:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "663:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "663:14:50"
                  },
                  "nodeType": "YulIf",
                  "src": "660:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "713:32:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "727:9:50"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "738:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "723:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "723:22:50"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "717:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "793:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "802:6:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "810:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "795:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "795:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "795:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "772:2:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "776:4:50",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "768:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "768:13:50"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "783:7:50"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "764:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "764:27:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "757:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "757:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "754:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "828:19:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "844:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "838:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "838:9:50"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "832:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "870:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "872:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "872:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "872:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "862:2:50"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "866:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "859:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "859:10:50"
                  },
                  "nodeType": "YulIf",
                  "src": "856:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "901:23:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "921:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "915:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "915:9:50"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "905:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "933:67:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "959:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "975:2:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "979:4:50",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "971:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "971:13:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "990:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "986:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "986:7:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "967:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "967:27:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "955:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "955:40:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "997:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "951:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "951:49:50"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "937:10:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1059:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1061:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1061:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1061:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1018:10:50"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1030:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1015:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1015:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1038:10:50"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1050:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1035:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1035:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1012:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1012:46:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1009:2:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1097:2:50",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1101:10:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1090:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1090:22:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1090:22:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1128:6:50"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1136:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1121:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:18:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1121:18:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1185:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1194:6:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1202:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1187:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1187:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1187:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1162:2:50"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1166:2:50"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1158:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1158:11:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1171:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1154:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1154:20:50"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1176:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1151:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1151:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1148:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1220:15:50",
                  "value": {
                    "name": "value1",
                    "nodeType": "YulIdentifier",
                    "src": "1229:6:50"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1224:1:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1290:83:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1319:6:50"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1327:1:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1315:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1315:14:50"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1331:2:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1311:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1311:23:50"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1350:2:50"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1354:1:50"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1346:3:50"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1346:10:50"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1358:2:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1342:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1342:19:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1336:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1336:26:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1304:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1304:59:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1304:59:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1255:1:50"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1258:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1252:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1252:9:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1262:19:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1264:15:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1273:1:50"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1276:2:50"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1269:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1269:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1264:1:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1248:3:50",
                    "statements": []
                  },
                  "src": "1244:129:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1403:64:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1432:6:50"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1440:2:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1428:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1428:15:50"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1445:2:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1424:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1424:24:50"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1450:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1417:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1417:40:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1417:40:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1388:1:50"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1391:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1385:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1385:9:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1382:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1476:16:50",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1486:6:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1476:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1501:59:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1545:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1556:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1541:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1541:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_uint8_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1511:29:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:49:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1501:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1569:35:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1589:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1600:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1585:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1585:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1579:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1579:25:50"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1569:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_uint8t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "263:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "274:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "286:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "294:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "302:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "310:6:50",
                "type": ""
              }
            ],
            "src": "181:1429:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1670:382:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1680:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1694:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1700:1:50",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1690:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1690:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1680:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1711:38:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1741:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1747:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1737:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1737:12:50"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1715:18:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1788:31:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1790:27:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1804:6:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1812:4:50",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1800:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1800:17:50"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1790:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1768:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1761:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1761:26:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1758:2:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1878:168:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1899:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1902:77:50",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1892:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1892:88:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1892:88:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2000:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2003:4:50",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1993:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1993:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1993:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2028:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2031:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2021:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2021:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2021:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1834:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1857:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1865:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1854:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1854:14:50"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1831:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1831:38:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1828:2:50"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1650:4:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1659:6:50",
                "type": ""
              }
            ],
            "src": "1615:437:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2089:152:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2106:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2109:77:50",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2099:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2099:88:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2099:88:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2203:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2206:4:50",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2196:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2196:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2196:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2227:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2230:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2220:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2220:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2220:15:50"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2057:184:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint8t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value1)\n        }\n        value1 := memPtr\n        value2 := abi_decode_t_uint8_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8393:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:50",
                "type": ""
              }
            ],
            "src": "14:259:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:50",
                "type": ""
              }
            ],
            "src": "278:263:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:219:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "670:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "679:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "687:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "672:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "672:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "645:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "666:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "637:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "634:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "705:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "724:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "718:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "709:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "756:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "777:5:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "770:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "763:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "763:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "753:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "753:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "746:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:40:50"
                  },
                  "nodeType": "YulIf",
                  "src": "743:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "822:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "832:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "822:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "601:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "613:6:50",
                "type": ""
              }
            ],
            "src": "546:297:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "918:120:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "964:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "973:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "981:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "966:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "966:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "966:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "939:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "948:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "935:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "935:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "960:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "931:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "931:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "928:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "999:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1022:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1009:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "999:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "884:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "895:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "907:6:50",
                "type": ""
              }
            ],
            "src": "848:190:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1124:113:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1170:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1179:6:50"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1187:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1172:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1172:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1172:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1154:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1141:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1141:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1166:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1137:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1137:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1134:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1205:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1221:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1215:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:16:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1205:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1090:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1101:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1113:6:50",
                "type": ""
              }
            ],
            "src": "1043:194:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1378:502:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1425:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1434:6:50"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1442:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1427:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1427:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1427:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1399:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1408:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1395:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1395:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1420:3:50",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1391:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1388:2:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1460:36:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1486:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1473:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:23:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1464:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1544:26:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1553:6:50"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1561:6:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1546:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1546:22:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1546:22:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1518:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1529:5:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1536:4:50",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1525:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1525:16:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1515:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1515:27:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1508:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1508:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1505:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1579:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1589:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1579:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1603:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1630:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1641:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1626:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1626:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1613:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1613:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1603:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1654:47:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1686:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1697:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1682:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1669:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1669:32:50"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1658:7:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1737:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1710:26:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1710:35:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1710:35:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1754:17:50",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1764:7:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1754:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1780:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1807:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1818:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1803:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1803:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1790:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1790:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1780:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1831:43:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1858:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1869:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1854:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1854:19:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1841:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1841:33:50"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1831:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_bytes32t_addresst_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1312:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1323:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1335:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1343:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1351:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1359:6:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1367:6:50",
                "type": ""
              }
            ],
            "src": "1242:638:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2004:63:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2021:3:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2026:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2014:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2014:19:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2014:19:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2042:19:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2053:3:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2058:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2049:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2042:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1980:3:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1985:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1996:3:50",
                "type": ""
              }
            ],
            "src": "1885:182:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2173:102:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2183:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2195:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2206:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2191:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2183:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2225:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2240:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2256:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2261:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2252:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2252:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2265:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2248:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2248:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2236:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2236:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2218:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2218:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2218:51:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2142:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2153:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2164:4:50",
                "type": ""
              }
            ],
            "src": "2072:203:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2409:175:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2419:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2431:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2442:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2427:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2427:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2419:4:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2454:29:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2472:3:50",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2477:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2468:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2468:11:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2481:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2464:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2464:19:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2458:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2499:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2514:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2522:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2510:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2492:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2492:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2492:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2546:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2557:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2542:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2542:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2566:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2574:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2562:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2562:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2535:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2535:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2535:43:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2370:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2381:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2389:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2400:4:50",
                "type": ""
              }
            ],
            "src": "2280:304:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2718:145:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2728:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2740:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2751:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2736:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2736:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2728:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2770:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2785:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2801:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2806:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2797:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2797:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2810:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2793:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2793:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2781:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2781:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2763:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2763:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2763:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2834:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2845:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2830:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2830:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2850:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2823:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2823:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2823:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2679:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2690:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2698:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2709:4:50",
                "type": ""
              }
            ],
            "src": "2589:274:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2969:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2979:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2991:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3002:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2987:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2987:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2979:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3021:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3032:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3014:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3014:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3014:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2938:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2949:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2960:4:50",
                "type": ""
              }
            ],
            "src": "2868:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3171:482:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3181:12:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3191:2:50",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3185:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3209:9:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3220:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3202:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3202:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3202:21:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3232:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3252:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3246:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3246:13:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3236:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3279:9:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3290:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3275:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3275:18:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3295:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3268:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3268:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3268:34:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3311:13:50",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "3320:4:50"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3315:1:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3383:90:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3412:9:50"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3423:1:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3408:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3408:17:50"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3427:2:50",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3404:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3404:26:50"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3446:6:50"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3454:1:50"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3442:3:50"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3442:14:50"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3458:2:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3438:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3438:23:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3432:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3432:30:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3397:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3397:66:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3397:66:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3344:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3347:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3341:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3341:13:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3355:19:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3357:15:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3366:1:50"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3369:2:50"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3362:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3362:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3357:1:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3337:3:50",
                    "statements": []
                  },
                  "src": "3333:140:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3507:69:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3536:9:50"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "3547:6:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3532:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3532:22:50"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3556:2:50",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3528:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3528:31:50"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3561:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3521:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3521:45:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3521:45:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3488:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3491:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3485:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3485:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3482:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3585:62:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3601:9:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3620:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3628:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3616:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3616:15:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3637:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3633:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3633:7:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3612:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3612:29:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3597:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3597:45:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3644:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3593:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3593:54:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3585:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3140:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3151:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3162:4:50",
                "type": ""
              }
            ],
            "src": "3050:603:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3832:178:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3849:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3860:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3842:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3842:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3842:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3883:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3894:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3879:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3879:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3899:2:50",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3872:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3872:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3872:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3922:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3933:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3918:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3918:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3938:30:50",
                        "type": "",
                        "value": "Bound steem account dismatch"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3911:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3911:58:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3911:58:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3978:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3990:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4001:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3986:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3986:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3978:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_069c0c3134db0caa858cc3d322a644816803d4c317a15d4661abe9bc23f628b5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3809:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3823:4:50",
                "type": ""
              }
            ],
            "src": "3658:352:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4217:225:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4234:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4245:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4227:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4227:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4227:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4268:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4279:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4264:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4264:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4284:1:50",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4257:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4257:29:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4257:29:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4306:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4317:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4302:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4302:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4322:6:50",
                        "type": "",
                        "value": "USER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4295:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4295:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4295:34:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4338:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4350:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4361:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4346:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4346:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4338:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4385:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4396:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4381:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4381:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4407:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4423:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4428:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4419:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4419:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4432:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4415:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4415:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4403:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4403:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4374:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4374:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4374:62:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4186:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4197:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4208:4:50",
                "type": ""
              }
            ],
            "src": "4015:427:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4621:223:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4638:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4649:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4631:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4631:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4631:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4672:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4683:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4668:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4668:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4688:2:50",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4661:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4661:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4661:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4711:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4722:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4707:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4707:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4727:34:50",
                        "type": "",
                        "value": "Can not deposit to a closed pool"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4700:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4700:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4700:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4782:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4793:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4778:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4778:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4798:3:50",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4771:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4771:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4771:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4811:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4823:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4834:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4819:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4819:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4811:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4598:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4612:4:50",
                "type": ""
              }
            ],
            "src": "4447:397:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5023:173:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5040:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5051:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5033:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5033:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5033:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5074:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5085:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5070:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5070:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5090:2:50",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5063:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5063:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5063:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5113:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5124:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5109:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5109:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5129:25:50",
                        "type": "",
                        "value": "Wrong delegatee account"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5102:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5102:53:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5102:53:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5164:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5176:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5187:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5172:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5172:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5164:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5000:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5014:4:50",
                "type": ""
              }
            ],
            "src": "4849:347:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5375:179:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5392:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5403:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5385:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5385:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5385:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5426:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5437:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5422:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5422:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5442:2:50",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5415:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5415:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5415:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5465:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5476:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5461:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5461:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5481:31:50",
                        "type": "",
                        "value": "Only verified bridge can call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5454:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5454:59:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5454:59:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5522:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5534:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5545:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5530:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5530:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5522:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5352:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5366:4:50",
                "type": ""
              }
            ],
            "src": "5201:353:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5733:176:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5750:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5761:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5743:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5743:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5743:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5784:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5795:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5780:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5780:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5800:2:50",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5773:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5773:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5773:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5823:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5834:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5819:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5819:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5839:28:50",
                        "type": "",
                        "value": "Bound bsc account dismatch"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5812:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5812:56:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5812:56:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5877:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5889:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5900:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5885:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5885:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5877:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5710:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5724:4:50",
                "type": ""
              }
            ],
            "src": "5559:350:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6088:164:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6105:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6116:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6098:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6098:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6098:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6139:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6150:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6135:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6135:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6155:2:50",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6128:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6128:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6128:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6178:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6189:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6174:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6174:18:50"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6194:16:50",
                        "type": "",
                        "value": "Wrong chain id"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6167:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6167:44:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6167:44:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6220:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6232:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6243:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6228:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6228:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6220:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6065:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6079:4:50",
                "type": ""
              }
            ],
            "src": "5914:338:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6418:225:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6428:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6440:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6451:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6436:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6436:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6428:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6470:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6501:6:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6495:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6495:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6488:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6488:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6481:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6481:29:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6463:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6463:48:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6463:48:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6531:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6542:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6527:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6527:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6559:6:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6567:4:50",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6555:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6555:17:50"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6549:5:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6549:24:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6520:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6520:54:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6520:54:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6594:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6605:4:50",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6590:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6590:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6622:6:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6630:4:50",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6618:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6618:17:50"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6612:5:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6612:24:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6583:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6583:54:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6583:54:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_StakingInfo_$12379_memory_ptr__to_t_struct$_StakingInfo_$12379_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6387:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6398:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6409:4:50",
                "type": ""
              }
            ],
            "src": "6257:386:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6749:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6759:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6771:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6782:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6767:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6767:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6759:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6801:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6812:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6794:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6794:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6794:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6718:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6729:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6740:4:50",
                "type": ""
              }
            ],
            "src": "6648:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6959:119:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6969:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6981:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6992:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6977:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6977:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6969:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7011:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7022:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7004:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7004:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7004:25:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7049:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7060:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7045:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7045:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7065:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7038:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7038:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7038:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6920:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6931:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6939:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6950:4:50",
                "type": ""
              }
            ],
            "src": "6830:248:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7131:80:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7158:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7160:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7160:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7160:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7147:1:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7154:1:50"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7150:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7150:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7144:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7144:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7141:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7189:16:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7200:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7203:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7196:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7196:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7189:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7114:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7117:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7123:3:50",
                "type": ""
              }
            ],
            "src": "7083:128:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7262:171:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7293:111:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "7314:1:50"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7321:3:50",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7326:10:50",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7317:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7317:20:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7307:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7307:31:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7307:31:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7358:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7361:4:50",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7351:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7351:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7351:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "7386:1:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7389:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7379:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7379:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7379:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7282:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7275:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7275:9:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7272:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7413:14:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7422:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7425:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7418:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7418:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7413:1:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7247:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7250:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7256:1:50",
                "type": ""
              }
            ],
            "src": "7216:217:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7490:116:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7549:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7551:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7551:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7551:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7521:1:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7514:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7514:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7507:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7507:17:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7529:1:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7540:1:50",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7536:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7536:6:50"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7544:1:50"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7532:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7532:14:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7526:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7526:21:50"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7503:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7503:45:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7500:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7580:20:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7595:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7598:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7591:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7591:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7580:7:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7469:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7472:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7478:7:50",
                "type": ""
              }
            ],
            "src": "7438:168:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7660:76:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7682:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7684:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7684:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7684:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7676:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7679:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7673:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7673:8:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7670:2:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7713:17:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7725:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7728:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7721:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7721:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7713:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7642:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7645:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7651:4:50",
                "type": ""
              }
            ],
            "src": "7611:125:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7796:325:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7806:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7820:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7826:1:50",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7816:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7816:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7806:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7837:38:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7867:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7873:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7863:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7863:12:50"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7841:18:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7914:31:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7916:27:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7930:6:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7938:4:50",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7926:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7926:17:50"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7916:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7894:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7887:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7887:26:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7884:2:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8004:111:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8025:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8032:3:50",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8037:10:50",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8028:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8028:20:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8018:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8018:31:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8018:31:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8069:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8072:4:50",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8062:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8062:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8062:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8097:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8100:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8090:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8090:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8090:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7960:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7983:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7991:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7980:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7980:14:50"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7957:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7957:38:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7954:2:50"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7776:4:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7785:6:50",
                "type": ""
              }
            ],
            "src": "7741:380:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8158:95:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8175:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8182:3:50",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8187:10:50",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8178:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8178:20:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8168:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8168:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8168:31:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8215:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8218:4:50",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8208:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8208:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8208:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8239:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8242:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8232:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8232:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8232:15:50"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8126:127:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8305:86:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8369:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8378:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8381:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8371:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8371:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8371:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8328:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8339:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8354:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8359:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8350:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8350:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8363:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8346:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8346:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8335:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8335:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8325:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8325:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8318:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8318:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "8315:2:50"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8294:5:50",
                "type": ""
              }
            ],
            "src": "8258:133:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8t_bytes32t_addresst_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value4, value4) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_069c0c3134db0caa858cc3d322a644816803d4c317a15d4661abe9bc23f628b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Bound steem account dismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 4)\n        mstore(add(headStart, 96), \"USER\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Can not deposit to a closed pool\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Wrong delegatee account\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only verified bridge can call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Bound bsc account dismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Wrong chain id\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_StakingInfo_$12379_memory_ptr__to_t_struct$_StakingInfo_$12379_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(mload(value0))))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "374:4663:40:-:0;;;1616:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1725:10;1715:20;;;;;;1745:22;;;-1:-1:-1;;1745:22:40;;;1777:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1799:9:40;:22;1831:18;;-1:-1:-1;;;;;;1831:18:40;;;-1:-1:-1;374:4663:40;;-1:-1:-1;374:4663:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:4663:40;;;-1:-1:-1;374:4663:40;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:162:50;93:13;;146:4;135:16;;125:27;;115:2;;166:1;163;156:12;115:2;74:102;;;:::o;181:1429::-;;;;;363:3;351:9;342:7;338:23;334:33;331:2;;;385:6;377;370:22;331:2;416:16;;-1:-1:-1;;;;;461:31:50;;451:42;;441:2;;512:6;504;497:22;441:2;564;595:18;;;589:25;540:5;;-1:-1:-1;564:2:50;-1:-1:-1;663:14:50;;;660:2;;;695:6;687;680:22;660:2;738:6;727:9;723:22;713:32;;783:7;776:4;772:2;768:13;764:27;754:2;;810:6;802;795:22;754:2;844;838:9;866:2;862;859:10;856:2;;;872:18;;:::i;:::-;921:2;915:9;-1:-1:-1;;990:2:50;971:13;;967:27;955:40;;951:49;;1035:22;;;1015:18;;;1012:46;1009:2;;;1061:18;;:::i;:::-;1097:2;1090:22;1121:18;;;1158:11;;;1154:20;;1151:33;-1:-1:-1;1148:2:50;;;1202:6;1194;1187:22;1148:2;1229:6;1220:15;;1244:129;1258:2;1255:1;1252:9;1244:129;;;1346:10;;;1342:19;;1336:26;1315:14;;;1311:23;;1304:59;1269:10;;;;1244:129;;;1391:2;1388:1;1385:9;1382:2;;;1450:6;1445:2;1440;1432:6;1428:15;1424:24;1417:40;1382:2;1486:6;1476:16;;;;;;;1511:49;1556:2;1545:9;1541:18;1511:49;:::i;:::-;1600:2;1585:18;;;;1579:25;321:1289;;;;-1:-1:-1;;;321:1289:50:o;1615:437::-;1700:1;1690:12;;1747:1;1737:12;;;1758:2;;1812:4;1804:6;1800:17;1790:27;;1758:2;1865;1857:6;1854:14;1834:18;1831:38;1828:2;;;-1:-1:-1;;;1899:1:50;1892:88;2003:4;2000:1;1993:15;2031:4;2028:1;2021:15;1828:2;;1670:382;;;:::o;2057:184::-;-1:-1:-1;;;2106:1:50;2099:88;2206:4;2203:1;2196:15;2230:4;2227:1;2220:15;2089:152;374:4663:40;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "374:4663:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1299:24;;;:::i;:::-;;;;;;;:::i;4733:142::-;;;:::i;1422:32::-;;;:::i;748:49::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4363:94::-;;;:::i;1862:2495::-;;;;;;:::i;:::-;;:::i;:::-;;4567:160;;;;;;:::i;:::-;;:::i;4881:154::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4463:98::-;;;:::i;1178:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1299:24::-;;;;:::o;4733:142::-;4851:17;;4733:142;:::o;1422:32::-;;;;:::o;748:49::-;;;;;;;;;;;;;-1:-1:-1;;;;;748:49:40;;:::o;4363:94::-;4443:7;4363:94;:::o;1862:2495::-;2075:7;-1:-1:-1;;;;;2058:32:40;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2044:48:40;:10;:48;2036:90;;;;-1:-1:-1;;;2036:90:40;;;;;;;:::i;:::-;;;;;;;;;2155:8;2144:19;;:7;:19;;;2136:46;;;;-1:-1:-1;;;2136:46:40;;;;;;;:::i;:::-;2213:10;2200:9;;:23;2192:59;;;;-1:-1:-1;;;2192:59:40;;;;;;;:::i;:::-;2309:1;2269:28;;;;;;;;;;;-1:-1:-1;;;;;2269:28:40;:42;;:87;;-1:-1:-1;2315:14:40;:28;;;;;;;;;;;-1:-1:-1;;;;;2315:41:40;;;:28;;:41;2269:87;2261:126;;;;-1:-1:-1;;;2261:126:40;;;;;;;:::i;:::-;-1:-1:-1;;;;;2419:22:40;;2398:18;2419:22;;;-1:-1:-1;2419:22:40;;;;;;;;:29;;2462:20;;;2458:33;;;2484:7;;;2458:33;2517:6;2504:10;:19;2500:167;;;2570:48;;-1:-1:-1;;;2570:48:40;;2581:9;-1:-1:-1;;;;;2570:33:40;;;;:48;;2612:4;;2570:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2562:94;;;;-1:-1:-1;;;2562:94:40;;;;;;;:::i;:::-;-1:-1:-1;;;;;2748:22:40;;;;;;-1:-1:-1;2748:22:40;;;;;:35;;;2743:583;;-1:-1:-1;;;;;2799:22:40;;;;;;-1:-1:-1;2799:22:40;;;;;;;;:42;;-1:-1:-1;;2799:42:40;;;;;2855:29;;;:33;;;2902:34;;;;:49;;;2965:28;;;;;;;;:40;;-1:-1:-1;;;;;;2965:40:40;;;;;;2743:583;;;3239:12;3222:30;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;3222:30:40;;;;;;3212:41;;3222:30;3212:41;;;;-1:-1:-1;;;;;3134:22:40;;;;;;-1:-1:-1;3134:22:40;;;;;;:34;;;3212:41;;3092:98;;3134:34;3092:98;;:::i;:::-;;;;;;;;;;;;;3061:147;;;;;;:192;3036:279;;;;-1:-1:-1;;;3036:279:40;;;;;;;:::i;:::-;3444:50;;-1:-1:-1;;;3444:50:40;;3455:9;-1:-1:-1;;;;;3444:33:40;;;;:50;;3486:7;;3444:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;3509:22:40;;3541:1;3509:22;;;-1:-1:-1;3509:22:40;;;;;;;;:29;;:33;3505:429;;3742:59;;-1:-1:-1;;;3742:59:40;;3558:15;;3576:226;;-1:-1:-1;;;;;3753:9:40;3742:33;;;;:59;;3784:4;;3791:9;;3742:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3644:48;;-1:-1:-1;;;3644:48:40;;3576:144;;3715:4;;3576:117;;-1:-1:-1;;;;;3655:9:40;3644:33;;;;:48;;3686:4;;3644:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3576:22:40;;;;;;-1:-1:-1;3576:22:40;;;;;;;;:46;;;:67;:117::i;:::-;:138;;:144::i;:::-;:165;;:226::i;:::-;3558:244;-1:-1:-1;3820:11:40;;3816:108;;3851:58;;-1:-1:-1;;;3851:58:40;;3862:9;-1:-1:-1;;;;;3851:38:40;;;;:58;;3890:9;;3901:7;;3851:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3816:108;3505:429;;3964:45;3998:10;3964:29;3986:6;3964:17;;:21;;:29;;;;:::i;:45::-;3944:17;:65;;;-1:-1:-1;;;;;4019:22:40;;;;;;;-1:-1:-1;4019:22:40;;;;;;;;;:29;:38;;;4198:48;-1:-1:-1;;;4198:48:40;;4079:9;4068:33;;;;;;4019:22;;4138:132;;4265:4;;4138:109;;4068:33;;4198;;:48;;4240:4;;4198:48;;:::i;4138:132::-;4068:203;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4295:55:40;;-1:-1:-1;;;;;4295:55:40;;;;-1:-1:-1;4309:9:40;4295:55;;-1:-1:-1;4295:55:40;;;;4331:10;;4343:6;;4295:55;:::i;:::-;;;;;;;;1862:2495;;;;;;;:::o;4567:160::-;-1:-1:-1;;;;;4696:17:40;4666:7;4696:17;;;-1:-1:-1;4696:17:40;;;;;;;;:24;;;4567:160::o;4881:154::-;4970:18;;:::i;:::-;-1:-1:-1;;;;;;5011:17:40;;;;;-1:-1:-1;5011:17:40;;;;;;;;;5004:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4881:154::o;4463:98::-;4545:9;4463:98;:::o;3451:96:19:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:19:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;3108:96::-;3166:7;3192:5;3196:1;3192;:5;:::i;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:259:50:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:297::-;;666:2;654:9;645:7;641:23;637:32;634:2;;;687:6;679;672:22;634:2;724:9;718:16;777:5;770:13;763:21;756:5;753:32;743:2;;804:6;796;789:22;848:190;;960:2;948:9;939:7;935:23;931:32;928:2;;;981:6;973;966:22;928:2;-1:-1:-1;1009:23:50;;918:120;-1:-1:-1;918:120:50:o;1043:194::-;;1166:2;1154:9;1145:7;1141:23;1137:32;1134:2;;;1187:6;1179;1172:22;1134:2;-1:-1:-1;1215:16:50;;1124:113;-1:-1:-1;1124:113:50:o;1242:638::-;;;;;;1420:3;1408:9;1399:7;1395:23;1391:33;1388:2;;;1442:6;1434;1427:22;1388:2;1486:9;1473:23;1536:4;1529:5;1525:16;1518:5;1515:27;1505:2;;1561:6;1553;1546:22;1505:2;1589:5;-1:-1:-1;1641:2:50;1626:18;;1613:32;;-1:-1:-1;1697:2:50;1682:18;;1669:32;1710:35;1669:32;1710:35;:::i;:::-;1378:502;;;;-1:-1:-1;1764:7:50;;1818:2;1803:18;;1790:32;;-1:-1:-1;1869:3:50;1854:19;1841:33;;1378:502;-1:-1:-1;;1378:502:50:o;1885:182::-;2014:19;;;2058:2;2049:12;;2004:63::o;2072:203::-;-1:-1:-1;;;;;2236:32:50;;;;2218:51;;2206:2;2191:18;;2173:102::o;2280:304::-;-1:-1:-1;;;;;2510:15:50;;;2492:34;;2562:15;;2557:2;2542:18;;2535:43;2442:2;2427:18;;2409:175::o;2589:274::-;-1:-1:-1;;;;;2781:32:50;;;;2763:51;;2845:2;2830:18;;2823:34;2751:2;2736:18;;2718:145::o;3050:603::-;;3191:2;3220;3209:9;3202:21;3252:6;3246:13;3295:6;3290:2;3279:9;3275:18;3268:34;3320:4;3333:140;3347:6;3344:1;3341:13;3333:140;;;3442:14;;;3438:23;;3432:30;3408:17;;;3427:2;3404:26;3397:66;3362:10;;3333:140;;;3491:6;3488:1;3485:13;3482:2;;;3561:4;3556:2;3547:6;3536:9;3532:22;3528:31;3521:45;3482:2;-1:-1:-1;3637:2:50;3616:15;-1:-1:-1;;3612:29:50;3597:45;;;;3644:2;3593:54;;3171:482;-1:-1:-1;;;3171:482:50:o;3658:352::-;3860:2;3842:21;;;3899:2;3879:18;;;3872:30;3938;3933:2;3918:18;;3911:58;4001:2;3986:18;;3832:178::o;4015:427::-;4245:2;4227:21;;;4284:1;4264:18;;;4257:29;-1:-1:-1;;;4317:2:50;4302:18;;4295:34;-1:-1:-1;;;;;4403:32:50;;;;4396:4;4381:20;;4374:62;4361:3;4346:19;;4217:225::o;4447:397::-;4649:2;4631:21;;;4688:2;4668:18;;;4661:30;4727:34;4722:2;4707:18;;4700:62;-1:-1:-1;;;4793:2:50;4778:18;;4771:31;4834:3;4819:19;;4621:223::o;4849:347::-;5051:2;5033:21;;;5090:2;5070:18;;;5063:30;5129:25;5124:2;5109:18;;5102:53;5187:2;5172:18;;5023:173::o;5201:353::-;5403:2;5385:21;;;5442:2;5422:18;;;5415:30;5481:31;5476:2;5461:18;;5454:59;5545:2;5530:18;;5375:179::o;5559:350::-;5761:2;5743:21;;;5800:2;5780:18;;;5773:30;5839:28;5834:2;5819:18;;5812:56;5900:2;5885:18;;5733:176::o;5914:338::-;6116:2;6098:21;;;6155:2;6135:18;;;6128:30;-1:-1:-1;;;6189:2:50;6174:18;;6167:44;6243:2;6228:18;;6088:164::o;6257:386::-;6495:13;;6488:21;6481:29;6463:48;;6567:4;6555:17;;;6549:24;6527:20;;;6520:54;6630:4;6618:17;;;6612:24;6590:20;;;6583:54;;;;6451:2;6436:18;;6418:225::o;6830:248::-;7004:25;;;7060:2;7045:18;;7038:34;6992:2;6977:18;;6959:119::o;7083:128::-;;7154:1;7150:6;7147:1;7144:13;7141:2;;;7160:18;;:::i;:::-;-1:-1:-1;7196:9:50;;7131:80::o;7216:217::-;;7282:1;7272:2;;-1:-1:-1;;;7307:31:50;;7361:4;7358:1;7351:15;7389:4;7307:31;7379:15;7272:2;-1:-1:-1;7418:9:50;;7262:171::o;7438:168::-;;7544:1;7540;7536:6;7532:14;7529:1;7526:21;7521:1;7514:9;7507:17;7503:45;7500:2;;;7551:18;;:::i;:::-;-1:-1:-1;7591:9:50;;7490:116::o;7611:125::-;;7679:1;7676;7673:8;7670:2;;;7684:18;;:::i;:::-;-1:-1:-1;7721:9:50;;7660:76::o;7741:380::-;7826:1;7816:12;;7873:1;7863:12;;;7884:2;;7938:4;7930:6;7926:17;7916:27;;7884:2;7991;7983:6;7980:14;7960:18;7957:38;7954:2;;;8037:10;8032:3;8028:20;8025:1;8018:31;8072:4;8069:1;8062:15;8100:4;8097:1;8090:15;7954:2;;7796:325;;;:::o;8126:127::-;8187:10;8182:3;8178:20;8175:1;8168:31;8218:4;8215:1;8208:15;8242:4;8239:1;8232:15;8258:133;-1:-1:-1;;;;;8335:31:50;;8325:42;;8315:2;;8381:1;8378;8371:12;8315:2;8305:86;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"../../interfaces/ICommunity.sol\";\nimport \"../../interfaces/IPool.sol\";\nimport \"./SPStakingFactory.sol\";\n\n/**\n * @dev Template contract of SP/HP staking pool.\n * Delegation only can be updated through update().\n *\n */\ncontract SPStaking is IPool {\n    using SafeMath for uint256;\n\n    struct StakingInfo {\n        // First time when user staking, we need set options like userDebt to zero\n        bool hasDeposited;\n        // User staked amount\n        uint256 amount;\n        // User's foreign account identity\n        bytes32 bindAccount;\n    }\n\n    // fetch address use bound account\n    mapping(bytes32 => address) public accountBindMap;\n\n    // stakingInfo used to save every user's staking information,\n    // including how many they deposited and its external chain account\n    // ( we support crosschain asset staking). With every staking event\n    // happened including deposit and withdraw asset this field should be updated.\n    mapping(address => StakingInfo) stakingInfo;\n\n    address immutable factory;\n    string public name;\n\n    // community that pool belongs to\n    address immutable community;\n    // delegatee account\n    bytes32 public delegatee;\n    // chain id: steem : 1  hive: 2\n    uint8 immutable chainId;\n\n    // Total staked amount\n    uint256 public totalStakedAmount;\n\n    event UpdateStaking(\n        address indexed community,\n        address indexed who,\n        uint256 previousAmount,\n        uint256 newAmount\n    );\n\n    constructor(address _community, string memory _name, uint8 _chainId, bytes32 _delegatee) {\n        factory = msg.sender;\n        community = _community;\n        name = _name;\n        delegatee = _delegatee;\n        chainId = _chainId;\n    }\n\n    function update(\n        uint8 _chainId,\n        bytes32 _delegatee,\n        address depositor,\n        uint256 amount,\n        bytes32 _bindAccount\n    ) external {\n        require(msg.sender == SPStakingFactory(factory).bridge(), \"Only verified bridge can call\");\n        require(chainId == _chainId, \"Wrong chain id\");\n        require(delegatee == _delegatee, \"Wrong delegatee account\");\n        require(accountBindMap[_bindAccount] == address(0) || accountBindMap[_bindAccount] == depositor, \"Bound bsc account dismatch\");\n\n        uint256 prevAmount = stakingInfo[depositor].amount;\n        if (prevAmount == amount) return;\n        if (prevAmount < amount) {\n            // deposit\n            require(ICommunity(community).poolActived(address(this)), 'Can not deposit to a closed pool.');\n        }\n\n        // Add to staking list if account hasn't deposited before\n        if (!stakingInfo[depositor].hasDeposited) {\n            stakingInfo[depositor].hasDeposited = true;\n            stakingInfo[depositor].amount = 0;\n            stakingInfo[depositor].bindAccount = _bindAccount;\n            accountBindMap[_bindAccount] = depositor;\n        } else {\n            require(\n                keccak256(\n                    abi.encodePacked(\n                        stakingInfo[depositor].bindAccount\n                    )\n                ) == keccak256(abi.encodePacked(_bindAccount)),\n                \"Bound steem account dismatch\"\n            );\n        }\n\n        // trigger community update all pool staking info, send factory as fee payer to ignore fee payment.\n        ICommunity(community).updatePools(\"USER\", factory);\n\n        if (stakingInfo[depositor].amount > 0) {\n            uint256 pending = stakingInfo[depositor]\n                .amount\n                .mul(ICommunity(community).getShareAcc(address(this)))\n                .div(1e12)\n                .sub(ICommunity(community).getUserDebt(address(this), depositor));\n            if (pending > 0) {\n                ICommunity(community).appendUserReward(depositor, pending);\n            }\n        }\n\n        totalStakedAmount = totalStakedAmount.add(amount).sub(prevAmount);\n        stakingInfo[depositor].amount = amount;\n\n        ICommunity(community).setUserDebt(\n            depositor,\n            stakingInfo[depositor]\n            .amount\n            .mul(ICommunity(community).getShareAcc(address(this)))\n            .div(1e12));\n        \n        emit UpdateStaking(community, depositor, prevAmount, amount);\n    }\n\n    function getFactory() external view override returns (address) {\n        return factory;\n    }\n\n    function getCommunity() external view override returns (address) {\n        return community;\n    }\n\n    function getUserStakedAmount(address user)\n        external\n        view\n        override returns (uint256)\n    {\n        return stakingInfo[user].amount;\n    }\n\n    function getTotalStakedAmount()\n        external\n        view\n        override returns (uint256)\n    {\n        return totalStakedAmount;\n    }\n\n    function getUserDepositInfo(address user)\n        external\n        view\n        returns (StakingInfo memory)\n    {\n        return stakingInfo[user];\n    }\n}\n",
  "sourcePath": "/Users/necklace/work/nutbox/nutbox-contract/contracts/dapps/sp-staking/SPStaking.sol",
  "ast": {
    "absolutePath": "project:/contracts/dapps/sp-staking/SPStaking.sol",
    "exportedSymbols": {
      "AccessControl": [
        308
      ],
      "AccessControlEnumerable": [
        433
      ],
      "BytesLib": [
        13487
      ],
      "Community": [
        5075
      ],
      "CommunityFactory": [
        5333
      ],
      "Context": [
        1837
      ],
      "ERC165": [
        2064
      ],
      "ERC20": [
        1477
      ],
      "ERC20Burnable": [
        1617
      ],
      "ERC20Helper": [
        5540
      ],
      "ERC20Pausable": [
        1654
      ],
      "ERC20PresetMinterPauser": [
        1815
      ],
      "EnumerableSet": [
        2987
      ],
      "IAccessControl": [
        506
      ],
      "IAccessControlEnumerable": [
        531
      ],
      "ICalculator": [
        12950
      ],
      "ICommittee": [
        13021
      ],
      "ICommunity": [
        13075
      ],
      "ICommunityTokenFactory": [
        13087
      ],
      "IERC165": [
        2076
      ],
      "IERC20": [
        1555
      ],
      "IERC20Metadata": [
        1679
      ],
      "IGauge": [
        13111
      ],
      "IPool": [
        13138
      ],
      "IPoolFactory": [
        13154
      ],
      "MintableERC20": [
        10371
      ],
      "Ownable": [
        636
      ],
      "Pausable": [
        728
      ],
      "SPStaking": [
        12752
      ],
      "SPStakingFactory": [
        12911
      ],
      "SafeMath": [
        2388
      ],
      "Strings": [
        2040
      ]
    },
    "id": 12753,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12361,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:40"
      },
      {
        "id": 12362,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:40"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 12363,
        "nodeType": "ImportDirective",
        "scope": 12753,
        "sourceUnit": 2389,
        "src": "91:57:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ICommunity.sol",
        "file": "../../interfaces/ICommunity.sol",
        "id": 12364,
        "nodeType": "ImportDirective",
        "scope": 12753,
        "sourceUnit": 13076,
        "src": "149:41:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPool.sol",
        "file": "../../interfaces/IPool.sol",
        "id": 12365,
        "nodeType": "ImportDirective",
        "scope": 12753,
        "sourceUnit": 13139,
        "src": "191:36:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/dapps/sp-staking/SPStakingFactory.sol",
        "file": "./SPStakingFactory.sol",
        "id": 12366,
        "nodeType": "ImportDirective",
        "scope": 12753,
        "sourceUnit": 12912,
        "src": "228:32:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12368,
              "name": "IPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13138,
              "src": "396:5:40"
            },
            "id": 12369,
            "nodeType": "InheritanceSpecifier",
            "src": "396:5:40"
          }
        ],
        "contractDependencies": [
          13138
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 12367,
          "nodeType": "StructuredDocumentation",
          "src": "262:111:40",
          "text": " @dev Template contract of SP/HP staking pool.\n Delegation only can be updated through update()."
        },
        "fullyImplemented": true,
        "id": 12752,
        "linearizedBaseContracts": [
          12752,
          13138
        ],
        "name": "SPStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12372,
            "libraryName": {
              "id": 12370,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2388,
              "src": "414:8:40"
            },
            "nodeType": "UsingForDirective",
            "src": "408:27:40",
            "typeName": {
              "id": 12371,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "427:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "SPStaking.StakingInfo",
            "id": 12379,
            "members": [
              {
                "constant": false,
                "id": 12374,
                "mutability": "mutable",
                "name": "hasDeposited",
                "nodeType": "VariableDeclaration",
                "scope": 12379,
                "src": "553:17:40",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 12373,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "553:4:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12376,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 12379,
                "src": "610:14:40",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12375,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "610:7:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12378,
                "mutability": "mutable",
                "name": "bindAccount",
                "nodeType": "VariableDeclaration",
                "scope": 12379,
                "src": "677:19:40",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 12377,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "677:7:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nodeType": "StructDefinition",
            "scope": 12752,
            "src": "441:262:40",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "630949c7",
            "id": 12383,
            "mutability": "mutable",
            "name": "accountBindMap",
            "nodeType": "VariableDeclaration",
            "scope": 12752,
            "src": "748:49:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 12382,
              "keyType": {
                "id": 12380,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "756:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "748:27:40",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 12381,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "767:7:40",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12388,
            "mutability": "mutable",
            "name": "stakingInfo",
            "nodeType": "VariableDeclaration",
            "scope": 12752,
            "src": "1097:43:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
              "typeString": "mapping(address => struct SPStaking.StakingInfo)"
            },
            "typeName": {
              "id": 12387,
              "keyType": {
                "id": 12384,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1105:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1097:31:40",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                "typeString": "mapping(address => struct SPStaking.StakingInfo)"
              },
              "valueType": {
                "id": 12386,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 12385,
                  "name": "StakingInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12379,
                  "src": "1116:11:40"
                },
                "referencedDeclaration": 12379,
                "src": "1116:11:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$12379_storage_ptr",
                  "typeString": "struct SPStaking.StakingInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12390,
            "mutability": "immutable",
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "scope": 12752,
            "src": "1147:25:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12389,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1147:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 12392,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 12752,
            "src": "1178:18:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 12391,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1178:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12394,
            "mutability": "immutable",
            "name": "community",
            "nodeType": "VariableDeclaration",
            "scope": 12752,
            "src": "1241:27:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12393,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1241:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1e31d053",
            "id": 12396,
            "mutability": "mutable",
            "name": "delegatee",
            "nodeType": "VariableDeclaration",
            "scope": 12752,
            "src": "1299:24:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 12395,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1299:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12398,
            "mutability": "immutable",
            "name": "chainId",
            "nodeType": "VariableDeclaration",
            "scope": 12752,
            "src": "1365:23:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 12397,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1365:5:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "567e98f9",
            "id": 12400,
            "mutability": "mutable",
            "name": "totalStakedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 12752,
            "src": "1422:32:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12399,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1422:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 12410,
            "name": "UpdateStaking",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12402,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 12410,
                  "src": "1490:25:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12404,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 12410,
                  "src": "1525:19:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12410,
                  "src": "1554:22:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12408,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12410,
                  "src": "1586:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1586:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:129:40"
            },
            "src": "1461:149:40"
          },
          {
            "body": {
              "id": 12442,
              "nodeType": "Block",
              "src": "1705:151:40",
              "statements": [
                {
                  "expression": {
                    "id": 12424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12421,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12390,
                      "src": "1715:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 12422,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1725:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1725:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1715:20:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12425,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:20:40"
                },
                {
                  "expression": {
                    "id": 12428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12426,
                      "name": "community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12394,
                      "src": "1745:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12427,
                      "name": "_community",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12412,
                      "src": "1757:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1745:22:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12429,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:22:40"
                },
                {
                  "expression": {
                    "id": 12432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12430,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12392,
                      "src": "1777:4:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12431,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12414,
                      "src": "1784:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1777:12:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 12433,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:12:40"
                },
                {
                  "expression": {
                    "id": 12436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12434,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12396,
                      "src": "1799:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12435,
                      "name": "_delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12418,
                      "src": "1811:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1799:22:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 12437,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:22:40"
                },
                {
                  "expression": {
                    "id": 12440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12438,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12398,
                      "src": "1831:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12439,
                      "name": "_chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12416,
                      "src": "1841:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1831:18:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 12441,
                  "nodeType": "ExpressionStatement",
                  "src": "1831:18:40"
                }
              ]
            },
            "id": 12443,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12412,
                  "mutability": "mutable",
                  "name": "_community",
                  "nodeType": "VariableDeclaration",
                  "scope": 12443,
                  "src": "1628:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12414,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 12443,
                  "src": "1648:19:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12413,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12416,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12443,
                  "src": "1669:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12415,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12418,
                  "mutability": "mutable",
                  "name": "_delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 12443,
                  "src": "1685:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12417,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1627:77:40"
            },
            "returnParameters": {
              "id": 12420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1705:0:40"
            },
            "scope": 12752,
            "src": "1616:240:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12696,
              "nodeType": "Block",
              "src": "2026:2331:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 12457,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2044:3:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2044:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 12460,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12390,
                                  "src": "2075:7:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 12459,
                                "name": "SPStakingFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12911,
                                "src": "2058:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SPStakingFactory_$12911_$",
                                  "typeString": "type(contract SPStakingFactory)"
                                }
                              },
                              "id": 12461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2058:25:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SPStakingFactory_$12911",
                                "typeString": "contract SPStakingFactory"
                              }
                            },
                            "id": 12462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "bridge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12770,
                            "src": "2058:32:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 12463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2058:34:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2044:48:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207665726966696564206272696467652063616e2063616c6c",
                        "id": 12465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2094:31:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d",
                          "typeString": "literal_string \"Only verified bridge can call\""
                        },
                        "value": "Only verified bridge can call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74cd63356c8944eb97810a3355183374312b09dfdacb38adeee84d0b2cdedf8d",
                          "typeString": "literal_string \"Only verified bridge can call\""
                        }
                      ],
                      "id": 12456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2036:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2036:90:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12467,
                  "nodeType": "ExpressionStatement",
                  "src": "2036:90:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 12471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12469,
                          "name": "chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12398,
                          "src": "2144:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 12470,
                          "name": "_chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12445,
                          "src": "2155:8:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2144:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720636861696e206964",
                        "id": 12472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30",
                          "typeString": "literal_string \"Wrong chain id\""
                        },
                        "value": "Wrong chain id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6eaadf574e75b3f115a67246929f4233b206bd115f4b280ccec55a714ed9b30",
                          "typeString": "literal_string \"Wrong chain id\""
                        }
                      ],
                      "id": 12468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2136:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2136:46:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12474,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:46:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 12478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12476,
                          "name": "delegatee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12396,
                          "src": "2200:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 12477,
                          "name": "_delegatee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12447,
                          "src": "2213:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2200:23:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672064656c656761746565206163636f756e74",
                        "id": 12479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2225:25:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4",
                          "typeString": "literal_string \"Wrong delegatee account\""
                        },
                        "value": "Wrong delegatee account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d78d775b381d7b083eeffb74b8311e06bc24360ab03d9f734e7821503ced4d4",
                          "typeString": "literal_string \"Wrong delegatee account\""
                        }
                      ],
                      "id": 12475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2192:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2192:59:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12481,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:59:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 12496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 12490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 12483,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12383,
                              "src": "2269:14:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 12485,
                            "indexExpression": {
                              "id": 12484,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12453,
                              "src": "2284:12:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2269:28:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 12488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2309:1:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 12487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2301:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12486,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2301:7:40",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2301:10:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2269:42:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 12495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 12491,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12383,
                              "src": "2315:14:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 12493,
                            "indexExpression": {
                              "id": 12492,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12453,
                              "src": "2330:12:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2315:28:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 12494,
                            "name": "depositor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12449,
                            "src": "2347:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2315:41:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2269:87:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f756e6420627363206163636f756e74206469736d61746368",
                        "id": 12497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2358:28:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1",
                          "typeString": "literal_string \"Bound bsc account dismatch\""
                        },
                        "value": "Bound bsc account dismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9afd3ad87f01145b456183868999f2455248c6f4e795ad7ed67364d47db8b9f1",
                          "typeString": "literal_string \"Bound bsc account dismatch\""
                        }
                      ],
                      "id": 12482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2261:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2261:126:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12499,
                  "nodeType": "ExpressionStatement",
                  "src": "2261:126:40"
                },
                {
                  "assignments": [
                    12501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12501,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 12696,
                      "src": "2398:18:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12500,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2398:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12506,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 12502,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12388,
                        "src": "2419:11:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                          "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 12504,
                      "indexExpression": {
                        "id": 12503,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12449,
                        "src": "2431:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2419:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                        "typeString": "struct SPStaking.StakingInfo storage ref"
                      }
                    },
                    "id": 12505,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12376,
                    "src": "2419:29:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2398:50:40"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12507,
                      "name": "prevAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12501,
                      "src": "2462:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 12508,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12451,
                      "src": "2476:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2462:20:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12511,
                  "nodeType": "IfStatement",
                  "src": "2458:33:40",
                  "trueBody": {
                    "functionReturnParameters": 12455,
                    "id": 12510,
                    "nodeType": "Return",
                    "src": "2484:7:40"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12512,
                      "name": "prevAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12501,
                      "src": "2504:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 12513,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12451,
                      "src": "2517:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2504:19:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12529,
                  "nodeType": "IfStatement",
                  "src": "2500:167:40",
                  "trueBody": {
                    "id": 12528,
                    "nodeType": "Block",
                    "src": "2525:142:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 12522,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "2612:4:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SPStaking_$12752",
                                        "typeString": "contract SPStaking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SPStaking_$12752",
                                        "typeString": "contract SPStaking"
                                      }
                                    ],
                                    "id": 12521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2604:7:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 12520,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2604:7:40",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 12523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2604:13:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 12517,
                                      "name": "community",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12394,
                                      "src": "2581:9:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 12516,
                                    "name": "ICommunity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13075,
                                    "src": "2570:10:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                      "typeString": "type(contract ICommunity)"
                                    }
                                  },
                                  "id": 12518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2570:21:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommunity_$13075",
                                    "typeString": "contract ICommunity"
                                  }
                                },
                                "id": 12519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "poolActived",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13032,
                                "src": "2570:33:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 12524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2570:48:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c2e",
                              "id": 12525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2620:35:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                                "typeString": "literal_string \"Can not deposit to a closed pool.\""
                              },
                              "value": "Can not deposit to a closed pool."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_36fbfc77e3a99bb5c4b441b38833144e059aa3d3e5e03d8f05cc44f7a9f6e858",
                                "typeString": "literal_string \"Can not deposit to a closed pool.\""
                              }
                            ],
                            "id": 12515,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2562:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2562:94:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12527,
                        "nodeType": "ExpressionStatement",
                        "src": "2562:94:40"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 12534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2747:36:40",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 12530,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12388,
                          "src": "2748:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                            "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 12532,
                        "indexExpression": {
                          "id": 12531,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12449,
                          "src": "2760:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2748:22:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                          "typeString": "struct SPStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 12533,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hasDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12374,
                      "src": "2748:35:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12583,
                    "nodeType": "Block",
                    "src": "3022:304:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 12579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 12567,
                                            "name": "stakingInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12388,
                                            "src": "3134:11:40",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                                              "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                                            }
                                          },
                                          "id": 12569,
                                          "indexExpression": {
                                            "id": 12568,
                                            "name": "depositor",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12449,
                                            "src": "3146:9:40",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3134:22:40",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                                            "typeString": "struct SPStaking.StakingInfo storage ref"
                                          }
                                        },
                                        "id": 12570,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "bindAccount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 12378,
                                        "src": "3134:34:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 12565,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "3092:3:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 12566,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "3092:16:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 12571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3092:98:40",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 12564,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "3061:9:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 12572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3061:147:40",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12576,
                                        "name": "_bindAccount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12453,
                                        "src": "3239:12:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 12574,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "3222:3:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 12575,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "3222:16:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 12577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3222:30:40",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 12573,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "3212:9:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 12578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3212:41:40",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "3061:192:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426f756e6420737465656d206163636f756e74206469736d61746368",
                              "id": 12580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3271:30:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_069c0c3134db0caa858cc3d322a644816803d4c317a15d4661abe9bc23f628b5",
                                "typeString": "literal_string \"Bound steem account dismatch\""
                              },
                              "value": "Bound steem account dismatch"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_069c0c3134db0caa858cc3d322a644816803d4c317a15d4661abe9bc23f628b5",
                                "typeString": "literal_string \"Bound steem account dismatch\""
                              }
                            ],
                            "id": 12563,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3036:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3036:279:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12582,
                        "nodeType": "ExpressionStatement",
                        "src": "3036:279:40"
                      }
                    ]
                  },
                  "id": 12584,
                  "nodeType": "IfStatement",
                  "src": "2743:583:40",
                  "trueBody": {
                    "id": 12562,
                    "nodeType": "Block",
                    "src": "2785:231:40",
                    "statements": [
                      {
                        "expression": {
                          "id": 12540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 12535,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12388,
                                "src": "2799:11:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                                  "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 12537,
                              "indexExpression": {
                                "id": 12536,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12449,
                                "src": "2811:9:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2799:22:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                                "typeString": "struct SPStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 12538,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "hasDeposited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12374,
                            "src": "2799:35:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 12539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2837:4:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2799:42:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12541,
                        "nodeType": "ExpressionStatement",
                        "src": "2799:42:40"
                      },
                      {
                        "expression": {
                          "id": 12547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 12542,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12388,
                                "src": "2855:11:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                                  "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 12544,
                              "indexExpression": {
                                "id": 12543,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12449,
                                "src": "2867:9:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2855:22:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                                "typeString": "struct SPStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 12545,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12376,
                            "src": "2855:29:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 12546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2887:1:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2855:33:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12548,
                        "nodeType": "ExpressionStatement",
                        "src": "2855:33:40"
                      },
                      {
                        "expression": {
                          "id": 12554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 12549,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12388,
                                "src": "2902:11:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                                  "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 12551,
                              "indexExpression": {
                                "id": 12550,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12449,
                                "src": "2914:9:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2902:22:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                                "typeString": "struct SPStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 12552,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bindAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12378,
                            "src": "2902:34:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 12553,
                            "name": "_bindAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12453,
                            "src": "2939:12:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2902:49:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 12555,
                        "nodeType": "ExpressionStatement",
                        "src": "2902:49:40"
                      },
                      {
                        "expression": {
                          "id": 12560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 12556,
                              "name": "accountBindMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12383,
                              "src": "2965:14:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 12558,
                            "indexExpression": {
                              "id": 12557,
                              "name": "_bindAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12453,
                              "src": "2980:12:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2965:28:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 12559,
                            "name": "depositor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12449,
                            "src": "2996:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2965:40:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 12561,
                        "nodeType": "ExpressionStatement",
                        "src": "2965:40:40"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "55534552",
                        "id": 12589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3478:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        "value": "USER"
                      },
                      {
                        "id": 12590,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12390,
                        "src": "3486:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2db9fd3d099848027c2383d0a083396f6c41510d7acfd92adc99b6cffcf31e96",
                          "typeString": "literal_string \"USER\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12586,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12394,
                            "src": "3455:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12585,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13075,
                          "src": "3444:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 12587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3444:21:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$13075",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 12588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13074,
                      "src": "3444:33:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) external"
                      }
                    },
                    "id": 12591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3444:50:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12592,
                  "nodeType": "ExpressionStatement",
                  "src": "3444:50:40"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 12593,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12388,
                          "src": "3509:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                            "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 12595,
                        "indexExpression": {
                          "id": 12594,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12449,
                          "src": "3521:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3509:22:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                          "typeString": "struct SPStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 12596,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12376,
                      "src": "3509:29:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3541:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3509:33:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12646,
                  "nodeType": "IfStatement",
                  "src": "3505:429:40",
                  "trueBody": {
                    "id": 12645,
                    "nodeType": "Block",
                    "src": "3544:390:40",
                    "statements": [
                      {
                        "assignments": [
                          12600
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12600,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "scope": 12645,
                            "src": "3558:15:40",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 12599,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3558:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 12631,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 12626,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "3784:4:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SPStaking_$12752",
                                        "typeString": "contract SPStaking"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SPStaking_$12752",
                                        "typeString": "contract SPStaking"
                                      }
                                    ],
                                    "id": 12625,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3776:7:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 12624,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3776:7:40",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 12627,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3776:13:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 12628,
                                  "name": "depositor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12449,
                                  "src": "3791:9:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 12621,
                                      "name": "community",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12394,
                                      "src": "3753:9:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 12620,
                                    "name": "ICommunity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13075,
                                    "src": "3742:10:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                      "typeString": "type(contract ICommunity)"
                                    }
                                  },
                                  "id": 12622,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3742:21:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommunity_$13075",
                                    "typeString": "contract ICommunity"
                                  }
                                },
                                "id": 12623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getUserDebt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13053,
                                "src": "3742:33:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 12629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3742:59:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 12617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3715:4:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 12612,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967268,
                                              "src": "3686:4:40",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SPStaking_$12752",
                                                "typeString": "contract SPStaking"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_SPStaking_$12752",
                                                "typeString": "contract SPStaking"
                                              }
                                            ],
                                            "id": 12611,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3678:7:40",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 12610,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3678:7:40",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 12613,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3678:13:40",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 12607,
                                              "name": "community",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12394,
                                              "src": "3655:9:40",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 12606,
                                            "name": "ICommunity",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13075,
                                            "src": "3644:10:40",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                              "typeString": "type(contract ICommunity)"
                                            }
                                          },
                                          "id": 12608,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3644:21:40",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ICommunity_$13075",
                                            "typeString": "contract ICommunity"
                                          }
                                        },
                                        "id": 12609,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getShareAcc",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 13039,
                                        "src": "3644:33:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 12614,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3644:48:40",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 12601,
                                          "name": "stakingInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 12388,
                                          "src": "3576:11:40",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                                            "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                                          }
                                        },
                                        "id": 12603,
                                        "indexExpression": {
                                          "id": 12602,
                                          "name": "depositor",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 12449,
                                          "src": "3588:9:40",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3576:22:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                                          "typeString": "struct SPStaking.StakingInfo storage ref"
                                        }
                                      },
                                      "id": 12604,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12376,
                                      "src": "3576:46:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 12605,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2282,
                                    "src": "3576:67:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 12615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3576:117:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 12616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2297,
                                "src": "3576:138:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 12618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3576:144:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 12619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2267,
                            "src": "3576:165:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 12630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3576:226:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3558:244:40"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12632,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12600,
                            "src": "3820:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 12633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3830:1:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3820:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12644,
                        "nodeType": "IfStatement",
                        "src": "3816:108:40",
                        "trueBody": {
                          "id": 12643,
                          "nodeType": "Block",
                          "src": "3833:91:40",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 12639,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12449,
                                    "src": "3890:9:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 12640,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12600,
                                    "src": "3901:7:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 12636,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12394,
                                        "src": "3862:9:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 12635,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13075,
                                      "src": "3851:10:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 12637,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3851:21:40",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$13075",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 12638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "appendUserReward",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13060,
                                  "src": "3851:38:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 12641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3851:58:40",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12642,
                              "nodeType": "ExpressionStatement",
                              "src": "3851:58:40"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 12655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12647,
                      "name": "totalStakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12400,
                      "src": "3944:17:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12653,
                          "name": "prevAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12501,
                          "src": "3998:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 12650,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12451,
                              "src": "3986:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 12648,
                              "name": "totalStakedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12400,
                              "src": "3964:17:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 12649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2252,
                            "src": "3964:21:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 12651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3964:29:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2267,
                        "src": "3964:33:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 12654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3964:45:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3944:65:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12656,
                  "nodeType": "ExpressionStatement",
                  "src": "3944:65:40"
                },
                {
                  "expression": {
                    "id": 12662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 12657,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12388,
                          "src": "4019:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                            "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 12659,
                        "indexExpression": {
                          "id": 12658,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12449,
                          "src": "4031:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4019:22:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                          "typeString": "struct SPStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 12660,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12376,
                      "src": "4019:29:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12661,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12451,
                      "src": "4051:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4019:38:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12663,
                  "nodeType": "ExpressionStatement",
                  "src": "4019:38:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12668,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12449,
                        "src": "4115:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 12685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4265:4:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12680,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "4240:4:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SPStaking_$12752",
                                          "typeString": "contract SPStaking"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_SPStaking_$12752",
                                          "typeString": "contract SPStaking"
                                        }
                                      ],
                                      "id": 12679,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4232:7:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 12678,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4232:7:40",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12681,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4232:13:40",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 12675,
                                        "name": "community",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12394,
                                        "src": "4209:9:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 12674,
                                      "name": "ICommunity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13075,
                                      "src": "4198:10:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                                        "typeString": "type(contract ICommunity)"
                                      }
                                    },
                                    "id": 12676,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4198:21:40",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommunity_$13075",
                                      "typeString": "contract ICommunity"
                                    }
                                  },
                                  "id": 12677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getShareAcc",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13039,
                                  "src": "4198:33:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 12682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4198:48:40",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 12669,
                                    "name": "stakingInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12388,
                                    "src": "4138:11:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                                      "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 12671,
                                  "indexExpression": {
                                    "id": 12670,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12449,
                                    "src": "4150:9:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4138:22:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                                    "typeString": "struct SPStaking.StakingInfo storage ref"
                                  }
                                },
                                "id": 12672,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12376,
                                "src": "4138:42:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 12673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2282,
                              "src": "4138:59:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 12683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4138:109:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 12684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2297,
                          "src": "4138:126:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 12686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4138:132:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12665,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12394,
                            "src": "4079:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12664,
                          "name": "ICommunity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13075,
                          "src": "4068:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommunity_$13075_$",
                            "typeString": "type(contract ICommunity)"
                          }
                        },
                        "id": 12666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4068:21:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommunity_$13075",
                          "typeString": "contract ICommunity"
                        }
                      },
                      "id": 12667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUserDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13067,
                      "src": "4068:33:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 12687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4068:203:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12688,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:203:40"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12690,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12394,
                        "src": "4309:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12691,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12449,
                        "src": "4320:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12692,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12501,
                        "src": "4331:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12693,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12451,
                        "src": "4343:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12689,
                      "name": "UpdateStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12410,
                      "src": "4295:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 12694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4295:55:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12695,
                  "nodeType": "EmitStatement",
                  "src": "4290:60:40"
                }
              ]
            },
            "functionSelector": "91903470",
            "id": 12697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12445,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12697,
                  "src": "1887:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12444,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1887:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12447,
                  "mutability": "mutable",
                  "name": "_delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 12697,
                  "src": "1911:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12446,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1911:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12449,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nodeType": "VariableDeclaration",
                  "scope": 12697,
                  "src": "1939:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12451,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12697,
                  "src": "1966:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1966:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12453,
                  "mutability": "mutable",
                  "name": "_bindAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12697,
                  "src": "1990:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12452,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1877:139:40"
            },
            "returnParameters": {
              "id": 12455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2026:0:40"
            },
            "scope": 12752,
            "src": "1862:2495:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13120
            ],
            "body": {
              "id": 12705,
              "nodeType": "Block",
              "src": "4426:31:40",
              "statements": [
                {
                  "expression": {
                    "id": 12703,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12390,
                    "src": "4443:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12702,
                  "id": 12704,
                  "nodeType": "Return",
                  "src": "4436:14:40"
                }
              ]
            },
            "functionSelector": "88cc58e4",
            "id": 12706,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFactory",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12699,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4399:8:40"
            },
            "parameters": {
              "id": 12698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4382:2:40"
            },
            "returnParameters": {
              "id": 12702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12701,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12706,
                  "src": "4417:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4417:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4416:9:40"
            },
            "scope": 12752,
            "src": "4363:94:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13125
            ],
            "body": {
              "id": 12714,
              "nodeType": "Block",
              "src": "4528:33:40",
              "statements": [
                {
                  "expression": {
                    "id": 12712,
                    "name": "community",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12394,
                    "src": "4545:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12711,
                  "id": 12713,
                  "nodeType": "Return",
                  "src": "4538:16:40"
                }
              ]
            },
            "functionSelector": "c51db6b2",
            "id": 12715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommunity",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12708,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4501:8:40"
            },
            "parameters": {
              "id": 12707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4484:2:40"
            },
            "returnParameters": {
              "id": 12711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12710,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12715,
                  "src": "4519:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4519:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4518:9:40"
            },
            "scope": 12752,
            "src": "4463:98:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13132
            ],
            "body": {
              "id": 12728,
              "nodeType": "Block",
              "src": "4679:48:40",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 12723,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12388,
                        "src": "4696:11:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                          "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 12725,
                      "indexExpression": {
                        "id": 12724,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12717,
                        "src": "4708:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4696:17:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                        "typeString": "struct SPStaking.StakingInfo storage ref"
                      }
                    },
                    "id": 12726,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12376,
                    "src": "4696:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12722,
                  "id": 12727,
                  "nodeType": "Return",
                  "src": "4689:31:40"
                }
              ]
            },
            "functionSelector": "94465b21",
            "id": 12729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12719,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4648:8:40"
            },
            "parameters": {
              "id": 12718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12717,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 12729,
                  "src": "4596:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4596:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4595:14:40"
            },
            "returnParameters": {
              "id": 12722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12721,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12729,
                  "src": "4666:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4666:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4665:9:40"
            },
            "scope": 12752,
            "src": "4567:160:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13137
            ],
            "body": {
              "id": 12737,
              "nodeType": "Block",
              "src": "4834:41:40",
              "statements": [
                {
                  "expression": {
                    "id": 12735,
                    "name": "totalStakedAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12400,
                    "src": "4851:17:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12734,
                  "id": 12736,
                  "nodeType": "Return",
                  "src": "4844:24:40"
                }
              ]
            },
            "functionSelector": "38adb6f0",
            "id": 12738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12731,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4803:8:40"
            },
            "parameters": {
              "id": 12730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4762:2:40"
            },
            "returnParameters": {
              "id": 12734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12733,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12738,
                  "src": "4821:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4821:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4820:9:40"
            },
            "scope": 12752,
            "src": "4733:142:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12750,
              "nodeType": "Block",
              "src": "4994:41:40",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 12746,
                      "name": "stakingInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12388,
                      "src": "5011:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingInfo_$12379_storage_$",
                        "typeString": "mapping(address => struct SPStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 12748,
                    "indexExpression": {
                      "id": 12747,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12740,
                      "src": "5023:4:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5011:17:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$12379_storage",
                      "typeString": "struct SPStaking.StakingInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 12745,
                  "id": 12749,
                  "nodeType": "Return",
                  "src": "5004:24:40"
                }
              ]
            },
            "functionSelector": "b3a7834d",
            "id": 12751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserDepositInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12740,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 12751,
                  "src": "4909:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4909:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4908:14:40"
            },
            "returnParameters": {
              "id": 12745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12744,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12751,
                  "src": "4970:18:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$12379_memory_ptr",
                    "typeString": "struct SPStaking.StakingInfo"
                  },
                  "typeName": {
                    "id": 12743,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12742,
                      "name": "StakingInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12379,
                      "src": "4970:11:40"
                    },
                    "referencedDeclaration": 12379,
                    "src": "4970:11:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$12379_storage_ptr",
                      "typeString": "struct SPStaking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4969:20:40"
            },
            "scope": 12752,
            "src": "4881:154:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 12753,
        "src": "374:4663:40"
      }
    ],
    "src": "33:5005:40"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-27T12:17:35.211Z",
  "devdoc": {
    "details": "Template contract of SP/HP staking pool. Delegation only can be updated through update().",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}