{
  "contractName": "NUTToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DisableTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EnableTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "RemoveWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "SetWhiteList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferOpened",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DisableTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EnableTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"RemoveWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"SetWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferOpened\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/NUTToken.sol\":\"NUTToken\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/NUTToken.sol\":{\"keccak256\":\"0xe77fcf7bf466bbbbc969e36ff5deebca50b9a27202b9c486b75d872aec305050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368f1ded91f20f8d5c445e8bfac421aacc35107068ea8a848abe8ab0720c87ae\",\"dweb:/ipfs/QmQgPZQbsE6bLZKBSPiu9kG8qtfoHCeXULUsTPnkqsRsx4\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x1304796e9cdc64294735b4222849a240363b2aff374bb58b7c728f8dc0f4aa75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87398b4ba8f7c7e6613a5967e5407a5af6807e753d326d5e3b8c29697d33e36\",\"dweb:/ipfs/QmWGzaF9UWB5rNW1h9kvkJaWSf95WkQZ7RVR3bJ24oVgwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200257d3803806200257d83398101604081905262000034916200055d565b83836200004a620000446200011f565b62000123565b81516200005f9060069060208501906200040c565b508051620000759060079060208401906200040c565b5050506001600160a01b038116620000c4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bb90620005ee565b60405180910390fd5b620000da6000620000d46200011f565b62000173565b620001097f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620000d46200011f565b62000115818362000183565b5050505062000728565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200017f828262000272565b5050565b6001600160a01b038216620001c6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bb9062000625565b620001d460008383620002b5565b8060056000828254620001e8919062000665565b90915550506001600160a01b038216600090815260036020526040812080548392906200021790849062000665565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200025c9085906200065c565b60405180910390a36200017f60008383620002b0565b620002898282620002cd60201b62000c0f1760201c565b6000828152600260209081526040909120620002b091839062000c976200035a821b17901c565b505050565b620002b0838383620002b060201b620006aa1760201c565b620002d982826200037a565b6200017f5760008281526001602081815260408084206001600160a01b0386168552909152909120805460ff19169091179055620003166200011f565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000371836001600160a01b038416620003a5565b90505b92915050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000620003b38383620003f4565b620003eb5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000374565b50600062000374565b60009081526001919091016020526040902054151590565b8280546200041a90620006a3565b90600052602060002090601f0160209004810192826200043e576000855562000489565b82601f106200045957805160ff191683800117855562000489565b8280016001018555821562000489579182015b82811115620004895782518255916020019190600101906200046c565b50620004979291506200049b565b5090565b5b808211156200049757600081556001016200049c565b600082601f830112620004c3578081fd5b81516001600160401b0380821115620004e057620004e0620006f9565b6040516020601f8401601f1916820181018381118382101715620005085762000508620006f9565b60405283825285840181018710156200051f578485fd5b8492505b8383101562000542578583018101518284018201529182019162000523565b838311156200055357848185840101525b5095945050505050565b6000806000806080858703121562000573578384fd5b84516001600160401b03808211156200058a578586fd5b6200059888838901620004b2565b95506020870151915080821115620005ae578485fd5b50620005bd87828801620004b2565b60408701516060880151919550935090506001600160a01b0381168114620005e3578182fd5b939692955090935050565b60208082526019908201527f5265636569766520616464726573732063616e74206265203000000000000000604082015260600190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200069e577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b600281046001821680620006b857607f821691505b60208210811415620006f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e4580620007386000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c806370a082311161011a578063a457c2d7116100ad578063d53913931161007c578063d5391393146103fd578063d547741f14610405578063dd62ed3e14610418578063f1b50c1d1461042b578063f2fde38b14610433576101fb565b8063a457c2d7146103bc578063a9059cbb146103cf578063b187984f146103e2578063ca15c873146103ea576101fb565b80639010d07c116100e95780639010d07c1461038657806391d148541461039957806395d89b41146103ac578063a217fddf146103b4576101fb565b806370a0823114610343578063715018a61461035657806379cc67901461035e5780638da5cb5b14610371576101fb565b8063313ce5671161019257806339e899ee1161016157806339e899ee146103025780633a1302c31461031557806340c10f191461031d57806342966c6814610330576101fb565b8063313ce567146102b457806336568abe146102c9578063372c12b1146102dc57806339509351146102ef576101fb565b80632042e5c2116101ce5780632042e5c21461026657806323b872dd1461027b578063248a9ca31461028e5780632f2ff15d146102a1576101fb565b806301ffc9a71461020057806306fdde0314610229578063095ea7b31461023e57806318160ddd14610251575b600080fd5b61021361020e36600461175f565b610446565b6040516102209190611810565b60405180910390f35b610231610473565b6040516102209190611824565b61021361024c3660046116db565b610505565b610259610523565b604051610220919061181b565b610279610274366004611654565b610529565b005b6102136102893660046116a0565b6105e0565b61025961029c366004611704565b610670565b6102796102af36600461171c565b610686565b6102bc6106af565b6040516102209190611d1f565b6102796102d736600461171c565b6106b4565b6102136102ea366004611654565b6106fa565b6102136102fd3660046116db565b61070f565b610279610310366004611654565b610763565b610213610814565b61027961032b3660046116db565b61081d565b61027961033e366004611704565b61086f565b610259610351366004611654565b610883565b61027961089e565b61027961036c3660046116db565b6108e9565b610379610937565b60405161022091906117fc565b61037961039436600461173e565b610946565b6102136103a736600461171c565b610965565b610231610990565b61025961099f565b6102136103ca3660046116db565b6109a4565b6102136103dd3660046116db565b610a1d565b610279610a31565b6102596103f8366004611704565b610aa5565b610259610abc565b61027961041336600461171c565b610ae0565b61025961042636600461166e565b610aff565b610279610b2a565b610279610441366004611654565b610ba1565b60006001600160e01b03198216635a05180f60e01b148061046b575061046b82610cac565b90505b919050565b60606006805461048290611dbe565b80601f01602080910402602001604051908101604052809291908181526020018280546104ae90611dbe565b80156104fb5780601f106104d0576101008083540402835291602001916104fb565b820191906000526020600020905b8154815290600101906020018083116104de57829003601f168201915b5050505050905090565b6000610519610512610cd1565b8484610cd5565b5060015b92915050565b60055490565b610531610cd1565b6001600160a01b0316610542610937565b6001600160a01b0316146105715760405162461bcd60e51b815260040161056890611a5e565b60405180910390fd5b6001600160a01b0381166105975760405162461bcd60e51b8152600401610568906119df565b6001600160a01b038116600081815260086020526040808220805460ff19169055517f1e17ee0599b7c09bb1d0ff1e8086007909da8bfba5c7d18319cb558e66db37ee9190a250565b60006105ed848484610d89565b6001600160a01b03841660009081526004602052604081208161060e610cd1565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156106515760405162461bcd60e51b815260040161056890611a16565b6106658561065d610cd1565b858403610cd5565b506001949350505050565b6000908152600160208190526040909120015490565b61068f82610670565b6106a08161069b610cd1565b610e20565b6106aa8383610e84565b505050565b601290565b6106bc610cd1565b6001600160a01b0316816001600160a01b0316146106ec5760405162461bcd60e51b815260040161056890611c99565b6106f68282610ea6565b5050565b60086020526000908152604090205460ff1681565b600061051961071c610cd1565b84846004600061072a610cd1565b6001600160a01b03908116825260208083019390935260409182016000908120918b168152925290205461075e9190611d2d565b610cd5565b61076b610cd1565b6001600160a01b031661077c610937565b6001600160a01b0316146107a25760405162461bcd60e51b815260040161056890611a5e565b6001600160a01b0381166107c85760405162461bcd60e51b8152600401610568906119df565b6001600160a01b038116600081815260086020526040808220805460ff19166001179055517f3990e3e141b903f4f5602428874be692206642a653b416f336d965e2f04813ce9190a250565b60095460ff1681565b6108497f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66103a7610cd1565b6108655760405162461bcd60e51b815260040161056890611a93565b6106f68282610ec8565b61088061087a610cd1565b82610f90565b50565b6001600160a01b031660009081526003602052604090205490565b6108a6610cd1565b6001600160a01b03166108b7610937565b6001600160a01b0316146108dd5760405162461bcd60e51b815260040161056890611a5e565b6108e76000611081565b565b60006108f783610426610cd1565b9050818110156109195760405162461bcd60e51b815260040161056890611ae9565b61092d83610925610cd1565b848403610cd5565b6106aa8383610f90565b6000546001600160a01b031690565b600082815260026020526040812061095e90836110d1565b9392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606007805461048290611dbe565b600081565b600080600460006109b3610cd1565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156109ff5760405162461bcd60e51b815260040161056890611c54565b610a13610a0a610cd1565b85858403610cd5565b5060019392505050565b6000610519610a2a610cd1565b8484610d89565b610a39610cd1565b6001600160a01b0316610a4a610937565b6001600160a01b031614610a705760405162461bcd60e51b815260040161056890611a5e565b6009805460ff191690556040517fb5268fa45a1d68f6e477c989133949190a0b45c510dc9ba635e824dd172eecb490600090a1565b600081815260026020526040812061046b906110dd565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610ae982610670565b610af58161069b610cd1565b6106aa8383610ea6565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610b32610cd1565b6001600160a01b0316610b43610937565b6001600160a01b031614610b695760405162461bcd60e51b815260040161056890611a5e565b6009805460ff191660011790556040517faf7d697ef0ba633b3eae6ce87f1d049667fd2e034bfa7f83c89314a9592827e090600090a1565b610ba9610cd1565b6001600160a01b0316610bba610937565b6001600160a01b031614610be05760405162461bcd60e51b815260040161056890611a5e565b6001600160a01b038116610c065760405162461bcd60e51b815260040161056890611911565b61088081611081565b610c198282610965565b6106f65760008281526001602081815260408084206001600160a01b0386168552909152909120805460ff19169091179055610c53610cd1565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061095e836001600160a01b0384166110e8565b60006001600160e01b03198216637965db0b60e01b148061046b575061046b82611132565b3390565b6001600160a01b038316610cfb5760405162461bcd60e51b815260040161056890611bb3565b6001600160a01b038216610d215760405162461bcd60e51b815260040161056890611957565b6001600160a01b0380841660008181526004602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610d7c90859061181b565b60405180910390a3505050565b60095460ff16158015610db55750610d9f610937565b6001600160a01b0316336001600160a01b031614155b15610e15576001600160a01b03821660009081526008602052604090205460ff1680610df957506001600160a01b03831660009081526008602052604090205460ff165b610e155760405162461bcd60e51b815260040161056890611bf7565b6106aa83838361114b565b610e2a8282610965565b6106f657610e42816001600160a01b03166014611275565b610e4d836020611275565b604051602001610e5e929190611787565b60408051601f198184030181529082905262461bcd60e51b825261056891600401611824565b610e8e8282610c0f565b60008281526002602052604090206106aa9082610c97565b610eb08282611427565b60008281526002602052604090206106aa90826114ac565b6001600160a01b038216610eee5760405162461bcd60e51b815260040161056890611ce8565b610efa600083836114c1565b8060056000828254610f0c9190611d2d565b90915550506001600160a01b03821660009081526003602052604081208054839290610f39908490611d2d565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f7c90859061181b565b60405180910390a36106f6600083836106aa565b6001600160a01b038216610fb65760405162461bcd60e51b815260040161056890611b2d565b610fc2826000836114c1565b6001600160a01b03821660009081526003602052604090205481811015610ffb5760405162461bcd60e51b8152600401610568906118cf565b6001600160a01b038316600090815260036020526040812083830390556005805484929061102a908490611d64565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061106d90869061181b565b60405180910390a36106aa836000846106aa565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061095e83836114cc565b600061046b82611504565b60006110f48383611508565b61112a5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561051d565b50600061051d565b6001600160e01b031981166301ffc9a760e01b14919050565b6001600160a01b0383166111715760405162461bcd60e51b815260040161056890611b6e565b6001600160a01b0382166111975760405162461bcd60e51b81526004016105689061188c565b6111a28383836114c1565b6001600160a01b038316600090815260036020526040902054818110156111db5760405162461bcd60e51b815260040161056890611999565b6001600160a01b03808516600090815260036020526040808220858503905591851681529081208054849290611212908490611d2d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161125c919061181b565b60405180910390a361126f8484846106aa565b50505050565b60606000611284836002611d45565b61128f906002611d2d565b67ffffffffffffffff8111156112b557634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112df576020820181803683370190505b509050600360fc1b8160008151811061130857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061134557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611369846002611d45565b611374906001611d2d565b90505b6001811115611408576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113b657634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106113da57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361140181611da7565b9050611377565b50831561095e5760405162461bcd60e51b815260040161056890611857565b6114318282610965565b156106f65760008281526001602090815260408083206001600160a01b03851684529091529020805460ff19169055611468610cd1565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600061095e836001600160a01b038416611520565b6106aa8383836106aa565b60008260000182815481106114f157634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611633576000611544600183611d64565b855490915060009061155890600190611d64565b90508181146115d957600086600001828154811061158657634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106115b757634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b85548690806115f857634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061051d565b600091505061051d565b80356001600160a01b038116811461046e57600080fd5b600060208284031215611665578081fd5b61095e8261163d565b60008060408385031215611680578081fd5b6116898361163d565b91506116976020840161163d565b90509250929050565b6000806000606084860312156116b4578081fd5b6116bd8461163d565b92506116cb6020850161163d565b9150604084013590509250925092565b600080604083850312156116ed578182fd5b6116f68361163d565b946020939093013593505050565b600060208284031215611715578081fd5b5035919050565b6000806040838503121561172e578182fd5b823591506116976020840161163d565b60008060408385031215611750578182fd5b50508035926020909101359150565b600060208284031215611770578081fd5b81356001600160e01b03198116811461095e578182fd5b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516117bf816017850160208801611d7b565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516117f0816028840160208801611d7b565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b6000602082528251806020840152611843816040850160208701611d7b565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526018908201527f496e76616c696420636f6e747261637420616464726573730000000000000000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526036908201527f45524332305072657365744d696e7465725061757365723a206d7573742068616040820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526038908201527f5065726d697373696f6e2064656e6965643a2073656e646572206f722072656360408201527f697069656e74206973206e6f74207768697465206c6973740000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b60ff91909116815260200190565b60008219821115611d4057611d40611df9565b500190565b6000816000190483118215151615611d5f57611d5f611df9565b500290565b600082821015611d7657611d76611df9565b500390565b60005b83811015611d96578181015183820152602001611d7e565b8381111561126f5750506000910152565b600081611db657611db6611df9565b506000190190565b600281046001821680611dd257607f821691505b60208210811415611df357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b63a68e3114b0a9c7c57c72fab0a7984cb70025a6126d765bc44eafded8198d164736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c806370a082311161011a578063a457c2d7116100ad578063d53913931161007c578063d5391393146103fd578063d547741f14610405578063dd62ed3e14610418578063f1b50c1d1461042b578063f2fde38b14610433576101fb565b8063a457c2d7146103bc578063a9059cbb146103cf578063b187984f146103e2578063ca15c873146103ea576101fb565b80639010d07c116100e95780639010d07c1461038657806391d148541461039957806395d89b41146103ac578063a217fddf146103b4576101fb565b806370a0823114610343578063715018a61461035657806379cc67901461035e5780638da5cb5b14610371576101fb565b8063313ce5671161019257806339e899ee1161016157806339e899ee146103025780633a1302c31461031557806340c10f191461031d57806342966c6814610330576101fb565b8063313ce567146102b457806336568abe146102c9578063372c12b1146102dc57806339509351146102ef576101fb565b80632042e5c2116101ce5780632042e5c21461026657806323b872dd1461027b578063248a9ca31461028e5780632f2ff15d146102a1576101fb565b806301ffc9a71461020057806306fdde0314610229578063095ea7b31461023e57806318160ddd14610251575b600080fd5b61021361020e36600461175f565b610446565b6040516102209190611810565b60405180910390f35b610231610473565b6040516102209190611824565b61021361024c3660046116db565b610505565b610259610523565b604051610220919061181b565b610279610274366004611654565b610529565b005b6102136102893660046116a0565b6105e0565b61025961029c366004611704565b610670565b6102796102af36600461171c565b610686565b6102bc6106af565b6040516102209190611d1f565b6102796102d736600461171c565b6106b4565b6102136102ea366004611654565b6106fa565b6102136102fd3660046116db565b61070f565b610279610310366004611654565b610763565b610213610814565b61027961032b3660046116db565b61081d565b61027961033e366004611704565b61086f565b610259610351366004611654565b610883565b61027961089e565b61027961036c3660046116db565b6108e9565b610379610937565b60405161022091906117fc565b61037961039436600461173e565b610946565b6102136103a736600461171c565b610965565b610231610990565b61025961099f565b6102136103ca3660046116db565b6109a4565b6102136103dd3660046116db565b610a1d565b610279610a31565b6102596103f8366004611704565b610aa5565b610259610abc565b61027961041336600461171c565b610ae0565b61025961042636600461166e565b610aff565b610279610b2a565b610279610441366004611654565b610ba1565b60006001600160e01b03198216635a05180f60e01b148061046b575061046b82610cac565b90505b919050565b60606006805461048290611dbe565b80601f01602080910402602001604051908101604052809291908181526020018280546104ae90611dbe565b80156104fb5780601f106104d0576101008083540402835291602001916104fb565b820191906000526020600020905b8154815290600101906020018083116104de57829003601f168201915b5050505050905090565b6000610519610512610cd1565b8484610cd5565b5060015b92915050565b60055490565b610531610cd1565b6001600160a01b0316610542610937565b6001600160a01b0316146105715760405162461bcd60e51b815260040161056890611a5e565b60405180910390fd5b6001600160a01b0381166105975760405162461bcd60e51b8152600401610568906119df565b6001600160a01b038116600081815260086020526040808220805460ff19169055517f1e17ee0599b7c09bb1d0ff1e8086007909da8bfba5c7d18319cb558e66db37ee9190a250565b60006105ed848484610d89565b6001600160a01b03841660009081526004602052604081208161060e610cd1565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156106515760405162461bcd60e51b815260040161056890611a16565b6106658561065d610cd1565b858403610cd5565b506001949350505050565b6000908152600160208190526040909120015490565b61068f82610670565b6106a08161069b610cd1565b610e20565b6106aa8383610e84565b505050565b601290565b6106bc610cd1565b6001600160a01b0316816001600160a01b0316146106ec5760405162461bcd60e51b815260040161056890611c99565b6106f68282610ea6565b5050565b60086020526000908152604090205460ff1681565b600061051961071c610cd1565b84846004600061072a610cd1565b6001600160a01b03908116825260208083019390935260409182016000908120918b168152925290205461075e9190611d2d565b610cd5565b61076b610cd1565b6001600160a01b031661077c610937565b6001600160a01b0316146107a25760405162461bcd60e51b815260040161056890611a5e565b6001600160a01b0381166107c85760405162461bcd60e51b8152600401610568906119df565b6001600160a01b038116600081815260086020526040808220805460ff19166001179055517f3990e3e141b903f4f5602428874be692206642a653b416f336d965e2f04813ce9190a250565b60095460ff1681565b6108497f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66103a7610cd1565b6108655760405162461bcd60e51b815260040161056890611a93565b6106f68282610ec8565b61088061087a610cd1565b82610f90565b50565b6001600160a01b031660009081526003602052604090205490565b6108a6610cd1565b6001600160a01b03166108b7610937565b6001600160a01b0316146108dd5760405162461bcd60e51b815260040161056890611a5e565b6108e76000611081565b565b60006108f783610426610cd1565b9050818110156109195760405162461bcd60e51b815260040161056890611ae9565b61092d83610925610cd1565b848403610cd5565b6106aa8383610f90565b6000546001600160a01b031690565b600082815260026020526040812061095e90836110d1565b9392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606007805461048290611dbe565b600081565b600080600460006109b3610cd1565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156109ff5760405162461bcd60e51b815260040161056890611c54565b610a13610a0a610cd1565b85858403610cd5565b5060019392505050565b6000610519610a2a610cd1565b8484610d89565b610a39610cd1565b6001600160a01b0316610a4a610937565b6001600160a01b031614610a705760405162461bcd60e51b815260040161056890611a5e565b6009805460ff191690556040517fb5268fa45a1d68f6e477c989133949190a0b45c510dc9ba635e824dd172eecb490600090a1565b600081815260026020526040812061046b906110dd565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610ae982610670565b610af58161069b610cd1565b6106aa8383610ea6565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610b32610cd1565b6001600160a01b0316610b43610937565b6001600160a01b031614610b695760405162461bcd60e51b815260040161056890611a5e565b6009805460ff191660011790556040517faf7d697ef0ba633b3eae6ce87f1d049667fd2e034bfa7f83c89314a9592827e090600090a1565b610ba9610cd1565b6001600160a01b0316610bba610937565b6001600160a01b031614610be05760405162461bcd60e51b815260040161056890611a5e565b6001600160a01b038116610c065760405162461bcd60e51b815260040161056890611911565b61088081611081565b610c198282610965565b6106f65760008281526001602081815260408084206001600160a01b0386168552909152909120805460ff19169091179055610c53610cd1565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061095e836001600160a01b0384166110e8565b60006001600160e01b03198216637965db0b60e01b148061046b575061046b82611132565b3390565b6001600160a01b038316610cfb5760405162461bcd60e51b815260040161056890611bb3565b6001600160a01b038216610d215760405162461bcd60e51b815260040161056890611957565b6001600160a01b0380841660008181526004602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610d7c90859061181b565b60405180910390a3505050565b60095460ff16158015610db55750610d9f610937565b6001600160a01b0316336001600160a01b031614155b15610e15576001600160a01b03821660009081526008602052604090205460ff1680610df957506001600160a01b03831660009081526008602052604090205460ff165b610e155760405162461bcd60e51b815260040161056890611bf7565b6106aa83838361114b565b610e2a8282610965565b6106f657610e42816001600160a01b03166014611275565b610e4d836020611275565b604051602001610e5e929190611787565b60408051601f198184030181529082905262461bcd60e51b825261056891600401611824565b610e8e8282610c0f565b60008281526002602052604090206106aa9082610c97565b610eb08282611427565b60008281526002602052604090206106aa90826114ac565b6001600160a01b038216610eee5760405162461bcd60e51b815260040161056890611ce8565b610efa600083836114c1565b8060056000828254610f0c9190611d2d565b90915550506001600160a01b03821660009081526003602052604081208054839290610f39908490611d2d565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f7c90859061181b565b60405180910390a36106f6600083836106aa565b6001600160a01b038216610fb65760405162461bcd60e51b815260040161056890611b2d565b610fc2826000836114c1565b6001600160a01b03821660009081526003602052604090205481811015610ffb5760405162461bcd60e51b8152600401610568906118cf565b6001600160a01b038316600090815260036020526040812083830390556005805484929061102a908490611d64565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061106d90869061181b565b60405180910390a36106aa836000846106aa565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061095e83836114cc565b600061046b82611504565b60006110f48383611508565b61112a5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561051d565b50600061051d565b6001600160e01b031981166301ffc9a760e01b14919050565b6001600160a01b0383166111715760405162461bcd60e51b815260040161056890611b6e565b6001600160a01b0382166111975760405162461bcd60e51b81526004016105689061188c565b6111a28383836114c1565b6001600160a01b038316600090815260036020526040902054818110156111db5760405162461bcd60e51b815260040161056890611999565b6001600160a01b03808516600090815260036020526040808220858503905591851681529081208054849290611212908490611d2d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161125c919061181b565b60405180910390a361126f8484846106aa565b50505050565b60606000611284836002611d45565b61128f906002611d2d565b67ffffffffffffffff8111156112b557634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112df576020820181803683370190505b509050600360fc1b8160008151811061130857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061134557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611369846002611d45565b611374906001611d2d565b90505b6001811115611408576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113b657634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106113da57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361140181611da7565b9050611377565b50831561095e5760405162461bcd60e51b815260040161056890611857565b6114318282610965565b156106f65760008281526001602090815260408083206001600160a01b03851684529091529020805460ff19169055611468610cd1565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600061095e836001600160a01b038416611520565b6106aa8383836106aa565b60008260000182815481106114f157634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611633576000611544600183611d64565b855490915060009061155890600190611d64565b90508181146115d957600086600001828154811061158657634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106115b757634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b85548690806115f857634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061051d565b600091505061051d565b80356001600160a01b038116811461046e57600080fd5b600060208284031215611665578081fd5b61095e8261163d565b60008060408385031215611680578081fd5b6116898361163d565b91506116976020840161163d565b90509250929050565b6000806000606084860312156116b4578081fd5b6116bd8461163d565b92506116cb6020850161163d565b9150604084013590509250925092565b600080604083850312156116ed578182fd5b6116f68361163d565b946020939093013593505050565b600060208284031215611715578081fd5b5035919050565b6000806040838503121561172e578182fd5b823591506116976020840161163d565b60008060408385031215611750578182fd5b50508035926020909101359150565b600060208284031215611770578081fd5b81356001600160e01b03198116811461095e578182fd5b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516117bf816017850160208801611d7b565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516117f0816028840160208801611d7b565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b6000602082528251806020840152611843816040850160208701611d7b565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526018908201527f496e76616c696420636f6e747261637420616464726573730000000000000000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526036908201527f45524332305072657365744d696e7465725061757365723a206d7573742068616040820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526038908201527f5065726d697373696f6e2064656e6965643a2073656e646572206f722072656360408201527f697069656e74206973206e6f74207768697465206c6973740000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b60ff91909116815260200190565b60008219821115611d4057611d40611df9565b500190565b6000816000190483118215151615611d5f57611d5f611df9565b500290565b600082821015611d7657611d76611df9565b500390565b60005b83811015611d96578181015183820152602001611d7e565b8381111561126f5750506000910152565b600081611db657611db6611df9565b506000190190565b600281046001821680611dd257607f821691505b60208210811415611df357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b63a68e3114b0a9c7c57c72fab0a7984cb70025a6126d765bc44eafded8198d164736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3555:65",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:65",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "80:815:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:24:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "138:5:65"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "145:5:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:20:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:20:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "108:6:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "116:4:65",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "104:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "104:17:65"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "123:3:65"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:27:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "93:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:35:65"
                  },
                  "nodeType": "YulIf",
                  "src": "90:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "162:23:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "172:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:13:65"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "166:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "194:28:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "212:2:65",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "216:1:65",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "208:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "208:10:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "220:1:65",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "204:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:18:65"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "198:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "247:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "237:2:65"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "241:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "234:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "234:10:65"
                  },
                  "nodeType": "YulIf",
                  "src": "231:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "276:23:65",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "296:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "290:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "290:9:65"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "280:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "308:14:65",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "318:4:65",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "312:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "331:67:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "357:6:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "373:2:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "377:4:65",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "369:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "369:13:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "388:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "384:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "384:7:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:27:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "353:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "353:40:65"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "395:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "349:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "349:49:65"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "335:10:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "457:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "459:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "459:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "459:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "416:10:65"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "428:2:65"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "413:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "413:18:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "436:10:65"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "448:6:65"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "433:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "433:22:65"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "410:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "410:46:65"
                  },
                  "nodeType": "YulIf",
                  "src": "407:2:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "495:2:65",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "499:10:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "488:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:22:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "488:22:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "526:6:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "534:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "519:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:18:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "519:18:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "583:24:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "592:5:65"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "599:5:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "585:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "585:20:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "585:20:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "560:6:65"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "568:2:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "556:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "556:15:65"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "573:2:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "552:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "552:24:65"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "578:3:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "549:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "549:33:65"
                  },
                  "nodeType": "YulIf",
                  "src": "546:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "616:14:65",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "625:5:65"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "620:1:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "685:87:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "714:6:65"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "722:1:65"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "710:3:65"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "710:14:65"
                                },
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "726:2:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "706:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "706:23:65"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "745:6:65"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "753:1:65"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "741:3:65"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "741:14:65"
                                    },
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "757:2:65"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "737:3:65"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "737:23:65"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "731:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "731:30:65"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "699:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "699:63:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "699:63:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "650:1:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "653:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "647:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:9:65"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "657:19:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "659:15:65",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "668:1:65"
                            },
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "671:2:65"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "664:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "664:10:65"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "659:1:65"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "643:3:65",
                    "statements": []
                  },
                  "src": "639:133:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:63:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "831:6:65"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "839:2:65"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:3:65"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "827:15:65"
                                },
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "844:2:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "823:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "823:24:65"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "849:5:65"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "816:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "816:39:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "816:39:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "787:1:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "790:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "784:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:9:65"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "874:15:65",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "883:6:65"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "874:5:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "54:6:65",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "62:3:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "70:5:65",
                "type": ""
              }
            ],
            "src": "14:881:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1052:683:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1099:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1108:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1116:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1101:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1101:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1101:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1073:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1082:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1069:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1069:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1094:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1065:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1065:33:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1062:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1134:30:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1154:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1148:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:16:65"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1138:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1173:28:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1191:2:65",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1195:1:65",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1187:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1187:10:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1199:1:65",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1183:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:18:65"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1177:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1228:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1237:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1245:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1230:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1230:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1230:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1216:6:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1224:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1213:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1213:14:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1210:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1263:73:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1308:9:65"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1319:6:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1304:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1304:22:65"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1328:7:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1273:30:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1273:63:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1263:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1345:41:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1371:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1382:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1367:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1367:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1361:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1361:25:65"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1349:8:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1415:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1424:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1432:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1417:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1417:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1417:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1401:8:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1411:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1398:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1398:16:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1395:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1450:75:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1495:9:65"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1506:8:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1491:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1491:24:65"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1517:7:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1460:30:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:65:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1450:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1534:35:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1554:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1565:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1550:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1550:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1544:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1544:25:65"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1534:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1578:38:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1601:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1612:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1597:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1597:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1591:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1591:25:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1582:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1679:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1688:6:65"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1696:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1681:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1681:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1681:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1638:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1649:5:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1664:3:65",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1669:1:65",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1660:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1660:11:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1673:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1656:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1656:19:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1645:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1645:31:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1635:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1635:42:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1628:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:50:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1625:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1714:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1724:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1714:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "994:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1005:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1017:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1025:6:65",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1033:6:65",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1041:6:65",
                "type": ""
              }
            ],
            "src": "900:835:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1914:175:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1931:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1942:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1924:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1924:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1924:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1965:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1976:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1961:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1961:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1981:2:65",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1954:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1954:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1954:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2004:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2015:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2000:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2000:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2020:27:65",
                        "type": "",
                        "value": "Receive address cant be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1993:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1993:55:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1993:55:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2057:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2069:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2080:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2065:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2057:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5514e4f63e034542a605bbe51899225d6997f8ea2199a2bf737bda2c28bc1143__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1891:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1905:4:65",
                "type": ""
              }
            ],
            "src": "1740:349:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2268:181:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2285:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2296:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2278:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2278:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2319:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2330:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2315:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2315:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2335:2:65",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2308:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2308:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2308:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2358:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2369:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2354:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2354:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2374:33:65",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2347:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2347:61:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2347:61:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2417:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2429:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2440:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2425:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2425:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2417:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2245:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2259:4:65",
                "type": ""
              }
            ],
            "src": "2094:355:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2555:76:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2565:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2577:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2588:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2573:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2573:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2565:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2607:9:65"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2618:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2600:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2600:25:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2600:25:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2524:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2535:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2546:4:65",
                "type": ""
              }
            ],
            "src": "2454:177:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2684:238:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2719:172:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "2740:3:65"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2745:77:65",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2733:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2733:90:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2733:90:65"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2843:1:65",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2846:4:65",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2836:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2836:15:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2836:15:65"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "2871:3:65"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2876:4:65",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2864:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2864:17:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2864:17:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2700:1:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2707:1:65"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2703:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2703:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2697:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2697:13:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2694:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2900:16:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2911:1:65"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2914:1:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2907:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2907:9:65"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2900:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2667:1:65",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2670:1:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2676:3:65",
                "type": ""
              }
            ],
            "src": "2636:286:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2982:382:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2992:22:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3006:4:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3012:1:65",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3002:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3002:12:65"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2992:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3023:38:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3053:4:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3059:1:65",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3049:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3049:12:65"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3027:18:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3100:31:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3102:27:65",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3116:6:65"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3124:4:65",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3112:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3112:17:65"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3102:6:65"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3080:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3073:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3073:26:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3070:2:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3190:168:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3211:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3214:77:65",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3204:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3204:88:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3204:88:65"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3312:1:65",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3315:4:65",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3305:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3305:15:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3305:15:65"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3340:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3343:4:65",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3333:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3333:15:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3333:15:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3146:18:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3169:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3177:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3166:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3166:14:65"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3143:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3143:38:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3140:2:65"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2962:4:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2971:6:65",
                "type": ""
              }
            ],
            "src": "2927:437:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3401:152:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3418:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3421:77:65",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3411:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3411:88:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3411:88:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3515:1:65",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3518:4:65",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3508:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3508:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3508:15:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3539:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3542:4:65",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3532:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3532:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3532:15:65"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3369:184:65"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value3, value3) }\n        value3 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5514e4f63e034542a605bbe51899225d6997f8ea2199a2bf737bda2c28bc1143__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Receive address cant be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 65,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13171:65",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:65",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:65"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:65"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:65",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:65",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:65"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:65"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:65",
                "type": ""
              }
            ],
            "src": "14:175:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:65",
                "type": ""
              }
            ],
            "src": "194:198:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:65",
                "type": ""
              }
            ],
            "src": "397:274:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:238:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:41:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "892:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "871:20:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:31:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "911:50:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "957:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "921:20:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:40:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:42:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "980:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:65"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "741:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "761:6:65",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "769:6:65",
                "type": ""
              }
            ],
            "src": "676:342:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1110:179:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1156:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1165:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1173:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1158:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1158:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1158:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1131:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1140:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1127:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1127:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1152:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1123:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1120:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:41:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1222:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1201:20:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:31:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1191:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1241:42:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1268:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1279:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1251:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:32:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1241:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1079:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1091:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1099:6:65",
                "type": ""
              }
            ],
            "src": "1023:266:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1364:120:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1410:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1419:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1427:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1412:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1412:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1412:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1385:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1394:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1381:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1381:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1406:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1377:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1377:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1374:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1445:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1468:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1455:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1455:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1445:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1330:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1341:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1353:6:65",
                "type": ""
              }
            ],
            "src": "1294:190:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1576:179:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1622:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1631:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1639:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1624:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1624:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1624:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1597:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1606:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1593:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1593:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1618:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1589:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1586:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1657:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1680:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1667:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1657:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1699:50:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1734:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1745:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1730:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1709:20:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1709:40:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1699:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1534:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1545:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1557:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1565:6:65",
                "type": ""
              }
            ],
            "src": "1489:266:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1847:171:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1893:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1902:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1910:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1895:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1895:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1895:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1868:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1877:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1864:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1864:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1889:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1860:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1860:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1857:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1928:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1951:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1938:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1938:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1928:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1970:42:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1997:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2008:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1993:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1980:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:32:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1970:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1805:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1816:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1828:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1836:6:65",
                "type": ""
              }
            ],
            "src": "1760:258:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2092:237:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2138:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2147:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2155:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2140:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2140:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2140:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2113:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2122:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2109:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2109:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2134:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2105:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2102:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2173:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2199:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2186:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2186:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2177:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2273:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2282:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2290:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2275:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2275:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2275:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2231:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2242:5:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2253:3:65",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2258:10:65",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2249:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2249:20:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2238:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2238:32:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2228:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2228:43:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2221:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2221:51:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2218:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2308:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2318:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2308:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2058:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2069:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2081:6:65",
                "type": ""
              }
            ],
            "src": "2023:306:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2404:120:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2450:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2459:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2467:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2452:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2452:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2452:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2425:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2434:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2421:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2421:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2446:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2417:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2417:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2414:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2485:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2508:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2495:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2495:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2485:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2370:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2381:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2393:6:65",
                "type": ""
              }
            ],
            "src": "2334:190:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2918:397:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2935:3:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2940:25:65",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2928:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2928:38:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2928:38:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2975:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2995:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2989:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2989:13:65"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2979:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3037:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3045:4:65",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3033:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3033:17:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3056:3:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3061:2:65",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3052:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3052:12:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3066:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3011:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3011:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3011:62:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3082:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3096:3:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3101:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3092:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3092:16:65"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3086:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3128:2:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3132:2:65",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3124:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3124:11:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3137:19:65",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3117:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3117:40:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3117:40:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3166:29:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3188:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3182:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3182:13:65"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "3170:8:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3230:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3238:4:65",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3226:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3226:17:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3249:2:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3253:2:65",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3245:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3245:11:65"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "3258:8:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3204:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3204:63:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3204:63:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3276:33:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3291:2:65"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "3295:8:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3287:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3287:17:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3306:2:65",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3283:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3283:26:65"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3276:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2886:3:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2891:6:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2899:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2910:3:65",
                "type": ""
              }
            ],
            "src": "2529:786:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3421:102:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3431:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3443:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3454:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3439:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3439:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3431:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3473:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3488:6:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3504:3:65",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3509:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3500:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3500:11:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3513:1:65",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3496:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3496:19:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3484:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3484:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3466:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3466:51:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3466:51:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3390:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3401:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3412:4:65",
                "type": ""
              }
            ],
            "src": "3320:203:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3623:92:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3633:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3645:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3656:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3641:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3633:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3675:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3700:6:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3693:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3693:14:65"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3686:6:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3686:22:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3668:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3668:41:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3668:41:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3592:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3603:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3614:4:65",
                "type": ""
              }
            ],
            "src": "3528:187:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3821:76:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3831:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3843:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3854:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3839:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3839:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3831:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3873:9:65"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3884:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3866:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3866:25:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3866:25:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3790:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3801:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3812:4:65",
                "type": ""
              }
            ],
            "src": "3720:177:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4023:262:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4040:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4051:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4033:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4033:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4033:21:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4063:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4083:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4077:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4077:13:65"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4067:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4110:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4121:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4106:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4106:18:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4126:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4099:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4099:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4099:34:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4168:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4176:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4164:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4164:15:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4185:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4196:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4181:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4181:18:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4201:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4142:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4142:66:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4142:66:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4217:62:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4233:9:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4252:6:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4260:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4248:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4248:15:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4269:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4265:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4265:7:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4244:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4244:29:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4229:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4229:45:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4276:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4225:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4225:54:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4217:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3992:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4003:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4014:4:65",
                "type": ""
              }
            ],
            "src": "3902:383:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4464:182:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4481:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4492:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4474:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4474:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4474:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4515:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4526:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4511:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4511:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4531:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4504:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4504:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4504:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4554:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4565:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4550:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4550:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4570:34:65",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4543:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4543:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4543:62:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4614:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4626:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4637:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4622:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4622:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4614:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4441:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4455:4:65",
                "type": ""
              }
            ],
            "src": "4290:356:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4825:225:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4842:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4853:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4835:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4835:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4835:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4876:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4887:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4872:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4872:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4892:2:65",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4865:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4865:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4865:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4915:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4926:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4911:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4911:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4931:34:65",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4904:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4904:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4904:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4986:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4997:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4982:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4982:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5002:5:65",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4975:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4975:33:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4975:33:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5017:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5029:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5040:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5025:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5025:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5017:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4802:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4816:4:65",
                "type": ""
              }
            ],
            "src": "4651:399:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5229:224:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5246:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5257:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5239:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5239:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5239:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5280:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5291:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5276:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5276:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5296:2:65",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5269:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5269:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5269:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5319:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5330:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5315:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5315:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5335:34:65",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5308:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5308:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5308:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5390:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5401:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5386:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5386:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5406:4:65",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5379:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5379:32:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5379:32:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5420:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5432:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5443:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5428:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5428:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5420:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5206:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5220:4:65",
                "type": ""
              }
            ],
            "src": "5055:398:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5632:228:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5649:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5660:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5642:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5642:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5642:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5683:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5694:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5679:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5679:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5699:2:65",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5672:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5672:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5672:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5722:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5733:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5718:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5718:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5738:34:65",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5711:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5711:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5711:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5793:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5804:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5789:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5789:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5809:8:65",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5782:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5782:36:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5782:36:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5827:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5839:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5850:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5835:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5835:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5827:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5609:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5623:4:65",
                "type": ""
              }
            ],
            "src": "5458:402:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6039:224:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6056:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6067:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6049:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6049:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6049:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6090:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6101:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6086:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6086:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6106:2:65",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6079:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6079:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6079:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6129:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6140:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6125:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6125:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6145:34:65",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6118:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6118:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6118:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6200:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6211:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6196:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6196:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6216:4:65",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6189:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6189:32:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6189:32:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6230:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6242:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6253:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6238:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6238:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6230:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6016:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6030:4:65",
                "type": ""
              }
            ],
            "src": "5865:398:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6442:228:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6459:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6470:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6452:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6452:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6452:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6493:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6504:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6489:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6489:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6509:2:65",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6482:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6482:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6482:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6532:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6543:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6528:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6528:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6548:34:65",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6521:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6521:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6521:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6603:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6614:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6599:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6599:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6619:8:65",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6592:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6592:36:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6592:36:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6637:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6649:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6660:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6645:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6645:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6637:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6419:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6433:4:65",
                "type": ""
              }
            ],
            "src": "6268:402:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6849:174:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6866:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6877:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6859:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6859:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6859:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6900:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6911:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6896:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6896:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6916:2:65",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6889:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6889:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6889:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6939:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6950:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6935:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6935:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6955:26:65",
                        "type": "",
                        "value": "Invalid contract address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6928:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6928:54:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6928:54:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6991:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7003:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7014:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6999:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6999:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6991:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6826:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6840:4:65",
                "type": ""
              }
            ],
            "src": "6675:348:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7202:230:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7219:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7230:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7212:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7212:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7212:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7253:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7264:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7249:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7249:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7269:2:65",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7242:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7242:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7242:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7292:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7303:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7288:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7288:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7308:34:65",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7281:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7281:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7281:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7363:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7374:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7359:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7359:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7379:10:65",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7352:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7352:38:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7352:38:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7399:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7411:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7422:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7407:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7407:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7399:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7179:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7193:4:65",
                "type": ""
              }
            ],
            "src": "7028:404:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7611:182:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7628:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7639:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7621:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7621:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7621:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7662:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7673:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7658:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7658:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7678:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7651:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7651:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7651:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7701:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7712:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7697:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7697:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7717:34:65",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7690:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7690:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7690:62:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7761:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7773:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7784:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7769:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7769:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7761:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7588:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7602:4:65",
                "type": ""
              }
            ],
            "src": "7437:356:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7972:244:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7989:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8000:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7982:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7982:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7982:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8023:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8034:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8019:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8019:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8039:2:65",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8012:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8012:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8012:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8062:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8073:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8058:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8058:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8078:34:65",
                        "type": "",
                        "value": "ERC20PresetMinterPauser: must ha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8051:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8051:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8051:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8133:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8144:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8129:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8129:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8149:24:65",
                        "type": "",
                        "value": "ve minter role to mint"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8122:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8122:52:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8122:52:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8183:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8195:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8206:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8191:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8191:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8183:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7949:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7963:4:65",
                "type": ""
              }
            ],
            "src": "7798:418:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8395:226:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8412:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8423:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8405:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8405:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8405:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8446:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8457:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8442:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8442:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8462:2:65",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8435:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8435:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8435:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8485:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8496:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8481:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8481:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8501:34:65",
                        "type": "",
                        "value": "ERC20: burn amount exceeds allow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8474:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8474:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8474:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8556:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8567:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8552:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8552:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8572:6:65",
                        "type": "",
                        "value": "ance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8545:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8545:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8545:34:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8588:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8600:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8611:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8596:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8596:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8588:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8372:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8386:4:65",
                "type": ""
              }
            ],
            "src": "8221:400:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8800:223:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8817:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8828:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8810:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8810:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8810:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8851:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8862:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8847:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8847:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8867:2:65",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8840:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8840:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8840:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8890:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8901:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8886:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8886:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8906:34:65",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8879:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8879:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8879:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8961:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8972:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8957:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8957:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8977:3:65",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8950:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8950:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8950:31:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8990:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9002:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9013:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8998:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8998:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8990:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8777:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8791:4:65",
                "type": ""
              }
            ],
            "src": "8626:397:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9202:227:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9219:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9230:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9212:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9212:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9212:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9253:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9264:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9249:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9249:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9269:2:65",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9242:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9242:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9242:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9292:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9303:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9288:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9288:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9308:34:65",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9281:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9281:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9281:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9363:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9374:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9359:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9359:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9379:7:65",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9352:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9352:35:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9352:35:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9396:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9408:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9419:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9404:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9404:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9396:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9179:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9193:4:65",
                "type": ""
              }
            ],
            "src": "9028:401:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9608:226:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9625:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9636:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9618:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9618:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9618:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9659:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9670:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9655:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9655:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9675:2:65",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9648:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9648:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9648:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9698:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9709:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9694:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9694:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9714:34:65",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9687:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9687:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9687:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9769:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9780:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9765:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9765:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9785:6:65",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9758:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9758:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9758:34:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9801:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9813:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9824:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9809:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9809:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9801:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9585:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9599:4:65",
                "type": ""
              }
            ],
            "src": "9434:400:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10013:246:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10030:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10041:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10023:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10023:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10023:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10064:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10075:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10060:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10060:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10080:2:65",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10053:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10053:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10053:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10103:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10114:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10099:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10099:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10119:34:65",
                        "type": "",
                        "value": "Permission denied: sender or rec"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10092:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10092:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10092:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10174:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10185:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10170:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10170:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10190:26:65",
                        "type": "",
                        "value": "ipient is not white list"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10163:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10163:54:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10163:54:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10226:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10238:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10249:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10234:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10234:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10226:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cbbfa2077b554500dd80ca8065be88fb4590418c21f1e772f7e688306e81acc8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9990:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10004:4:65",
                "type": ""
              }
            ],
            "src": "9839:420:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10438:227:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10455:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10466:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10448:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10448:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10448:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10489:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10500:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10485:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10485:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10505:2:65",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10478:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10478:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10478:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10528:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10539:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10524:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10524:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10544:34:65",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10517:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10517:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10517:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10599:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10610:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10595:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10595:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10615:7:65",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10588:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10588:35:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10588:35:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10632:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10644:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10655:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10640:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10640:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10632:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10415:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10429:4:65",
                "type": ""
              }
            ],
            "src": "10264:401:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10844:237:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10861:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10872:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10854:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10854:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10854:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10895:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10906:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10891:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10891:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10911:2:65",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10884:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10884:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10884:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10934:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10945:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10930:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10930:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10950:34:65",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10923:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10923:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10923:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11005:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11016:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11001:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11001:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11021:17:65",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10994:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10994:45:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10994:45:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11048:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11060:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11071:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11056:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11056:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11048:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10821:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10835:4:65",
                "type": ""
              }
            ],
            "src": "10670:411:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11260:181:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11277:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11288:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11270:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11270:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11270:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11311:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11322:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11307:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11307:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11327:2:65",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11300:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11300:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11300:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11350:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11361:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11346:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11346:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11366:33:65",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11339:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11339:61:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11339:61:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11409:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11421:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11432:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11417:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11417:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11409:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11237:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11251:4:65",
                "type": ""
              }
            ],
            "src": "11086:355:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11547:76:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11557:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11569:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11580:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11565:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11565:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11557:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11599:9:65"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11610:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11592:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11592:25:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11592:25:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11516:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11527:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11538:4:65",
                "type": ""
              }
            ],
            "src": "11446:177:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11725:87:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11735:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11747:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11758:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11743:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11743:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11735:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11777:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11792:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11800:4:65",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11788:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11788:17:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11770:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11770:36:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11770:36:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11694:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11705:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11716:4:65",
                "type": ""
              }
            ],
            "src": "11628:184:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11865:80:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11892:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11894:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11894:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11894:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11881:1:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11888:1:65"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11884:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11884:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11878:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11878:13:65"
                  },
                  "nodeType": "YulIf",
                  "src": "11875:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11923:16:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11934:1:65"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11937:1:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11930:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11930:9:65"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11923:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11848:1:65",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11851:1:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11857:3:65",
                "type": ""
              }
            ],
            "src": "11817:128:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12002:116:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12061:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12063:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12063:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12063:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12033:1:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12026:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12026:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12019:6:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12019:17:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12041:1:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12052:1:65",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "12048:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12048:6:65"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12056:1:65"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12044:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12044:14:65"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12038:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12038:21:65"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12015:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12015:45:65"
                  },
                  "nodeType": "YulIf",
                  "src": "12012:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12092:20:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12107:1:65"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12110:1:65"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12103:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12103:9:65"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12092:7:65"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11981:1:65",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11984:1:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "11990:7:65",
                "type": ""
              }
            ],
            "src": "11950:168:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12172:76:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12194:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12196:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12196:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12196:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12188:1:65"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12191:1:65"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12185:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12185:8:65"
                  },
                  "nodeType": "YulIf",
                  "src": "12182:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12225:17:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12237:1:65"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12240:1:65"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12233:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12233:9:65"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12225:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12154:1:65",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12157:1:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12163:4:65",
                "type": ""
              }
            ],
            "src": "12123:125:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12306:205:65",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12316:10:65",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12325:1:65",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "12320:1:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12385:63:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12410:3:65"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12415:1:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12406:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12406:11:65"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "12429:3:65"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12434:1:65"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12425:3:65"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12425:11:65"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12419:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12419:18:65"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12399:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12399:39:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12399:39:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12346:1:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12349:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12343:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12343:13:65"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12357:19:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12359:15:65",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12368:1:65"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12371:2:65",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12364:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12364:10:65"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12359:1:65"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12339:3:65",
                    "statements": []
                  },
                  "src": "12335:113:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12474:31:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12487:3:65"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12492:6:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12483:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12483:16:65"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12501:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12476:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12476:27:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12476:27:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12463:1:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12466:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12460:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12460:13:65"
                  },
                  "nodeType": "YulIf",
                  "src": "12457:2:65"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "12284:3:65",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "12289:3:65",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12294:6:65",
                "type": ""
              }
            ],
            "src": "12253:258:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12563:89:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12590:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12592:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12592:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12592:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12583:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12576:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12576:13:65"
                  },
                  "nodeType": "YulIf",
                  "src": "12573:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12621:25:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12632:5:65"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12643:1:65",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12639:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12639:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12628:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12628:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "12621:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12545:5:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "12555:3:65",
                "type": ""
              }
            ],
            "src": "12516:136:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12712:325:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12722:22:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "12736:4:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12742:1:65",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "12732:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12732:12:65"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "12722:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12753:38:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "12783:4:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12789:1:65",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12779:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12779:12:65"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "12757:18:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12830:31:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12832:27:65",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "12846:6:65"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12854:4:65",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "12842:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12842:17:65"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12832:6:65"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "12810:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12803:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12803:26:65"
                  },
                  "nodeType": "YulIf",
                  "src": "12800:2:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12920:111:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12941:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12948:3:65",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12953:10:65",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "12944:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12944:20:65"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12934:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12934:31:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12934:31:65"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12985:1:65",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12988:4:65",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12978:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12978:15:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12978:15:65"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13013:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13016:4:65",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13006:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13006:15:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13006:15:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "12876:18:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12899:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12907:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "12896:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12896:14:65"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "12873:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12873:38:65"
                  },
                  "nodeType": "YulIf",
                  "src": "12870:2:65"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "12692:4:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12701:6:65",
                "type": ""
              }
            ],
            "src": "12657:380:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13074:95:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13091:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13098:3:65",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13103:10:65",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13094:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13094:20:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13084:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13084:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13084:31:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13131:1:65",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13134:4:65",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13124:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13124:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13124:15:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13155:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13158:4:65",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13148:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13148:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13148:15:65"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13042:127:65"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid contract address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve minter role to mint\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cbbfa2077b554500dd80ca8065be88fb4590418c21f1e772f7e688306e81acc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Permission denied: sender or rec\")\n        mstore(add(headStart, 96), \"ipient is not white list\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 65,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "310:2779:7:-:0;;;920:364;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1058:4;1064:6;921:32:41;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;2029:13:51;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2052:17:51;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;;;;;;;1090:19:7;::::1;1082:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1149:44;2057:4:37;1180:12:7;:10;:12::i;:::-;1149:10;:44::i;:::-;1203:37;423:24;1227:12;:10;:12::i;1203:37::-;1250:27;1256:5:::0;1263:13;1250:5:::1;:27::i;:::-;920:364:::0;;;;310:2779;;640:96:58;719:10;640:96;:::o;2270:187:41:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:41;;;-1:-1:-1;;;;;;2378:17:41;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;6218:110:37:-;6296:25;6307:4;6313:7;6296:10;:25::i;:::-;6218:110;;:::o;8311:389:51:-;-1:-1:-1;;;;;8394:21:51;;8386:65;;;;;;;;;;;;:::i;:::-;8462:49;8491:1;8495:7;8504:6;8462:20;:49::i;:::-;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:51;;;;;;:9;:18;;;;;:28;;8576:6;;8554:18;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:51;;-1:-1:-1;;;;;8597:37:51;;;8614:1;;8597:37;;;;8627:6;;8597:37;:::i;:::-;;;;;;;;8645:48;8673:1;8677:7;8686:6;8645:19;:48::i;1947:166:38:-;2034:31;2051:4;2057:7;2034:16;;;;;:31;;:::i;:::-;2075:18;;;;:12;:18;;;;;;;;:31;;2098:7;;2075:22;;;;;:31;;:::i;:::-;;1947:166;;:::o;2369:196:7:-;2514:44;2541:4;2547:2;2551:6;2514:26;;;;;:44;;:::i;6822:233:37:-;6905:22;6913:4;6919:7;6905;:22::i;:::-;6900:149;;6943:12;;;;6975:4;6943:12;;;;;;;;-1:-1:-1;;;;;6943:29:37;;;;;;;;;;:36;;-1:-1:-1;;6943:36:37;;;;;;7025:12;:10;:12::i;:::-;-1:-1:-1;;;;;6998:40:37;7016:7;-1:-1:-1;;;;;6998:40:37;7010:4;6998:40;;;;;;;;;;6822:233;;:::o;7612:150:63:-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:63;;7705:4;:50::i;:::-;7698:57;;7612:150;;;;;:::o;2894:137:37:-;2972:4;2995:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2995:29:37;;;;;;;;;;;;;;;2894:137::o;1697:404:63:-;1760:4;1781:21;1791:3;1796:5;1781:9;:21::i;:::-;1776:319;;-1:-1:-1;1818:23:63;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:63;2072:12;;3738:127;3811:4;3834:19;;;:12;;;;;:19;;;;;;:24;;;3738:127::o;310:2779:7:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;310:2779:7;;;-1:-1:-1;310:2779:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:65;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:65;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:65;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:65;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:65;80:815;-1:-1:-1;;;;;80:815:65:o;900:835::-;;;;;1094:3;1082:9;1073:7;1069:23;1065:33;1062:2;;;1116:6;1108;1101:22;1062:2;1148:16;;-1:-1:-1;;;;;1213:14:65;;;1210:2;;;1245:6;1237;1230:22;1210:2;1273:63;1328:7;1319:6;1308:9;1304:22;1273:63;:::i;:::-;1263:73;;1382:2;1371:9;1367:18;1361:25;1345:41;;1411:2;1401:8;1398:16;1395:2;;;1432:6;1424;1417:22;1395:2;;1460:65;1517:7;1506:8;1495:9;1491:24;1460:65;:::i;:::-;1565:2;1550:18;;1544:25;1612:2;1597:18;;1591:25;1450:75;;-1:-1:-1;1544:25:65;-1:-1:-1;1591:25:65;-1:-1:-1;;;;;;1645:31:65;;1635:42;;1625:2;;1696:6;1688;1681:22;1625:2;1052:683;;;;-1:-1:-1;1052:683:65;;-1:-1:-1;;1052:683:65:o;1740:349::-;1942:2;1924:21;;;1981:2;1961:18;;;1954:30;2020:27;2015:2;2000:18;;1993:55;2080:2;2065:18;;1914:175::o;2094:355::-;2296:2;2278:21;;;2335:2;2315:18;;;2308:30;2374:33;2369:2;2354:18;;2347:61;2440:2;2425:18;;2268:181::o;2454:177::-;2600:25;;;2588:2;2573:18;;2555:76::o;2636:286::-;;2707:1;2703:6;2700:1;2697:13;2694:2;;;2745:77;2740:3;2733:90;2846:4;2843:1;2836:15;2876:4;2871:3;2864:17;2694:2;-1:-1:-1;2907:9:65;;2684:238::o;2927:437::-;3012:1;3002:12;;3059:1;3049:12;;;3070:2;;3124:4;3116:6;3112:17;3102:27;;3070:2;3177;3169:6;3166:14;3146:18;3143:38;3140:2;;;3214:77;3211:1;3204:88;3315:4;3312:1;3305:15;3343:4;3340:1;3333:15;3140:2;;2982:382;;;:::o;3369:184::-;3421:77;3418:1;3411:88;3518:4;3515:1;3508:15;3542:4;3539:1;3532:15;3401:152;310:2779:7;;;;;;",
  "deployedSourceMap": "310:2779:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;619:212:38;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2141:98:51;;;:::i;:::-;;;;;;;:::i;4238:166::-;;;;;;:::i;:::-;;:::i;3229:106::-;;;:::i;:::-;;;;;;;:::i;1901:219:7:-;;;;;;:::i;:::-;;:::i;:::-;;4871:478:51;;;;;;:::i;:::-;;:::i;3977:121:37:-;;;;;;:::i;:::-;;:::i;4348:145::-;;;;;;:::i;:::-;;:::i;3078:91:51:-;;;:::i;:::-;;;;;;;:::i;5365:214:37:-;;;;;;:::i;:::-;;:::i;487:42:7:-;;;;;;:::i;:::-;;:::i;5744:212:51:-;;;;;;:::i;:::-;;:::i;1683::7:-;;;;;;:::i;:::-;;:::i;535:26::-;;;:::i;1473:204::-;;;;;;:::i;:::-;;:::i;563:89:53:-;;;;;;:::i;:::-;;:::i;3393:125:51:-;;;;;;:::i;:::-;;:::i;1668:101:41:-;;;:::i;958:361:53:-;;;;;;:::i;:::-;;:::i;1036:85:41:-;;;:::i;:::-;;;;;;;:::i;1416:143:38:-;;;;;;:::i;:::-;;:::i;2894:137:37:-;;;;;;:::i;:::-;;:::i;2352:102:51:-;;;:::i;2012:49:37:-;;;:::i;6443:405:51:-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;2246:117:7:-;;;:::i;1727:132:38:-;;;;;;:::i;:::-;;:::i;385:62:7:-;;;:::i;4727:147:37:-;;;;;;:::i;:::-;;:::i;3951:149:51:-;;;;;;:::i;:::-;;:::i;2126:114:7:-;;;:::i;1918:198:41:-;;;;;;:::i;:::-;;:::i;619:212:38:-;704:4;-1:-1:-1;;;;;;727:57:38;;-1:-1:-1;;;727:57:38;;:97;;;788:36;812:11;788:23;:36::i;:::-;720:104;;619:212;;;;:::o;2141:98:51:-;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;4346:12;:10;:12::i;:::-;4360:7;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:51;4238:166;;;;;:::o;3229:106::-;3316:12;;3229:106;:::o;1901:219:7:-;1259:12:41;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:41;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:41;;1240:68;;;;-1:-1:-1;;;1240:68:41;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1982:23:7;::::1;1974:60;;;;-1:-1:-1::0;;;1974:60:7::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2044:20:7;::::1;2067:5;2044:20:::0;;;:9:::1;:20;::::0;;;;;:28;;-1:-1:-1;;2044:28:7::1;::::0;;2087:26;::::1;::::0;2067:5;2087:26:::1;1901:219:::0;:::o;4871:478:51:-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:51;;5070:24;5097:19;;;:11;:19;;;;;5070:24;5117:12;:10;:12::i;:::-;-1:-1:-1;;;;;5097:33:51;-1:-1:-1;;;;;5097:33:51;;;;;;;;;;;;;5070:60;;5168:6;5148:16;:26;;5140:79;;;;-1:-1:-1;;;5140:79:51;;;;;;;:::i;:::-;5253:57;5262:6;5270:12;:10;:12::i;:::-;5303:6;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:51;;4871:478;-1:-1:-1;;;;4871:478:51:o;3977:121:37:-;4043:7;4069:12;;;:6;:12;;;;;;;;:22;;;3977:121::o;4348:145::-;4431:18;4444:4;4431:12;:18::i;:::-;2490:30;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;4461:25:::1;4472:4;4478:7;4461:10;:25::i;:::-;4348:145:::0;;;:::o;3078:91:51:-;3160:2;3078:91;:::o;5365:214:37:-;5471:12;:10;:12::i;:::-;-1:-1:-1;;;;;5460:23:37;:7;-1:-1:-1;;;;;5460:23:37;;5452:83;;;;-1:-1:-1;;;5452:83:37;;;;;;;:::i;:::-;5546:26;5558:4;5564:7;5546:11;:26::i;:::-;5365:214;;:::o;487:42:7:-;;;;;;;;;;;;;;;:::o;5744:212:51:-;5832:4;5848:80;5857:12;:10;:12::i;:::-;5871:7;5917:10;5880:11;:25;5892:12;:10;:12::i;:::-;-1:-1:-1;;;;;5880:25:51;;;;;;;;;;;;;;;;;-1:-1:-1;5880:25:51;;;:34;;;;;;;;;;:47;;;;:::i;:::-;5848:8;:80::i;1683:212:7:-;1259:12:41;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:41;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:41;;1240:68;;;;-1:-1:-1;;;1240:68:41;;;;;;;:::i;:::-;-1:-1:-1;;;;;1761:23:7;::::1;1753:60;;;;-1:-1:-1::0;;;1753:60:7::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1823:20:7;::::1;;::::0;;;:9:::1;:20;::::0;;;;;:27;;-1:-1:-1;;1823:27:7::1;1846:4;1823:27;::::0;;1865:23;::::1;::::0;1823:20;1865:23:::1;1683:212:::0;:::o;535:26::-;;;;;;:::o;1473:204::-;1550:34;423:24;1571:12;:10;:12::i;1550:34::-;1542:101;;;;-1:-1:-1;;;1542:101:7;;;;;;;:::i;:::-;1653:17;1659:2;1663:6;1653:5;:17::i;563:89:53:-;618:27;624:12;:10;:12::i;:::-;638:6;618:5;:27::i;:::-;563:89;:::o;3393:125:51:-;-1:-1:-1;;;;;3493:18:51;3467:7;3493:18;;;:9;:18;;;;;;;3393:125::o;1668:101:41:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:41;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:41;;1240:68;;;;-1:-1:-1;;;1240:68:41;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;958:361:53:-;1034:24;1061:32;1071:7;1080:12;:10;:12::i;1061:32::-;1034:59;;1131:6;1111:16;:26;;1103:75;;;;-1:-1:-1;;;1103:75:53;;;;;;;:::i;:::-;1212:58;1221:7;1230:12;:10;:12::i;:::-;1263:6;1244:16;:25;1212:8;:58::i;:::-;1290:22;1296:7;1305:6;1290:5;:22::i;1036:85:41:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:41;1036:85;:::o;1416:143:38:-;1498:7;1524:18;;;:12;:18;;;;;:28;;1546:5;1524:21;:28::i;:::-;1517:35;1416:143;-1:-1:-1;;;1416:143:38:o;2894:137:37:-;2972:4;2995:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2995:29:37;;;;;;;;;;;;;;;2894:137::o;2352:102:51:-;2408:13;2440:7;2433:14;;;;;:::i;2012:49:37:-;2057:4;2012:49;:::o;6443:405:51:-;6536:4;6552:24;6579:11;:25;6591:12;:10;:12::i;:::-;-1:-1:-1;;;;;6579:25:51;;;;;;;;;;;;;;;;;-1:-1:-1;6579:25:51;;;:34;;;;;;;;;;;-1:-1:-1;6631:35:51;;;;6623:85;;;;-1:-1:-1;;;6623:85:51;;;;;;;:::i;:::-;6742:67;6751:12;:10;:12::i;:::-;6765:7;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:51;;6443:405;-1:-1:-1;;;6443:405:51:o;3721:172::-;3807:4;3823:42;3833:12;:10;:12::i;:::-;3847:9;3858:6;3823:9;:42::i;2246:117:7:-;1259:12:41;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:41;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:41;;1240:68;;;;-1:-1:-1;;;1240:68:41;;;;;;;:::i;:::-;2302:14:7::1;:22:::0;;-1:-1:-1;;2302:22:7::1;::::0;;2339:17:::1;::::0;::::1;::::0;2319:5:::1;::::0;2339:17:::1;2246:117::o:0;1727:132:38:-;1799:7;1825:18;;;:12;:18;;;;;:27;;:25;:27::i;385:62:7:-;423:24;385:62;:::o;4727:147:37:-;4811:18;4824:4;4811:12;:18::i;:::-;2490:30;2501:4;2507:12;:10;:12::i;2490:30::-;4841:26:::1;4853:4;4859:7;4841:11;:26::i;3951:149:51:-:0;-1:-1:-1;;;;;4066:18:51;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149::o;2126:114:7:-;1259:12:41;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:41;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:41;;1240:68;;;;-1:-1:-1;;;1240:68:41;;;;;;;:::i;:::-;2181:14:7::1;:21:::0;;-1:-1:-1;;2181:21:7::1;2198:4;2181:21;::::0;;2217:16:::1;::::0;::::1;::::0;2181:14:::1;::::0;2217:16:::1;2126:114::o:0;1918:198:41:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:41;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:41;;1240:68;;;;-1:-1:-1;;;1240:68:41;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:41;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:41::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;6822:233:37:-:0;6905:22;6913:4;6919:7;6905;:22::i;:::-;6900:149;;6943:12;;;;6975:4;6943:12;;;;;;;;-1:-1:-1;;;;;6943:29:37;;;;;;;;;;:36;;-1:-1:-1;;6943:36:37;;;;;;7025:12;:10;:12::i;:::-;-1:-1:-1;;;;;6998:40:37;7016:7;-1:-1:-1;;;;;6998:40:37;7010:4;6998:40;;;;;;;;;;6822:233;;:::o;7612:150:63:-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:63;;7705:4;:50::i;2605:202:37:-;2690:4;-1:-1:-1;;;;;;2713:47:37;;-1:-1:-1;;;2713:47:37;;:87;;;2764:36;2788:11;2764:23;:36::i;640:96:58:-;719:10;640:96;:::o;10019:370:51:-;-1:-1:-1;;;;;10150:19:51;;10142:68;;;;-1:-1:-1;;;10142:68:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;10228:21:51;;10220:68;;;;-1:-1:-1;;;10220:68:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;10299:18:51;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10350:32;;;;;10329:6;;10350:32;:::i;:::-;;;;;;;;10019:370;;;:::o;2571:516:7:-;2865:14;;;;2864:15;:40;;;;;2897:7;:5;:7::i;:::-;-1:-1:-1;;;;;2883:21:7;:10;-1:-1:-1;;;;;2883:21:7;;;2864:40;2860:168;;;-1:-1:-1;;;;;2926:20:7;;;;;;:9;:20;;;;;;;;;:41;;-1:-1:-1;;;;;;2950:17:7;;;;;;:9;:17;;;;;;;;2926:41;2918:110;;;;-1:-1:-1;;;2918:110:7;;;;;;;:::i;:::-;3038:42;3054:6;3062:9;3073:6;3038:15;:42::i;3312:484:37:-;3392:22;3400:4;3406:7;3392;:22::i;:::-;3387:403;;3575:41;3603:7;-1:-1:-1;;;;;3575:41:37;3613:2;3575:19;:41::i;:::-;3687:38;3715:4;3722:2;3687:19;:38::i;:::-;3482:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3482:265:37;;;;;;;;;;-1:-1:-1;;;3430:349:37;;;;;;;:::i;1947:166:38:-;2034:31;2051:4;2057:7;2034:16;:31::i;:::-;2075:18;;;;:12;:18;;;;;:31;;2098:7;2075:22;:31::i;2202:171::-;2290:32;2308:4;2314:7;2290:17;:32::i;:::-;2332:18;;;;:12;:18;;;;;:34;;2358:7;2332:25;:34::i;8311:389:51:-;-1:-1:-1;;;;;8394:21:51;;8386:65;;;;-1:-1:-1;;;8386:65:51;;;;;;;:::i;:::-;8462:49;8491:1;8495:7;8504:6;8462:20;:49::i;:::-;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:51;;;;;;:9;:18;;;;;:28;;8576:6;;8554:18;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:51;;-1:-1:-1;;;;;8597:37:51;;;8614:1;;8597:37;;;;8627:6;;8597:37;:::i;:::-;;;;;;;;8645:48;8673:1;8677:7;8686:6;8645:19;:48::i;9020:576::-;-1:-1:-1;;;;;9103:21:51;;9095:67;;;;-1:-1:-1;;;9095:67:51;;;;;;;:::i;:::-;9173:49;9194:7;9211:1;9215:6;9173:20;:49::i;:::-;-1:-1:-1;;;;;9258:18:51;;9233:22;9258:18;;;:9;:18;;;;;;9294:24;;;;9286:71;;;;-1:-1:-1;;;9286:71:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;9391:18:51;;;;;;:9;:18;;;;;9412:23;;;9391:44;;9455:12;:22;;9429:6;;9391:18;9455:22;;9429:6;;9455:22;:::i;:::-;;;;-1:-1:-1;;9493:37:51;;9519:1;;-1:-1:-1;;;;;9493:37:51;;;;;;;9523:6;;9493:37;:::i;:::-;;;;;;;;9541:48;9561:7;9578:1;9582:6;9541:19;:48::i;2270:187:41:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:41;;;-1:-1:-1;;;;;;2378:17:41;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;8870:156:63:-;8944:7;8994:22;8998:3;9010:5;8994:3;:22::i;8413:115::-;8476:7;8502:19;8510:3;8502:7;:19::i;1697:404::-;1760:4;1781:21;1791:3;1796:5;1781:9;:21::i;:::-;1776:319;;-1:-1:-1;1818:23:63;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:63;2072:12;;829:155:60;-1:-1:-1;;;;;;937:40:60;;-1:-1:-1;;;937:40:60;829:155;;;:::o;7322:713:51:-;-1:-1:-1;;;;;7457:20:51;;7449:70;;;;-1:-1:-1;;;7449:70:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;7537:23:51;;7529:71;;;;-1:-1:-1;;;7529:71:51;;;;;;;:::i;:::-;7611:47;7632:6;7640:9;7651:6;7611:20;:47::i;:::-;-1:-1:-1;;;;;7693:17:51;;7669:21;7693:17;;;:9;:17;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;7828:17:51;;;;;;;:9;:17;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:17;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:51;7945:6;-1:-1:-1;;;;;7936:35:51;;7964:6;7936:35;;;;;;:::i;:::-;;;;;;;;7982:46;8002:6;8010:9;8021:6;7982:19;:46::i;:::-;7322:713;;;;:::o;1588:441:59:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;-1:-1:-1;;;1710:25:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:59;;1688:47;;-1:-1:-1;;;1745:6:59;1752:1;1745:9;;;;;;-1:-1:-1;;;1745:9:59;;;;;;;;;;;;:15;-1:-1:-1;;;;;1745:15:59;;;;;;;;;-1:-1:-1;;;1770:6:59;1777:1;1770:9;;;;;;-1:-1:-1;;;1770:9:59;;;;;;;;;;;;:15;-1:-1:-1;;;;;1770:15:59;;;;;;;;-1:-1:-1;1800:9:59;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:59;1887:3;1879:11;1866:25;;;;;-1:-1:-1;;;1866:25:59;;;;;;;;;;;;1854:6;1861:1;1854:9;;;;;;-1:-1:-1;;;1854:9:59;;;;;;;;;;;;:37;-1:-1:-1;;;;;1854:37:59;;;;;;;;-1:-1:-1;1915:1:59;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:59;;1936:55;;;;-1:-1:-1;;;1936:55:59;;;;;;;:::i;7180:234:37:-;7263:22;7271:4;7277:7;7263;:22::i;:::-;7259:149;;;7333:5;7301:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7301:29:37;;;;;;;;;:37;;-1:-1:-1;;7301:37:37;;;7384:12;:10;:12::i;:::-;-1:-1:-1;;;;;7357:40:37;7375:7;-1:-1:-1;;;;;7357:40:37;7369:4;7357:40;;;;;;;;;;7180:234;;:::o;7930:156:63:-;8003:4;8026:53;8034:3;-1:-1:-1;;;;;8054:23:63;;8026:7;:53::i;2369:196:7:-;2514:44;2541:4;2547:2;2551:6;2514:26;:44::i;4395:118:63:-;4462:7;4488:3;:11;;4500:5;4488:18;;;;;;-1:-1:-1;;;4488:18:63;;;;;;;;;;;;;;;;;4481:25;;4395:118;;;;:::o;3946:107::-;4028:18;;3946:107::o;3738:127::-;3811:4;3834:19;;;:12;;;;;:19;;;;;;:24;;;3738:127::o;2269:1388::-;2335:4;2472:19;;;:12;;;:19;;;;;;2506:15;;2502:1149;;2875:21;2899:14;2912:1;2899:10;:14;:::i;:::-;2947:18;;2875:38;;-1:-1:-1;2927:17:63;;2947:22;;2968:1;;2947:22;:::i;:::-;2927:42;;3001:13;2988:9;:26;2984:398;;3034:17;3054:3;:11;;3066:9;3054:22;;;;;;-1:-1:-1;;;3054:22:63;;;;;;;;;;;;;;;;;3034:42;;3205:9;3176:3;:11;;3188:13;3176:26;;;;;;-1:-1:-1;;;3176:26:63;;;;;;;;;;;;;;;;;;;;:38;;;;3288:23;;;:12;;;:23;;;;;:36;;;2984:398;3460:17;;:3;;:17;;;-1:-1:-1;;;3460:17:63;;;;;;;;;;;;;;;;;;;;;;;;;;3552:3;:12;;:19;3565:5;3552:19;;;;;;;;;;;3545:26;;;3593:4;3586:11;;;;;;;2502:1149;3635:5;3628:12;;;;;14:175:65;84:20;;-1:-1:-1;;;;;133:31:65;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:65:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:65;;1364:120;-1:-1:-1;1364:120:65:o;1489:266::-;;;1618:2;1606:9;1597:7;1593:23;1589:32;1586:2;;;1639:6;1631;1624:22;1586:2;1680:9;1667:23;1657:33;;1709:40;1745:2;1734:9;1730:18;1709:40;:::i;1760:258::-;;;1889:2;1877:9;1868:7;1864:23;1860:32;1857:2;;;1910:6;1902;1895:22;1857:2;-1:-1:-1;;1938:23:65;;;2008:2;1993:18;;;1980:32;;-1:-1:-1;1847:171:65:o;2023:306::-;;2134:2;2122:9;2113:7;2109:23;2105:32;2102:2;;;2155:6;2147;2140:22;2102:2;2186:23;;-1:-1:-1;;;;;;2238:32:65;;2228:43;;2218:2;;2290:6;2282;2275:22;2529:786;;2940:25;2935:3;2928:38;2995:6;2989:13;3011:62;3066:6;3061:2;3056:3;3052:12;3045:4;3037:6;3033:17;3011:62;:::i;:::-;-1:-1:-1;;;3132:2:65;3092:16;;;3124:11;;;3117:40;3182:13;;3204:63;3182:13;3253:2;3245:11;;3238:4;3226:17;;3204:63;:::i;:::-;3287:17;3306:2;3283:26;;2918:397;-1:-1:-1;;;;2918:397:65:o;3320:203::-;-1:-1:-1;;;;;3484:32:65;;;;3466:51;;3454:2;3439:18;;3421:102::o;3528:187::-;3693:14;;3686:22;3668:41;;3656:2;3641:18;;3623:92::o;3720:177::-;3866:25;;;3854:2;3839:18;;3821:76::o;3902:383::-;;4051:2;4040:9;4033:21;4083:6;4077:13;4126:6;4121:2;4110:9;4106:18;4099:34;4142:66;4201:6;4196:2;4185:9;4181:18;4176:2;4168:6;4164:15;4142:66;:::i;:::-;4269:2;4248:15;-1:-1:-1;;4244:29:65;4229:45;;;;4276:2;4225:54;;4023:262;-1:-1:-1;;4023:262:65:o;4290:356::-;4492:2;4474:21;;;4511:18;;;4504:30;4570:34;4565:2;4550:18;;4543:62;4637:2;4622:18;;4464:182::o;4651:399::-;4853:2;4835:21;;;4892:2;4872:18;;;4865:30;4931:34;4926:2;4911:18;;4904:62;-1:-1:-1;;;4997:2:65;4982:18;;4975:33;5040:3;5025:19;;4825:225::o;5055:398::-;5257:2;5239:21;;;5296:2;5276:18;;;5269:30;5335:34;5330:2;5315:18;;5308:62;-1:-1:-1;;;5401:2:65;5386:18;;5379:32;5443:3;5428:19;;5229:224::o;5458:402::-;5660:2;5642:21;;;5699:2;5679:18;;;5672:30;5738:34;5733:2;5718:18;;5711:62;-1:-1:-1;;;5804:2:65;5789:18;;5782:36;5850:3;5835:19;;5632:228::o;5865:398::-;6067:2;6049:21;;;6106:2;6086:18;;;6079:30;6145:34;6140:2;6125:18;;6118:62;-1:-1:-1;;;6211:2:65;6196:18;;6189:32;6253:3;6238:19;;6039:224::o;6268:402::-;6470:2;6452:21;;;6509:2;6489:18;;;6482:30;6548:34;6543:2;6528:18;;6521:62;-1:-1:-1;;;6614:2:65;6599:18;;6592:36;6660:3;6645:19;;6442:228::o;6675:348::-;6877:2;6859:21;;;6916:2;6896:18;;;6889:30;6955:26;6950:2;6935:18;;6928:54;7014:2;6999:18;;6849:174::o;7028:404::-;7230:2;7212:21;;;7269:2;7249:18;;;7242:30;7308:34;7303:2;7288:18;;7281:62;-1:-1:-1;;;7374:2:65;7359:18;;7352:38;7422:3;7407:19;;7202:230::o;7437:356::-;7639:2;7621:21;;;7658:18;;;7651:30;7717:34;7712:2;7697:18;;7690:62;7784:2;7769:18;;7611:182::o;7798:418::-;8000:2;7982:21;;;8039:2;8019:18;;;8012:30;8078:34;8073:2;8058:18;;8051:62;-1:-1:-1;;;8144:2:65;8129:18;;8122:52;8206:3;8191:19;;7972:244::o;8221:400::-;8423:2;8405:21;;;8462:2;8442:18;;;8435:30;8501:34;8496:2;8481:18;;8474:62;-1:-1:-1;;;8567:2:65;8552:18;;8545:34;8611:3;8596:19;;8395:226::o;8626:397::-;8828:2;8810:21;;;8867:2;8847:18;;;8840:30;8906:34;8901:2;8886:18;;8879:62;-1:-1:-1;;;8972:2:65;8957:18;;8950:31;9013:3;8998:19;;8800:223::o;9028:401::-;9230:2;9212:21;;;9269:2;9249:18;;;9242:30;9308:34;9303:2;9288:18;;9281:62;-1:-1:-1;;;9374:2:65;9359:18;;9352:35;9419:3;9404:19;;9202:227::o;9434:400::-;9636:2;9618:21;;;9675:2;9655:18;;;9648:30;9714:34;9709:2;9694:18;;9687:62;-1:-1:-1;;;9780:2:65;9765:18;;9758:34;9824:3;9809:19;;9608:226::o;9839:420::-;10041:2;10023:21;;;10080:2;10060:18;;;10053:30;10119:34;10114:2;10099:18;;10092:62;10190:26;10185:2;10170:18;;10163:54;10249:3;10234:19;;10013:246::o;10264:401::-;10466:2;10448:21;;;10505:2;10485:18;;;10478:30;10544:34;10539:2;10524:18;;10517:62;-1:-1:-1;;;10610:2:65;10595:18;;10588:35;10655:3;10640:19;;10438:227::o;10670:411::-;10872:2;10854:21;;;10911:2;10891:18;;;10884:30;10950:34;10945:2;10930:18;;10923:62;-1:-1:-1;;;11016:2:65;11001:18;;10994:45;11071:3;11056:19;;10844:237::o;11086:355::-;11288:2;11270:21;;;11327:2;11307:18;;;11300:30;11366:33;11361:2;11346:18;;11339:61;11432:2;11417:18;;11260:181::o;11628:184::-;11800:4;11788:17;;;;11770:36;;11758:2;11743:18;;11725:87::o;11817:128::-;;11888:1;11884:6;11881:1;11878:13;11875:2;;;11894:18;;:::i;:::-;-1:-1:-1;11930:9:65;;11865:80::o;11950:168::-;;12056:1;12052;12048:6;12044:14;12041:1;12038:21;12033:1;12026:9;12019:17;12015:45;12012:2;;;12063:18;;:::i;:::-;-1:-1:-1;12103:9:65;;12002:116::o;12123:125::-;;12191:1;12188;12185:8;12182:2;;;12196:18;;:::i;:::-;-1:-1:-1;12233:9:65;;12172:76::o;12253:258::-;12325:1;12335:113;12349:6;12346:1;12343:13;12335:113;;;12425:11;;;12419:18;12406:11;;;12399:39;12371:2;12364:10;12335:113;;;12466:6;12463:1;12460:13;12457:2;;;-1:-1:-1;;12501:1:65;12483:16;;12476:27;12306:205::o;12516:136::-;;12583:5;12573:2;;12592:18;;:::i;:::-;-1:-1:-1;;;12628:18:65;;12563:89::o;12657:380::-;12742:1;12732:12;;12789:1;12779:12;;;12800:2;;12854:4;12846:6;12842:17;12832:27;;12800:2;12907;12899:6;12896:14;12876:18;12873:38;12870:2;;;12953:10;12948:3;12944:20;12941:1;12934:31;12988:4;12985:1;12978:15;13016:4;13013:1;13006:15;12870:2;;12712:325;;;:::o;13042:127::-;13103:10;13098:3;13094:20;13091:1;13084:31;13134:4;13131:1;13124:15;13158:4;13155:1;13148:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract NUTToken is Ownable, AccessControlEnumerable, ERC20Burnable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    // address => hasWhitelisted\n    mapping (address => bool) public whiteList;\n    bool public transferOpened;\n\n    event SetWhiteList(address indexed contractAddress);\n    event RemoveWhiteList(address indexed contractAddress);\n    event EnableTransfer();\n    event DisableTransfer();\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * See {ERC20-constructor}.\n     */\n    constructor(\n        string memory name, \n        string memory symbol, \n        uint256 initialSupply,\n        address owner\n    ) ERC20(name, symbol) {\n        require(owner != address(0), \"Receive address cant be 0\");\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        _setupRole(MINTER_ROLE, _msgSender());\n        _mint(owner, initialSupply);\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     *\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 amount) external virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n    function setWhiteList(address _contract) external onlyOwner {\n        require(_contract != address(0), 'Invalid contract address');\n        whiteList[_contract] = true;\n        emit SetWhiteList(_contract);\n    }\n\n    function removeWhiteList(address _contract) external onlyOwner {\n        require(_contract != address(0), 'Invalid contract address');\n        whiteList[_contract] = false;\n        emit RemoveWhiteList(_contract);\n    }\n\n    function enableTransfer() external onlyOwner {\n        transferOpened = true;\n        emit EnableTransfer();\n    }\n\n    function disableTransfer() external onlyOwner {\n        transferOpened = false;\n        emit DisableTransfer();\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override(ERC20) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual override {\n        // before NUT enable transfer to public, only owner can make  transfer(for airdrop),\n        // other NUT holders can only transfer to whitlisted recipient(join staking etc.)\n        if (!transferOpened && msg.sender != owner())\n            require(whiteList[recipient] || whiteList[sender], 'Permission denied: sender or recipient is not white list');\n        super._transfer(sender, recipient, amount);\n    }\n}\n",
  "sourcePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/NUTToken.sol",
  "ast": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/NUTToken.sol",
    "exportedSymbols": {
      "AccessControl": [
        11916
      ],
      "AccessControlEnumerable": [
        12041
      ],
      "Context": [
        15168
      ],
      "ERC165": [
        15395
      ],
      "ERC20": [
        14511
      ],
      "ERC20Burnable": [
        14651
      ],
      "EnumerableSet": [
        16318
      ],
      "IAccessControl": [
        12114
      ],
      "IAccessControlEnumerable": [
        12139
      ],
      "IERC165": [
        15407
      ],
      "IERC20": [
        14589
      ],
      "IERC20Metadata": [
        14713
      ],
      "NUTToken": [
        5185
      ],
      "Ownable": [
        12244
      ],
      "Strings": [
        15371
      ]
    },
    "id": 5186,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4943,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 4944,
        "nodeType": "ImportDirective",
        "scope": 5186,
        "sourceUnit": 14652,
        "src": "56:74:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4945,
        "nodeType": "ImportDirective",
        "scope": 5186,
        "sourceUnit": 14512,
        "src": "131:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "id": 4946,
        "nodeType": "ImportDirective",
        "scope": 5186,
        "sourceUnit": 12042,
        "src": "187:68:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4947,
        "nodeType": "ImportDirective",
        "scope": 5186,
        "sourceUnit": 12245,
        "src": "256:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4948,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12244,
              "src": "331:7:7"
            },
            "id": 4949,
            "nodeType": "InheritanceSpecifier",
            "src": "331:7:7"
          },
          {
            "baseName": {
              "id": 4950,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12041,
              "src": "340:23:7"
            },
            "id": 4951,
            "nodeType": "InheritanceSpecifier",
            "src": "340:23:7"
          },
          {
            "baseName": {
              "id": 4952,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14651,
              "src": "365:13:7"
            },
            "id": 4953,
            "nodeType": "InheritanceSpecifier",
            "src": "365:13:7"
          }
        ],
        "contractDependencies": [
          11916,
          12041,
          12114,
          12139,
          12244,
          14511,
          14589,
          14651,
          14713,
          15168,
          15395,
          15407
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5185,
        "linearizedBaseContracts": [
          5185,
          14651,
          14511,
          14713,
          14589,
          12041,
          11916,
          15395,
          15407,
          12139,
          12114,
          12244,
          15168
        ],
        "name": "NUTToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 4958,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 5185,
            "src": "385:62:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4954,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "385:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 4956,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "433:13:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 4955,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "423:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4957,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "423:24:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "372c12b1",
            "id": 4962,
            "mutability": "mutable",
            "name": "whiteList",
            "nodeType": "VariableDeclaration",
            "scope": 5185,
            "src": "487:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4961,
              "keyType": {
                "id": 4959,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "496:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "487:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 4960,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "507:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3a1302c3",
            "id": 4964,
            "mutability": "mutable",
            "name": "transferOpened",
            "nodeType": "VariableDeclaration",
            "scope": 5185,
            "src": "535:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4963,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "535:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 4968,
            "name": "SetWhiteList",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4966,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4968,
                  "src": "587:31:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:33:7"
            },
            "src": "568:52:7"
          },
          {
            "anonymous": false,
            "id": 4972,
            "name": "RemoveWhiteList",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4970,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4972,
                  "src": "647:31:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "646:33:7"
            },
            "src": "625:55:7"
          },
          {
            "anonymous": false,
            "id": 4974,
            "name": "EnableTransfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:2:7"
            },
            "src": "685:23:7"
          },
          {
            "anonymous": false,
            "id": 4976,
            "name": "DisableTransfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:2:7"
            },
            "src": "713:24:7"
          },
          {
            "body": {
              "id": 5019,
              "nodeType": "Block",
              "src": "1072:212:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4993,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4985,
                          "src": "1090:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1107:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1099:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4994,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1099:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1099:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1090:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265636569766520616464726573732063616e742062652030",
                        "id": 4999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1111:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5514e4f63e034542a605bbe51899225d6997f8ea2199a2bf737bda2c28bc1143",
                          "typeString": "literal_string \"Receive address cant be 0\""
                        },
                        "value": "Receive address cant be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5514e4f63e034542a605bbe51899225d6997f8ea2199a2bf737bda2c28bc1143",
                          "typeString": "literal_string \"Receive address cant be 0\""
                        }
                      ],
                      "id": 4992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1082:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5001,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5003,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11635,
                        "src": "1160:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5004,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15158,
                          "src": "1180:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1180:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5002,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11824,
                      "src": "1149:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 5006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1149:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5007,
                  "nodeType": "ExpressionStatement",
                  "src": "1149:44:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5009,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4958,
                        "src": "1214:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5010,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15158,
                          "src": "1227:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1227:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5008,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11824,
                      "src": "1203:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 5012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5013,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:37:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5015,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4985,
                        "src": "1256:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5016,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4983,
                        "src": "1263:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5014,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14371,
                      "src": "1250:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1250:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5018,
                  "nodeType": "ExpressionStatement",
                  "src": "1250:27:7"
                }
              ]
            },
            "documentation": {
              "id": 4977,
              "nodeType": "StructuredDocumentation",
              "src": "743:172:7",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."
            },
            "id": 5020,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4988,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4979,
                    "src": "1058:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 4989,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4981,
                    "src": "1064:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 4990,
                "modifierName": {
                  "id": 4987,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14511,
                  "src": "1052:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1052:19:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4979,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 5020,
                  "src": "941:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4978,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4981,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 5020,
                  "src": "970:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4980,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4983,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 5020,
                  "src": "1001:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4985,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 5020,
                  "src": "1032:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "931:120:7"
            },
            "returnParameters": {
              "id": 4991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1072:0:7"
            },
            "scope": 5185,
            "src": "920:364:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5042,
              "nodeType": "Block",
              "src": "1532:145:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5030,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4958,
                            "src": "1558:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5031,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15158,
                              "src": "1571:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1571:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5029,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11689,
                          "src": "1550:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 5033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1550:34:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 5034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1586:56:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        }
                      ],
                      "id": 5028,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1542:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1542:101:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5036,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:101:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5038,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5023,
                        "src": "1659:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5039,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5025,
                        "src": "1663:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5037,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14371,
                      "src": "1653:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5041,
                  "nodeType": "ExpressionStatement",
                  "src": "1653:17:7"
                }
              ]
            },
            "documentation": {
              "id": 5021,
              "nodeType": "StructuredDocumentation",
              "src": "1290:178:7",
              "text": " @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "40c10f19",
            "id": 5043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5023,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5043,
                  "src": "1487:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5025,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5043,
                  "src": "1499:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1486:28:7"
            },
            "returnParameters": {
              "id": 5027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1532:0:7"
            },
            "scope": 5185,
            "src": "1473:204:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5070,
              "nodeType": "Block",
              "src": "1743:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5051,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5045,
                          "src": "1761:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1782:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1774:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5052,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1774:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1774:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1761:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6e74726163742061646472657373",
                        "id": 5057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1786:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
                          "typeString": "literal_string \"Invalid contract address\""
                        },
                        "value": "Invalid contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
                          "typeString": "literal_string \"Invalid contract address\""
                        }
                      ],
                      "id": 5050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1753:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1753:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5059,
                  "nodeType": "ExpressionStatement",
                  "src": "1753:60:7"
                },
                {
                  "expression": {
                    "id": 5064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5060,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4962,
                        "src": "1823:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5062,
                      "indexExpression": {
                        "id": 5061,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5045,
                        "src": "1833:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1823:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 5063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1846:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1823:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5065,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:27:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5067,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5045,
                        "src": "1878:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5066,
                      "name": "SetWhiteList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4968,
                      "src": "1865:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1865:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5069,
                  "nodeType": "EmitStatement",
                  "src": "1860:28:7"
                }
              ]
            },
            "functionSelector": "39e899ee",
            "id": 5071,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5048,
                "modifierName": {
                  "id": 5047,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12186,
                  "src": "1733:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1733:9:7"
              }
            ],
            "name": "setWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5045,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5071,
                  "src": "1705:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1704:19:7"
            },
            "returnParameters": {
              "id": 5049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:0:7"
            },
            "scope": 5185,
            "src": "1683:212:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5098,
              "nodeType": "Block",
              "src": "1964:156:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5079,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5073,
                          "src": "1982:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2003:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1995:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5080,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1995:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1995:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1982:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6e74726163742061646472657373",
                        "id": 5085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2007:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
                          "typeString": "literal_string \"Invalid contract address\""
                        },
                        "value": "Invalid contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
                          "typeString": "literal_string \"Invalid contract address\""
                        }
                      ],
                      "id": 5078,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1974:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1974:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5087,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:60:7"
                },
                {
                  "expression": {
                    "id": 5092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5088,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4962,
                        "src": "2044:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5090,
                      "indexExpression": {
                        "id": 5089,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5073,
                        "src": "2054:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2044:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 5091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2067:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2044:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5093,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:28:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5095,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5073,
                        "src": "2103:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5094,
                      "name": "RemoveWhiteList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4972,
                      "src": "2087:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5097,
                  "nodeType": "EmitStatement",
                  "src": "2082:31:7"
                }
              ]
            },
            "functionSelector": "2042e5c2",
            "id": 5099,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5076,
                "modifierName": {
                  "id": 5075,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12186,
                  "src": "1954:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1954:9:7"
              }
            ],
            "name": "removeWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5073,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "1926:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1925:19:7"
            },
            "returnParameters": {
              "id": 5077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1964:0:7"
            },
            "scope": 5185,
            "src": "1901:219:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5111,
              "nodeType": "Block",
              "src": "2171:69:7",
              "statements": [
                {
                  "expression": {
                    "id": 5106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5104,
                      "name": "transferOpened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4964,
                      "src": "2181:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 5105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2198:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2181:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5107,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:21:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5108,
                      "name": "EnableTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4974,
                      "src": "2217:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2217:16:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5110,
                  "nodeType": "EmitStatement",
                  "src": "2212:21:7"
                }
              ]
            },
            "functionSelector": "f1b50c1d",
            "id": 5112,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5102,
                "modifierName": {
                  "id": 5101,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12186,
                  "src": "2161:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2161:9:7"
              }
            ],
            "name": "enableTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2149:2:7"
            },
            "returnParameters": {
              "id": 5103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2171:0:7"
            },
            "scope": 5185,
            "src": "2126:114:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5124,
              "nodeType": "Block",
              "src": "2292:71:7",
              "statements": [
                {
                  "expression": {
                    "id": 5119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5117,
                      "name": "transferOpened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4964,
                      "src": "2302:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 5118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2319:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2302:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5120,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:22:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5121,
                      "name": "DisableTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4976,
                      "src": "2339:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2339:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5123,
                  "nodeType": "EmitStatement",
                  "src": "2334:22:7"
                }
              ]
            },
            "functionSelector": "b187984f",
            "id": 5125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5115,
                "modifierName": {
                  "id": 5114,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12186,
                  "src": "2282:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2282:9:7"
              }
            ],
            "name": "disableTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2270:2:7"
            },
            "returnParameters": {
              "id": 5116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2292:0:7"
            },
            "scope": 5185,
            "src": "2246:117:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14499
            ],
            "body": {
              "id": 5144,
              "nodeType": "Block",
              "src": "2504:61:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5139,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5127,
                        "src": "2541:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5140,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5129,
                        "src": "2547:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5141,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5131,
                        "src": "2551:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5136,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2514:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NUTToken_$5185_$",
                          "typeString": "type(contract super NUTToken)"
                        }
                      },
                      "id": 5138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14499,
                      "src": "2514:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2514:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5143,
                  "nodeType": "ExpressionStatement",
                  "src": "2514:44:7"
                }
              ]
            },
            "id": 5145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5134,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5133,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14511,
                  "src": "2497:5:7"
                }
              ],
              "src": "2488:15:7"
            },
            "parameters": {
              "id": 5132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5127,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "2408:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2408:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5129,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "2430:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5131,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "2450:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2398:72:7"
            },
            "returnParameters": {
              "id": 5135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2504:0:7"
            },
            "scope": 5185,
            "src": "2369:196:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14315
            ],
            "body": {
              "id": 5183,
              "nodeType": "Block",
              "src": "2667:420:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2864:15:7",
                      "subExpression": {
                        "id": 5155,
                        "name": "transferOpened",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4964,
                        "src": "2865:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 5157,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2883:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2883:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5159,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12172,
                          "src": "2897:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2897:7:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2883:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2864:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5174,
                  "nodeType": "IfStatement",
                  "src": "2860:168:7",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 5164,
                              "name": "whiteList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4962,
                              "src": "2926:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 5166,
                            "indexExpression": {
                              "id": 5165,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "2936:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2926:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 5167,
                              "name": "whiteList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4962,
                              "src": "2950:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 5169,
                            "indexExpression": {
                              "id": 5168,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5147,
                              "src": "2960:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2950:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2926:41:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5065726d697373696f6e2064656e6965643a2073656e646572206f7220726563697069656e74206973206e6f74207768697465206c697374",
                          "id": 5171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2969:58:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_cbbfa2077b554500dd80ca8065be88fb4590418c21f1e772f7e688306e81acc8",
                            "typeString": "literal_string \"Permission denied: sender or recipient is not white list\""
                          },
                          "value": "Permission denied: sender or recipient is not white list"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_cbbfa2077b554500dd80ca8065be88fb4590418c21f1e772f7e688306e81acc8",
                            "typeString": "literal_string \"Permission denied: sender or recipient is not white list\""
                          }
                        ],
                        "id": 5163,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "2918:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 5172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2918:110:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5173,
                    "nodeType": "ExpressionStatement",
                    "src": "2918:110:7"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5178,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5147,
                        "src": "3054:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5179,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5149,
                        "src": "3062:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5180,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5151,
                        "src": "3073:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5175,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3038:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NUTToken_$5185_$",
                          "typeString": "type(contract super NUTToken)"
                        }
                      },
                      "id": 5177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14315,
                      "src": "3038:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5182,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:42:7"
                }
              ]
            },
            "id": 5184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5153,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2658:8:7"
            },
            "parameters": {
              "id": 5152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5147,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "2590:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2590:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5149,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "2606:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2606:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5151,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "2625:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2625:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2589:51:7"
            },
            "returnParameters": {
              "id": 5154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2667:0:7"
            },
            "scope": 5185,
            "src": "2571:516:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 5186,
        "src": "310:2779:7"
      }
    ],
    "src": "32:3058:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/NUTToken.sol",
    "exportedSymbols": {
      "AccessControl": [
        11916
      ],
      "AccessControlEnumerable": [
        12041
      ],
      "Context": [
        15168
      ],
      "ERC165": [
        15395
      ],
      "ERC20": [
        14511
      ],
      "ERC20Burnable": [
        14651
      ],
      "EnumerableSet": [
        16318
      ],
      "IAccessControl": [
        12114
      ],
      "IAccessControlEnumerable": [
        12139
      ],
      "IERC165": [
        15407
      ],
      "IERC20": [
        14589
      ],
      "IERC20Metadata": [
        14713
      ],
      "NUTToken": [
        5185
      ],
      "Ownable": [
        12244
      ],
      "Strings": [
        15371
      ]
    },
    "id": 5186,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4943,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 4944,
        "nodeType": "ImportDirective",
        "scope": 5186,
        "sourceUnit": 14652,
        "src": "56:74:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4945,
        "nodeType": "ImportDirective",
        "scope": 5186,
        "sourceUnit": 14512,
        "src": "131:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "id": 4946,
        "nodeType": "ImportDirective",
        "scope": 5186,
        "sourceUnit": 12042,
        "src": "187:68:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4947,
        "nodeType": "ImportDirective",
        "scope": 5186,
        "sourceUnit": 12245,
        "src": "256:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4948,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12244,
              "src": "331:7:7"
            },
            "id": 4949,
            "nodeType": "InheritanceSpecifier",
            "src": "331:7:7"
          },
          {
            "baseName": {
              "id": 4950,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12041,
              "src": "340:23:7"
            },
            "id": 4951,
            "nodeType": "InheritanceSpecifier",
            "src": "340:23:7"
          },
          {
            "baseName": {
              "id": 4952,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14651,
              "src": "365:13:7"
            },
            "id": 4953,
            "nodeType": "InheritanceSpecifier",
            "src": "365:13:7"
          }
        ],
        "contractDependencies": [
          11916,
          12041,
          12114,
          12139,
          12244,
          14511,
          14589,
          14651,
          14713,
          15168,
          15395,
          15407
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5185,
        "linearizedBaseContracts": [
          5185,
          14651,
          14511,
          14713,
          14589,
          12041,
          11916,
          15395,
          15407,
          12139,
          12114,
          12244,
          15168
        ],
        "name": "NUTToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 4958,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 5185,
            "src": "385:62:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4954,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "385:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 4956,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "433:13:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 4955,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "423:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4957,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "423:24:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "372c12b1",
            "id": 4962,
            "mutability": "mutable",
            "name": "whiteList",
            "nodeType": "VariableDeclaration",
            "scope": 5185,
            "src": "487:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4961,
              "keyType": {
                "id": 4959,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "496:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "487:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 4960,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "507:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3a1302c3",
            "id": 4964,
            "mutability": "mutable",
            "name": "transferOpened",
            "nodeType": "VariableDeclaration",
            "scope": 5185,
            "src": "535:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4963,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "535:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 4968,
            "name": "SetWhiteList",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4966,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4968,
                  "src": "587:31:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:33:7"
            },
            "src": "568:52:7"
          },
          {
            "anonymous": false,
            "id": 4972,
            "name": "RemoveWhiteList",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4970,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4972,
                  "src": "647:31:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "646:33:7"
            },
            "src": "625:55:7"
          },
          {
            "anonymous": false,
            "id": 4974,
            "name": "EnableTransfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:2:7"
            },
            "src": "685:23:7"
          },
          {
            "anonymous": false,
            "id": 4976,
            "name": "DisableTransfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:2:7"
            },
            "src": "713:24:7"
          },
          {
            "body": {
              "id": 5019,
              "nodeType": "Block",
              "src": "1072:212:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4993,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4985,
                          "src": "1090:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1107:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1099:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4994,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1099:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1099:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1090:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265636569766520616464726573732063616e742062652030",
                        "id": 4999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1111:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5514e4f63e034542a605bbe51899225d6997f8ea2199a2bf737bda2c28bc1143",
                          "typeString": "literal_string \"Receive address cant be 0\""
                        },
                        "value": "Receive address cant be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5514e4f63e034542a605bbe51899225d6997f8ea2199a2bf737bda2c28bc1143",
                          "typeString": "literal_string \"Receive address cant be 0\""
                        }
                      ],
                      "id": 4992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1082:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5001,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5003,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11635,
                        "src": "1160:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5004,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15158,
                          "src": "1180:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1180:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5002,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11824,
                      "src": "1149:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 5006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1149:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5007,
                  "nodeType": "ExpressionStatement",
                  "src": "1149:44:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5009,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4958,
                        "src": "1214:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5010,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15158,
                          "src": "1227:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1227:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5008,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11824,
                      "src": "1203:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 5012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5013,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:37:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5015,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4985,
                        "src": "1256:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5016,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4983,
                        "src": "1263:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5014,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14371,
                      "src": "1250:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1250:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5018,
                  "nodeType": "ExpressionStatement",
                  "src": "1250:27:7"
                }
              ]
            },
            "documentation": {
              "id": 4977,
              "nodeType": "StructuredDocumentation",
              "src": "743:172:7",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."
            },
            "id": 5020,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4988,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4979,
                    "src": "1058:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 4989,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4981,
                    "src": "1064:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 4990,
                "modifierName": {
                  "id": 4987,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14511,
                  "src": "1052:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1052:19:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4979,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 5020,
                  "src": "941:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4978,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4981,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 5020,
                  "src": "970:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4980,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4983,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 5020,
                  "src": "1001:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4985,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 5020,
                  "src": "1032:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "931:120:7"
            },
            "returnParameters": {
              "id": 4991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1072:0:7"
            },
            "scope": 5185,
            "src": "920:364:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5042,
              "nodeType": "Block",
              "src": "1532:145:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5030,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4958,
                            "src": "1558:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5031,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15158,
                              "src": "1571:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1571:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5029,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11689,
                          "src": "1550:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 5033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1550:34:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 5034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1586:56:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        }
                      ],
                      "id": 5028,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1542:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1542:101:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5036,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:101:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5038,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5023,
                        "src": "1659:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5039,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5025,
                        "src": "1663:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5037,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14371,
                      "src": "1653:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5041,
                  "nodeType": "ExpressionStatement",
                  "src": "1653:17:7"
                }
              ]
            },
            "documentation": {
              "id": 5021,
              "nodeType": "StructuredDocumentation",
              "src": "1290:178:7",
              "text": " @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "40c10f19",
            "id": 5043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5023,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5043,
                  "src": "1487:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5025,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5043,
                  "src": "1499:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1486:28:7"
            },
            "returnParameters": {
              "id": 5027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1532:0:7"
            },
            "scope": 5185,
            "src": "1473:204:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5070,
              "nodeType": "Block",
              "src": "1743:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5051,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5045,
                          "src": "1761:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1782:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1774:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5052,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1774:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1774:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1761:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6e74726163742061646472657373",
                        "id": 5057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1786:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
                          "typeString": "literal_string \"Invalid contract address\""
                        },
                        "value": "Invalid contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
                          "typeString": "literal_string \"Invalid contract address\""
                        }
                      ],
                      "id": 5050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1753:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1753:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5059,
                  "nodeType": "ExpressionStatement",
                  "src": "1753:60:7"
                },
                {
                  "expression": {
                    "id": 5064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5060,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4962,
                        "src": "1823:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5062,
                      "indexExpression": {
                        "id": 5061,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5045,
                        "src": "1833:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1823:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 5063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1846:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1823:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5065,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:27:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5067,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5045,
                        "src": "1878:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5066,
                      "name": "SetWhiteList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4968,
                      "src": "1865:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1865:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5069,
                  "nodeType": "EmitStatement",
                  "src": "1860:28:7"
                }
              ]
            },
            "functionSelector": "39e899ee",
            "id": 5071,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5048,
                "modifierName": {
                  "id": 5047,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12186,
                  "src": "1733:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1733:9:7"
              }
            ],
            "name": "setWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5045,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5071,
                  "src": "1705:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1704:19:7"
            },
            "returnParameters": {
              "id": 5049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:0:7"
            },
            "scope": 5185,
            "src": "1683:212:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5098,
              "nodeType": "Block",
              "src": "1964:156:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5079,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5073,
                          "src": "1982:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2003:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1995:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5080,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1995:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1995:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1982:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6e74726163742061646472657373",
                        "id": 5085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2007:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
                          "typeString": "literal_string \"Invalid contract address\""
                        },
                        "value": "Invalid contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
                          "typeString": "literal_string \"Invalid contract address\""
                        }
                      ],
                      "id": 5078,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1974:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1974:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5087,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:60:7"
                },
                {
                  "expression": {
                    "id": 5092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5088,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4962,
                        "src": "2044:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5090,
                      "indexExpression": {
                        "id": 5089,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5073,
                        "src": "2054:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2044:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 5091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2067:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2044:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5093,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:28:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5095,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5073,
                        "src": "2103:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5094,
                      "name": "RemoveWhiteList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4972,
                      "src": "2087:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5097,
                  "nodeType": "EmitStatement",
                  "src": "2082:31:7"
                }
              ]
            },
            "functionSelector": "2042e5c2",
            "id": 5099,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5076,
                "modifierName": {
                  "id": 5075,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12186,
                  "src": "1954:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1954:9:7"
              }
            ],
            "name": "removeWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5073,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "1926:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1925:19:7"
            },
            "returnParameters": {
              "id": 5077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1964:0:7"
            },
            "scope": 5185,
            "src": "1901:219:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5111,
              "nodeType": "Block",
              "src": "2171:69:7",
              "statements": [
                {
                  "expression": {
                    "id": 5106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5104,
                      "name": "transferOpened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4964,
                      "src": "2181:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 5105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2198:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2181:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5107,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:21:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5108,
                      "name": "EnableTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4974,
                      "src": "2217:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2217:16:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5110,
                  "nodeType": "EmitStatement",
                  "src": "2212:21:7"
                }
              ]
            },
            "functionSelector": "f1b50c1d",
            "id": 5112,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5102,
                "modifierName": {
                  "id": 5101,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12186,
                  "src": "2161:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2161:9:7"
              }
            ],
            "name": "enableTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2149:2:7"
            },
            "returnParameters": {
              "id": 5103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2171:0:7"
            },
            "scope": 5185,
            "src": "2126:114:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5124,
              "nodeType": "Block",
              "src": "2292:71:7",
              "statements": [
                {
                  "expression": {
                    "id": 5119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5117,
                      "name": "transferOpened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4964,
                      "src": "2302:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 5118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2319:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2302:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5120,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:22:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5121,
                      "name": "DisableTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4976,
                      "src": "2339:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2339:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5123,
                  "nodeType": "EmitStatement",
                  "src": "2334:22:7"
                }
              ]
            },
            "functionSelector": "b187984f",
            "id": 5125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5115,
                "modifierName": {
                  "id": 5114,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12186,
                  "src": "2282:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2282:9:7"
              }
            ],
            "name": "disableTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2270:2:7"
            },
            "returnParameters": {
              "id": 5116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2292:0:7"
            },
            "scope": 5185,
            "src": "2246:117:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14499
            ],
            "body": {
              "id": 5144,
              "nodeType": "Block",
              "src": "2504:61:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5139,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5127,
                        "src": "2541:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5140,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5129,
                        "src": "2547:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5141,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5131,
                        "src": "2551:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5136,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2514:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NUTToken_$5185_$",
                          "typeString": "type(contract super NUTToken)"
                        }
                      },
                      "id": 5138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14499,
                      "src": "2514:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2514:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5143,
                  "nodeType": "ExpressionStatement",
                  "src": "2514:44:7"
                }
              ]
            },
            "id": 5145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5134,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5133,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14511,
                  "src": "2497:5:7"
                }
              ],
              "src": "2488:15:7"
            },
            "parameters": {
              "id": 5132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5127,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "2408:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2408:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5129,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "2430:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5131,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "2450:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2398:72:7"
            },
            "returnParameters": {
              "id": 5135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2504:0:7"
            },
            "scope": 5185,
            "src": "2369:196:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14315
            ],
            "body": {
              "id": 5183,
              "nodeType": "Block",
              "src": "2667:420:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2864:15:7",
                      "subExpression": {
                        "id": 5155,
                        "name": "transferOpened",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4964,
                        "src": "2865:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 5157,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2883:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2883:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5159,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12172,
                          "src": "2897:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2897:7:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2883:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2864:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5174,
                  "nodeType": "IfStatement",
                  "src": "2860:168:7",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 5164,
                              "name": "whiteList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4962,
                              "src": "2926:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 5166,
                            "indexExpression": {
                              "id": 5165,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "2936:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2926:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 5167,
                              "name": "whiteList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4962,
                              "src": "2950:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 5169,
                            "indexExpression": {
                              "id": 5168,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5147,
                              "src": "2960:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2950:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2926:41:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5065726d697373696f6e2064656e6965643a2073656e646572206f7220726563697069656e74206973206e6f74207768697465206c697374",
                          "id": 5171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2969:58:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_cbbfa2077b554500dd80ca8065be88fb4590418c21f1e772f7e688306e81acc8",
                            "typeString": "literal_string \"Permission denied: sender or recipient is not white list\""
                          },
                          "value": "Permission denied: sender or recipient is not white list"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_cbbfa2077b554500dd80ca8065be88fb4590418c21f1e772f7e688306e81acc8",
                            "typeString": "literal_string \"Permission denied: sender or recipient is not white list\""
                          }
                        ],
                        "id": 5163,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "2918:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 5172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2918:110:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5173,
                    "nodeType": "ExpressionStatement",
                    "src": "2918:110:7"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5178,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5147,
                        "src": "3054:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5179,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5149,
                        "src": "3062:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5180,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5151,
                        "src": "3073:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5175,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3038:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NUTToken_$5185_$",
                          "typeString": "type(contract super NUTToken)"
                        }
                      },
                      "id": 5177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14315,
                      "src": "3038:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5182,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:42:7"
                }
              ]
            },
            "id": 5184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5153,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2658:8:7"
            },
            "parameters": {
              "id": 5152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5147,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "2590:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2590:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5149,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "2606:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2606:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5151,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5184,
                  "src": "2625:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2625:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2589:51:7"
            },
            "returnParameters": {
              "id": 5154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2667:0:7"
            },
            "scope": 5185,
            "src": "2571:516:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 5186,
        "src": "310:2779:7"
      }
    ],
    "src": "32:3058:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2024-06-20T10:15:12.138Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "constructor": {
        "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}