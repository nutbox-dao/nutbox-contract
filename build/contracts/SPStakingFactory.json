{
  "contractName": "SPStakingFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_communityFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldBridge",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newBridge",
          "type": "address"
        }
      ],
      "name": "BridgeChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "chainId",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "delegatee",
          "type": "bytes32"
        }
      ],
      "name": "SPStakingCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "adminSetBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_communityFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldBridge\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBridge\",\"type\":\"address\"}],\"name\":\"BridgeChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"chainId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"delegatee\",\"type\":\"bytes32\"}],\"name\":\"SPStakingCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"adminSetBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract of Nutbox ERC20 staking pool. x\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/sp-staking/SPStakingFactory.sol\":\"SPStakingFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/Community.sol\":{\"keccak256\":\"0x454edbfbde8039209ebc91c564e44631a0f08cf433928a9b483f0e1ce6945990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5331943da057a53a3d207dcf0f8361f33ae70ed1183422bac19ff8ef6030596\",\"dweb:/ipfs/Qmb4F9GxC9cjymJrPvKWw6cbrk8wRgtnjiDTSTWb9Xj5n5\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol\":{\"keccak256\":\"0x651020221943be888ac06515c91ba57fb85a427ee46fe23e86db6eadfb3a2bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c05ef23811ecbda8079d230bc0e69c0b6fd8eb8411d10883c4313a786e78cbbb\",\"dweb:/ipfs/QmNms3YHXUFuY2nE5HkGHFtkRmpj5qffyXgSpmC4pZYgC6\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xddf2a441a9c0714ecc5c14ad5ee6c3ffa2e8155292229574369156004d2bcd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167987fa430b1303ad04b831fa610d31ca3f4202ad847e87cd9bb01156cfe9e0\",\"dweb:/ipfs/Qmf7a5unwgdUWTPfWZ94QRxVVxic12feERMNeC6krcmLmZ\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/community-token/MintableERC20.sol\":{\"keccak256\":\"0xd49c97ab428cd65d2326ad6875aed0082716bbfd094e5fd11cfafc6f778adcf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87da6adb416be4cfa38f6e08989390558297791f362cc237bee8c33080d3bd20\",\"dweb:/ipfs/QmYgQbaazS4L9KVvUhDq7pMxZGhCM8USrgJyjAsLkXDfLX\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/sp-staking/SPStaking.sol\":{\"keccak256\":\"0x987094a1912df9918ea09467d70e4f515540f840f66acd7bd45e5a3699e02cec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://197cff07b09a3f0d4633c476f7623934e7b8c6758c7b23c381958bfaf666d103\",\"dweb:/ipfs/QmQ9eMpnRRo61FVGPrACJEbu873XdzEiLMiUhXK4gM8rm9\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/sp-staking/SPStakingFactory.sol\":{\"keccak256\":\"0xc1a9a8bfe2788af9c05a45963107857b8a2f4ad3cc9c0c021e8c5c017e6b8871\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebeaf8bfa4e4f4a1fa2246c6f5e2f67698085603cd5998f48d52820cc9972ac2\",\"dweb:/ipfs/QmfMoNwub7ayzszS2nWMjMHcDHXACHoWf2fTkuUhFLvLYZ\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ArbSys.sol\":{\"keccak256\":\"0x22f1cf1781c0d8828112ee5cce04e10bcc56dbb3fa668ceb10895393b21c70b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20f6c6a7c3b39241ebbb40490b70398ed8e013d061354447aba23553fd2a6ddc\",\"dweb:/ipfs/QmWzt87GoVDbz27AnbsZdAAoSK6763Jao7FEULLZfPY5by\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICalculator.sol\":{\"keccak256\":\"0x85e62c5ec77229d1e44b2c838b259829093e616ddbb887261eeaadd11c83c70a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8433eb15b4035948768e8707cae178742fc32fd60813dbba845d177ea87a89c7\",\"dweb:/ipfs/QmRByWaN4DZcSUyJABp1PViBDkBfQuHVAvqeU6FwqTPW9K\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommittee.sol\":{\"keccak256\":\"0x2190b0279cab5723ca36a492c45aad3b43f4f705d1df7d81e2932733b371397e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccd2ccfbbb75866a710e334056949888006443fd92404c66f22a2ffbd3a41acf\",\"dweb:/ipfs/QmUE1FEe5qLTp4TTrv9YBPgo97bdjABwUsRkZxkVcmXkUv\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunity.sol\":{\"keccak256\":\"0x9c8f1379634fc9df3fc965ebd5c11976ce3d71aab8996f8efe903aa4a3042811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e3fe744d29ff2f477050a263547fb192ee52180359d469b1cf1f79062f9db4\",\"dweb:/ipfs/QmcpTdndc9H2PmhTJgF5qabCotM74swULzMKCYDbDAACvp\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunityTokenFactory.sol\":{\"keccak256\":\"0x9a69a2d0752d3002d55ec2734724891fdab03de0a88e15ff297d85a3878924b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54fcdeb38c2292e11b14d0ff2b2d772ab8e14ce56d080685fede2f38749ff1d\",\"dweb:/ipfs/QmZdUicfe2kiGG5WaYpYN9yzNoXN7X3AmCMaosF4Vj6kzz\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IGauge.sol\":{\"keccak256\":\"0xafa9311f14cf7617763940d265d51448c613e574e6cbcdbb4412bd76ca7ae1fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d69b9acd6a010f1e8f5e0f3f533633a360c3f9d128d43c5191cc7e3d0864244\",\"dweb:/ipfs/QmQfwcyuTHGaw8xM9jwA9YzrxaKUSXTKNYobGwXLeCYus8\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xedea7672bb9703bcf57a6bbf386e4b528f55a698a08bc7c4481400738671ac83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20c0e753aa731e11ebe3e2918c863a4e72400983bb466660d3580ce4d9fbcf4\",\"dweb:/ipfs/QmUi3uZ9HVmZDAgyTTvWTPMtov2SudhFdSJ7jGLf8w3eis\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0x690fa318a561b45e70ceee542a68746d8b72a98c4ff83abb177c3e3710190fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91b6a4e9de1e1f01065c329d197dfd1f4d9a0996397f9f79b846804d75b1d2bd\",\"dweb:/ipfs/Qmc1eCVjE1xnQx2uMPkhAz5i3ohDDjEoVmJ5SZ8mdytScP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x1304796e9cdc64294735b4222849a240363b2aff374bb58b7c728f8dc0f4aa75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87398b4ba8f7c7e6613a5967e5407a5af6807e753d326d5e3b8c29697d33e36\",\"dweb:/ipfs/QmWGzaF9UWB5rNW1h9kvkJaWSf95WkQZ7RVR3bJ24oVgwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x978847fbff92d66d27d8767402a90ba996970b1936b372406aa17f5492bd8dc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1414cb92779420b50d3e796b47bad6ea800ef1805bc6f9bf35a3ccb4e17db3dc\",\"dweb:/ipfs/QmaMzwYqLiivfaWSgqeaAPboBtJjVD1hSrH48p7ExJZ7DG\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x670a64416cace45b7f4037a2c1cd66a83fbc2a573621fcf6aeb6b917abffde52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a53de93c53876cf4383ef42f9148f7262145e6ac3b0b2d77ec8e12fccacc81\",\"dweb:/ipfs/QmYqDjDinmFVdMZMwHfNdVFmRrZG9MR9LFfpnDxJAQegJB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051611df5380380611df583398101604081905261002f916100f1565b61003f61003a61009d565b6100a1565b6001600160a01b038116610088576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007f9061011f565b60405180910390fd5b60601b6001600160601b031916608052610156565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610102578081fd5b81516001600160a01b0381168114610118578182fd5b9392505050565b6020808252600f908201527f496e76616c696420616464726573730000000000000000000000000000000000604082015260600190565b60805160601c611c7a61017b6000396000818161028f01526104fa0152611c7a6000f3fe60806040523480156200001157600080fd5b5060043610620000885760003560e01c8063b883cc2a1162000063578063b883cc2a14620000d2578063e78cea9214620000e9578063f2fde38b14620000f3578063fac8a610146200010a5762000088565b80631a5a143e146200008d578063715018a614620000a65780638da5cb5b14620000b0575b600080fd5b620000a46200009e3660046200065b565b62000114565b005b620000a4620001e8565b620000ba6200023c565b604051620000c99190620007d8565b60405180910390f35b620000ba620000e33660046200067f565b6200024b565b620000ba6200046c565b620000a4620001043660046200065b565b6200047b565b620000ba620004f8565b6200011e6200051c565b6001600160a01b0316620001316200023c565b6001600160a01b031614620001635760405162461bcd60e51b81526004016200015a906200093a565b60405180910390fd5b6001600160a01b0381166200018c5760405162461bcd60e51b81526004016200015a9062000852565b6001546040516001600160a01b038084169216907f9f06c577a12d8beda856a3cceddf7befcb12da366ce49400e869c0104ee10d6a90600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b620001f26200051c565b6001600160a01b0316620002056200023c565b6001600160a01b0316146200022e5760405162461bcd60e51b81526004016200015a906200093a565b6200023a600062000520565b565b6000546001600160a01b031690565b60006001600160a01b0385163314620002785760405162461bcd60e51b81526004016200015a90620008c1565b604051633454a5b760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906368a94b6e90620002c6908890600401620007d8565b60206040518083038186803b158015620002df57600080fd5b505afa158015620002f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200031a919062000768565b620003395760405162461bcd60e51b81526004016200015a906200096f565b600062000381600085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293925050620005709050565b90506000620003cb600186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293925050620005ab9050565b9050600087878484604051620003e190620005e6565b620003f09493929190620007ec565b604051809103906000f0801580156200040d573d6000803e3d6000fd5b509050876001600160a01b0316816001600160a01b03167f4c0b863f4bae1f37c4ec64e9645a6295d0718483bfbed32cc2df0b7a05fab5b0898686604051620004599392919062000828565b60405180910390a3979650505050505050565b6001546001600160a01b031681565b620004856200051c565b6001600160a01b0316620004986200023c565b6001600160a01b031614620004c15760405162461bcd60e51b81526004016200015a906200093a565b6001600160a01b038116620004ea5760405162461bcd60e51b81526004016200015a906200087b565b620004f58162000520565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200057f826001620009c7565b83511015620005a25760405162461bcd60e51b81526004016200015a906200099a565b50016001015190565b6000620005ba826020620009c7565b83511015620005dd5760405162461bcd60e51b81526004016200015a906200090b565b50016020015190565b6112428062000a0383390190565b80356001600160a01b03811681146200060c57600080fd5b919050565b60008083601f84011262000623578081fd5b50813567ffffffffffffffff8111156200063b578182fd5b6020830191508360208285010111156200065457600080fd5b9250929050565b6000602082840312156200066d578081fd5b6200067882620005f4565b9392505050565b6000806000806060858703121562000695578283fd5b620006a085620005f4565b935060208086013567ffffffffffffffff80821115620006be578586fd5b818801915088601f830112620006d2578586fd5b813581811115620006e757620006e7620009ec565b604051601f8201601f19168101850183811182821017156200070d576200070d620009ec565b60405281815283820185018b101562000724578788fd5b818585018683013787858383010152809750505060408801359250808311156200074c578485fd5b50506200075c8782880162000611565b95989497509550505050565b6000602082840312156200077a578081fd5b8151801515811462000678578182fd5b60008151808452815b81811015620007b15760208185018101518683018201520162000793565b81811115620007c35782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b038516815260806020820181905260009062000812908301866200078a565b60ff949094166040830152506060015292915050565b6000606082526200083d60608301866200078a565b60ff9490941660208301525060400152919050565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602a908201527f5065726d697373696f6e2064656e6965643a2063616c6c6572206973206e6f7460408201526920636f6d6d756e69747960b01b606082015260800190565b602080825260159082015274746f427974657333325f6f75744f66426f756e647360581b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260119082015270496e76616c696420636f6d6d756e69747960781b604082015260600190565b602080825260139082015272746f55696e74385f6f75744f66426f756e647360681b604082015260600190565b60008219821115620009e757634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fdfe60e06040523480156200001157600080fd5b506040516200124238038062001242833981016040819052620000349162000154565b33606090811b60805284901b6001600160601b03191660a05282516200006290600290602086019062000097565b5060035560f81b7fff000000000000000000000000000000000000000000000000000000000000001660c05250620002e59050565b828054620000a59062000260565b90600052602060002090601f016020900481019282620000c9576000855562000114565b82601f10620000e457805160ff191683800117855562000114565b8280016001018555821562000114579182015b8281111562000114578251825591602001919060010190620000f7565b506200012292915062000126565b5090565b5b8082111562000122576000815560010162000127565b805160ff811681146200014f57600080fd5b919050565b600080600080608085870312156200016a578384fd5b84516001600160a01b038116811462000181578485fd5b602086810151919550906001600160401b0380821115620001a0578586fd5b818801915088601f830112620001b4578586fd5b815181811115620001c957620001c9620002b6565b604051601f8201601f1916810185018381118282101715620001ef57620001ef620002b6565b60405281815283820185018b101562000206578788fd5b8792505b818310156200022957838301850151818401860152918401916200020a565b818311156200023a57878583830101525b809750505050505062000250604086016200013d565b6060959095015193969295505050565b6002810460018216806200027557607f821691505b60208210811415620002b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60805160601c60a05160601c60c05160f81c610ee56200035d600039600061030d015260008181610410015281816105bd0152818161066d01528181610717015281816107ff015281816108b7015281816109600152610a3901526000818161021b0152818161023f01526105ea0152610ee56000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806388cc58e41161006657806388cc58e414610106578063919034701461010e57806394465b2114610123578063b3a7834d14610136578063c51db6b2146101565761009e565b806306fdde03146100a35780631e31d053146100c157806338adb6f0146100d6578063567e98f9146100de578063630949c7146100e6575b600080fd5b6100ab61015e565b6040516100b89190610be0565b60405180910390f35b6100c96101ec565b6040516100b89190610b90565b6100c96101f2565b6100c96101f8565b6100f96100f4366004610b0a565b6101fe565b6040516100b89190610b99565b6100f9610219565b61012161011c366004610b3a565b61023d565b005b6100c9610131366004610ab2565b6109ca565b610149610144366004610ab2565b6109e9565b6040516100b89190610da7565b6100f9610a37565b6002805461016b90610e46565b80601f016020809104026020016040519081016040528092919081815260200182805461019790610e46565b80156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b505050505081565b60035481565b60045490565b60045481565b6000602081905290815260409020546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e78cea926040518163ffffffff1660e01b815260040160206040518083038186803b15801561029657600080fd5b505afa1580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190610ace565b6001600160a01b0316336001600160a01b0316146103075760405162461bcd60e51b81526004016102fe90610d11565b60405180910390fd5b8460ff167f000000000000000000000000000000000000000000000000000000000000000060ff161461034c5760405162461bcd60e51b81526004016102fe90610d7f565b836003541461036d5760405162461bcd60e51b81526004016102fe90610cda565b6000818152602081905260409020546001600160a01b031615806103aa57506000818152602081905260409020546001600160a01b038481169116145b6103c65760405162461bcd60e51b81526004016102fe90610d48565b6001600160a01b03831660009081526001602081905260409091200154828114156103f157506109c3565b828110156104b157604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a90610445903090600401610b99565b60206040518083038186803b15801561045d57600080fd5b505afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610aea565b6104b15760405162461bcd60e51b81526004016102fe90610c99565b6001600160a01b03841660009081526001602052604090205460ff16610522576001600160a01b0384166000818152600160208181526040808420805460ff1916841781559283018490556002909201869055858352829052902080546001600160a01b03191690911790556105a6565b816040516020016105339190610b90565b60408051601f1981840301815282825280516020918201206001600160a01b03881660009081526001835292909220600201549192610573929101610b90565b60405160208183030381529060405280519060200120146105a65760405162461bcd60e51b81526004016102fe90610c33565b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f290610612907f000000000000000000000000000000000000000000000000000000000000000090600401610c6a565b600060405180830381600087803b15801561062c57600080fd5b505af1158015610640573d6000803e3d6000fd5b505050506001600160a01b038416600090815260016020819052604090912001541561086b5760006107e07f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630886040518363ffffffff1660e01b81526004016106b9929190610bad565b60206040518083038186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610b22565b6107da64e8d4a510006107d47f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016107619190610b99565b60206040518083038186803b15801561077957600080fd5b505afa15801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b19190610b22565b6001600160a01b038b166000908152600160208190526040909120015490610a5b565b90610a6e565b90610a7a565b9050801561086957604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b7208906108369088908590600401610bc7565b600060405180830381600087803b15801561085057600080fd5b505af1158015610864573d6000803e3d6000fd5b505050505b505b610884816107da85600454610a8690919063ffffffff16565b60049081556001600160a01b03808616600090815260016020819052604091829020018690555163286a276f60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169163bf16c3c29187916109059164e8d4a51000916107d491879163a1a89dbc9161076191309101610b99565b6040518363ffffffff1660e01b8152600401610922929190610bc7565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b50505050836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8572960e25f62a888f92ba98fda1ca3cba3fc98b664e8ae79fdc97a644c7bae483866040516109b9929190610dca565b60405180910390a3505b5050505050565b6001600160a01b03166000908152600160208190526040909120015490565b6109f1610a92565b506001600160a01b03166000908152600160208181526040928390208351606081018552815460ff16151581529281015491830191909152600201549181019190915290565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610a678284610e10565b9392505050565b6000610a678284610df0565b6000610a678284610e2f565b6000610a678284610dd8565b604080516060810182526000808252602082018190529181019190915290565b600060208284031215610ac3578081fd5b8135610a6781610e97565b600060208284031215610adf578081fd5b8151610a6781610e97565b600060208284031215610afb578081fd5b81518015158114610a67578182fd5b600060208284031215610b1b578081fd5b5035919050565b600060208284031215610b33578081fd5b5051919050565b600080600080600060a08688031215610b51578081fd5b853560ff81168114610b61578182fd5b9450602086013593506040860135610b7881610e97565b94979396509394606081013594506080013592915050565b90815260200190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080835283518082850152825b81811015610c0c57858101830151858201604001528201610bf0565b81811115610c1d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601c908201527f426f756e6420737465656d206163636f756e74206469736d6174636800000000604082015260600190565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b60208082526017908201527f57726f6e672064656c656761746565206163636f756e74000000000000000000604082015260600190565b6020808252601d908201527f4f6e6c79207665726966696564206272696467652063616e2063616c6c000000604082015260600190565b6020808252601a908201527f426f756e6420627363206163636f756e74206469736d61746368000000000000604082015260600190565b6020808252600e908201526d15dc9bdb99c818da185a5b881a5960921b604082015260600190565b815115158152602080830151908201526040918201519181019190915260600190565b918252602082015260400190565b60008219821115610deb57610deb610e81565b500190565b600082610e0b57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e2a57610e2a610e81565b500290565b600082821015610e4157610e41610e81565b500390565b600281046001821680610e5a57607f821691505b60208210811415610e7b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610eac57600080fd5b5056fea2646970667358221220c2b5d9583fef8f9b2261868fb61208f739dfd6d1d9ed059dc96f4ce00ae3819664736f6c63430008000033a2646970667358221220c1c3a3b0f0ac383451a2e8cf18f82c7ad8464db1910c8f3b28e9e71b13d4629f64736f6c63430008000033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000885760003560e01c8063b883cc2a1162000063578063b883cc2a14620000d2578063e78cea9214620000e9578063f2fde38b14620000f3578063fac8a610146200010a5762000088565b80631a5a143e146200008d578063715018a614620000a65780638da5cb5b14620000b0575b600080fd5b620000a46200009e3660046200065b565b62000114565b005b620000a4620001e8565b620000ba6200023c565b604051620000c99190620007d8565b60405180910390f35b620000ba620000e33660046200067f565b6200024b565b620000ba6200046c565b620000a4620001043660046200065b565b6200047b565b620000ba620004f8565b6200011e6200051c565b6001600160a01b0316620001316200023c565b6001600160a01b031614620001635760405162461bcd60e51b81526004016200015a906200093a565b60405180910390fd5b6001600160a01b0381166200018c5760405162461bcd60e51b81526004016200015a9062000852565b6001546040516001600160a01b038084169216907f9f06c577a12d8beda856a3cceddf7befcb12da366ce49400e869c0104ee10d6a90600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b620001f26200051c565b6001600160a01b0316620002056200023c565b6001600160a01b0316146200022e5760405162461bcd60e51b81526004016200015a906200093a565b6200023a600062000520565b565b6000546001600160a01b031690565b60006001600160a01b0385163314620002785760405162461bcd60e51b81526004016200015a90620008c1565b604051633454a5b760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906368a94b6e90620002c6908890600401620007d8565b60206040518083038186803b158015620002df57600080fd5b505afa158015620002f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200031a919062000768565b620003395760405162461bcd60e51b81526004016200015a906200096f565b600062000381600085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293925050620005709050565b90506000620003cb600186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293925050620005ab9050565b9050600087878484604051620003e190620005e6565b620003f09493929190620007ec565b604051809103906000f0801580156200040d573d6000803e3d6000fd5b509050876001600160a01b0316816001600160a01b03167f4c0b863f4bae1f37c4ec64e9645a6295d0718483bfbed32cc2df0b7a05fab5b0898686604051620004599392919062000828565b60405180910390a3979650505050505050565b6001546001600160a01b031681565b620004856200051c565b6001600160a01b0316620004986200023c565b6001600160a01b031614620004c15760405162461bcd60e51b81526004016200015a906200093a565b6001600160a01b038116620004ea5760405162461bcd60e51b81526004016200015a906200087b565b620004f58162000520565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200057f826001620009c7565b83511015620005a25760405162461bcd60e51b81526004016200015a906200099a565b50016001015190565b6000620005ba826020620009c7565b83511015620005dd5760405162461bcd60e51b81526004016200015a906200090b565b50016020015190565b6112428062000a0383390190565b80356001600160a01b03811681146200060c57600080fd5b919050565b60008083601f84011262000623578081fd5b50813567ffffffffffffffff8111156200063b578182fd5b6020830191508360208285010111156200065457600080fd5b9250929050565b6000602082840312156200066d578081fd5b6200067882620005f4565b9392505050565b6000806000806060858703121562000695578283fd5b620006a085620005f4565b935060208086013567ffffffffffffffff80821115620006be578586fd5b818801915088601f830112620006d2578586fd5b813581811115620006e757620006e7620009ec565b604051601f8201601f19168101850183811182821017156200070d576200070d620009ec565b60405281815283820185018b101562000724578788fd5b818585018683013787858383010152809750505060408801359250808311156200074c578485fd5b50506200075c8782880162000611565b95989497509550505050565b6000602082840312156200077a578081fd5b8151801515811462000678578182fd5b60008151808452815b81811015620007b15760208185018101518683018201520162000793565b81811115620007c35782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b038516815260806020820181905260009062000812908301866200078a565b60ff949094166040830152506060015292915050565b6000606082526200083d60608301866200078a565b60ff9490941660208301525060400152919050565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602a908201527f5065726d697373696f6e2064656e6965643a2063616c6c6572206973206e6f7460408201526920636f6d6d756e69747960b01b606082015260800190565b602080825260159082015274746f427974657333325f6f75744f66426f756e647360581b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260119082015270496e76616c696420636f6d6d756e69747960781b604082015260600190565b602080825260139082015272746f55696e74385f6f75744f66426f756e647360681b604082015260600190565b60008219821115620009e757634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fdfe60e06040523480156200001157600080fd5b506040516200124238038062001242833981016040819052620000349162000154565b33606090811b60805284901b6001600160601b03191660a05282516200006290600290602086019062000097565b5060035560f81b7fff000000000000000000000000000000000000000000000000000000000000001660c05250620002e59050565b828054620000a59062000260565b90600052602060002090601f016020900481019282620000c9576000855562000114565b82601f10620000e457805160ff191683800117855562000114565b8280016001018555821562000114579182015b8281111562000114578251825591602001919060010190620000f7565b506200012292915062000126565b5090565b5b8082111562000122576000815560010162000127565b805160ff811681146200014f57600080fd5b919050565b600080600080608085870312156200016a578384fd5b84516001600160a01b038116811462000181578485fd5b602086810151919550906001600160401b0380821115620001a0578586fd5b818801915088601f830112620001b4578586fd5b815181811115620001c957620001c9620002b6565b604051601f8201601f1916810185018381118282101715620001ef57620001ef620002b6565b60405281815283820185018b101562000206578788fd5b8792505b818310156200022957838301850151818401860152918401916200020a565b818311156200023a57878583830101525b809750505050505062000250604086016200013d565b6060959095015193969295505050565b6002810460018216806200027557607f821691505b60208210811415620002b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60805160601c60a05160601c60c05160f81c610ee56200035d600039600061030d015260008181610410015281816105bd0152818161066d01528181610717015281816107ff015281816108b7015281816109600152610a3901526000818161021b0152818161023f01526105ea0152610ee56000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806388cc58e41161006657806388cc58e414610106578063919034701461010e57806394465b2114610123578063b3a7834d14610136578063c51db6b2146101565761009e565b806306fdde03146100a35780631e31d053146100c157806338adb6f0146100d6578063567e98f9146100de578063630949c7146100e6575b600080fd5b6100ab61015e565b6040516100b89190610be0565b60405180910390f35b6100c96101ec565b6040516100b89190610b90565b6100c96101f2565b6100c96101f8565b6100f96100f4366004610b0a565b6101fe565b6040516100b89190610b99565b6100f9610219565b61012161011c366004610b3a565b61023d565b005b6100c9610131366004610ab2565b6109ca565b610149610144366004610ab2565b6109e9565b6040516100b89190610da7565b6100f9610a37565b6002805461016b90610e46565b80601f016020809104026020016040519081016040528092919081815260200182805461019790610e46565b80156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b505050505081565b60035481565b60045490565b60045481565b6000602081905290815260409020546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e78cea926040518163ffffffff1660e01b815260040160206040518083038186803b15801561029657600080fd5b505afa1580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190610ace565b6001600160a01b0316336001600160a01b0316146103075760405162461bcd60e51b81526004016102fe90610d11565b60405180910390fd5b8460ff167f000000000000000000000000000000000000000000000000000000000000000060ff161461034c5760405162461bcd60e51b81526004016102fe90610d7f565b836003541461036d5760405162461bcd60e51b81526004016102fe90610cda565b6000818152602081905260409020546001600160a01b031615806103aa57506000818152602081905260409020546001600160a01b038481169116145b6103c65760405162461bcd60e51b81526004016102fe90610d48565b6001600160a01b03831660009081526001602081905260409091200154828114156103f157506109c3565b828110156104b157604051634c7b4f4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906398f69e9a90610445903090600401610b99565b60206040518083038186803b15801561045d57600080fd5b505afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610aea565b6104b15760405162461bcd60e51b81526004016102fe90610c99565b6001600160a01b03841660009081526001602052604090205460ff16610522576001600160a01b0384166000818152600160208181526040808420805460ff1916841781559283018490556002909201869055858352829052902080546001600160a01b03191690911790556105a6565b816040516020016105339190610b90565b60408051601f1981840301815282825280516020918201206001600160a01b03881660009081526001835292909220600201549192610573929101610b90565b60405160208183030381529060405280519060200120146105a65760405162461bcd60e51b81526004016102fe90610c33565b60405163579dea7960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063af3bd4f290610612907f000000000000000000000000000000000000000000000000000000000000000090600401610c6a565b600060405180830381600087803b15801561062c57600080fd5b505af1158015610640573d6000803e3d6000fd5b505050506001600160a01b038416600090815260016020819052604090912001541561086b5760006107e07f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a00ed630886040518363ffffffff1660e01b81526004016106b9929190610bad565b60206040518083038186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610b22565b6107da64e8d4a510006107d47f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a1a89dbc306040518263ffffffff1660e01b81526004016107619190610b99565b60206040518083038186803b15801561077957600080fd5b505afa15801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b19190610b22565b6001600160a01b038b166000908152600160208190526040909120015490610a5b565b90610a6e565b90610a7a565b9050801561086957604051631df36e4160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9b7208906108369088908590600401610bc7565b600060405180830381600087803b15801561085057600080fd5b505af1158015610864573d6000803e3d6000fd5b505050505b505b610884816107da85600454610a8690919063ffffffff16565b60049081556001600160a01b03808616600090815260016020819052604091829020018690555163286a276f60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169163bf16c3c29187916109059164e8d4a51000916107d491879163a1a89dbc9161076191309101610b99565b6040518363ffffffff1660e01b8152600401610922929190610bc7565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b50505050836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8572960e25f62a888f92ba98fda1ca3cba3fc98b664e8ae79fdc97a644c7bae483866040516109b9929190610dca565b60405180910390a3505b5050505050565b6001600160a01b03166000908152600160208190526040909120015490565b6109f1610a92565b506001600160a01b03166000908152600160208181526040928390208351606081018552815460ff16151581529281015491830191909152600201549181019190915290565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610a678284610e10565b9392505050565b6000610a678284610df0565b6000610a678284610e2f565b6000610a678284610dd8565b604080516060810182526000808252602082018190529181019190915290565b600060208284031215610ac3578081fd5b8135610a6781610e97565b600060208284031215610adf578081fd5b8151610a6781610e97565b600060208284031215610afb578081fd5b81518015158114610a67578182fd5b600060208284031215610b1b578081fd5b5035919050565b600060208284031215610b33578081fd5b5051919050565b600080600080600060a08688031215610b51578081fd5b853560ff81168114610b61578182fd5b9450602086013593506040860135610b7881610e97565b94979396509394606081013594506080013592915050565b90815260200190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080835283518082850152825b81811015610c0c57858101830151858201604001528201610bf0565b81811115610c1d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601c908201527f426f756e6420737465656d206163636f756e74206469736d6174636800000000604082015260600190565b6040808252600490820152632aa9a2a960e11b60608201526001600160a01b0391909116602082015260800190565b60208082526021908201527f43616e206e6f74206465706f73697420746f206120636c6f73656420706f6f6c6040820152601760f91b606082015260800190565b60208082526017908201527f57726f6e672064656c656761746565206163636f756e74000000000000000000604082015260600190565b6020808252601d908201527f4f6e6c79207665726966696564206272696467652063616e2063616c6c000000604082015260600190565b6020808252601a908201527f426f756e6420627363206163636f756e74206469736d61746368000000000000604082015260600190565b6020808252600e908201526d15dc9bdb99c818da185a5b881a5960921b604082015260600190565b815115158152602080830151908201526040918201519181019190915260600190565b918252602082015260400190565b60008219821115610deb57610deb610e81565b500190565b600082610e0b57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e2a57610e2a610e81565b500290565b600082821015610e4157610e41610e81565b500390565b600281046001821680610e5a57607f821691505b60208210811415610e7b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610eac57600080fd5b5056fea2646970667358221220c2b5d9583fef8f9b2261868fb61208f739dfd6d1d9ed059dc96f4ce00ae3819664736f6c63430008000033a2646970667358221220c1c3a3b0f0ac383451a2e8cf18f82c7ad8464db1910c8f3b28e9e71b13d4629f64736f6c63430008000033",
  "immutableReferences": {
    "9032": [
      {
        "length": 32,
        "start": 655
      },
      {
        "length": 32,
        "start": 1274
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:670:48",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:48",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:48"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:48"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:48",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:48",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:48"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:48"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:48",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:48",
                "type": ""
              }
            ],
            "src": "14:310:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:165:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "520:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "531:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "513:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "554:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "565:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "550:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "550:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:2:48",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "543:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "543:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "609:17:48",
                        "type": "",
                        "value": "Invalid address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "582:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:45:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:45:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "636:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "648:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "644:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "636:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "480:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "494:4:48",
                "type": ""
              }
            ],
            "src": "329:339:48"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 48,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6887:48",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:48",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:48",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:48"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:48"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:48",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:48",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:48"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:48",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:48",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:48"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:48"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:48"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:48",
                "type": ""
              }
            ],
            "src": "14:175:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "268:299:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "317:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "326:6:48"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "334:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "319:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "319:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "319:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "296:6:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "304:4:48",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "292:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "292:17:48"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "311:3:48"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "288:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "288:27:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "281:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "281:35:48"
                  },
                  "nodeType": "YulIf",
                  "src": "278:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "352:30:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "375:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "362:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "362:20:48"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "352:6:48"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "425:30:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "434:8:48"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "444:8:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "427:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "427:26:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "427:26:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "397:6:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:18:48",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "394:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "394:30:48"
                  },
                  "nodeType": "YulIf",
                  "src": "391:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "464:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "480:6:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "488:4:48",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "476:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "476:17:48"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "464:8:48"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "545:16:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "554:1:48",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "557:1:48",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "547:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "547:12:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "547:12:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "516:6:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "524:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "512:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "512:19:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "533:4:48",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "508:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "508:30:48"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "540:3:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "505:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "505:39:48"
                  },
                  "nodeType": "YulIf",
                  "src": "502:2:48"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "231:6:48",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "239:3:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "247:8:48",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "257:6:48",
                "type": ""
              }
            ],
            "src": "194:373:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "642:128:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "688:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "697:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "705:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "690:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "690:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "690:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "663:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "672:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "659:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "659:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "684:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "655:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "652:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "723:41:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "754:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "733:20:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:31:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "723:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "608:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "619:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "631:6:48",
                "type": ""
              }
            ],
            "src": "572:198:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "908:1200:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "954:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "963:6:48"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "971:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "956:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "956:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "956:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "929:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "938:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "925:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "925:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "950:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "921:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "918:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "989:41:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1020:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "999:20:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "999:31:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "989:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1039:12:48",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1049:2:48",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1043:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1060:46:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1091:9:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1102:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1087:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1087:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1074:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:32:48"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1064:6:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1115:28:48",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1125:18:48",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1119:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1170:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1179:6:48"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1187:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1172:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1172:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1172:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1158:6:48"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1166:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1155:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:14:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1152:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1205:32:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1219:9:48"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1230:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1215:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:22:48"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1209:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1285:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1294:6:48"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1302:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1287:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1287:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1287:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1264:2:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1268:4:48",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1260:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1260:13:48"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1275:7:48"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1256:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1256:27:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1249:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:35:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1246:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1320:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1343:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1330:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1330:16:48"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1324:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1369:22:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1371:16:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1371:18:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1371:18:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1361:2:48"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1365:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1358:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1358:10:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1355:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1400:23:48",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1420:2:48",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1414:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1414:9:48"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1404:6:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1432:67:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1458:6:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1474:2:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1478:4:48",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1470:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1470:13:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1489:2:48",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1485:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1485:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1466:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1466:27:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1454:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1454:40:48"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1496:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1450:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1450:49:48"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1436:10:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1558:22:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1560:16:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1560:18:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1560:18:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1517:10:48"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1529:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1514:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1514:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1537:10:48"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1549:6:48"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1534:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1534:22:48"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1511:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:46:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1508:2:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1596:2:48",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1600:10:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:22:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1589:22:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1627:6:48"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1635:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1620:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1620:18:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1620:18:48"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1684:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1693:6:48"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1701:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1686:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1686:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1686:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1661:2:48"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1665:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1657:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1657:11:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1670:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1653:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:20:48"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1675:7:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1650:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:33:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1647:2:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1736:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1744:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1732:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1732:15:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1753:2:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1757:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1749:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1749:11:48"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1762:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1719:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1719:46:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1719:46:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1789:6:48"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1797:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1785:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1785:15:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1802:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1781:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:24:48"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1807:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1774:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1774:40:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1774:40:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1823:16:48",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1833:6:48"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1823:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1848:48:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1881:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1892:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1877:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1877:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1864:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1864:32:48"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1852:8:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1925:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1934:6:48"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1942:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1927:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1927:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1927:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1911:8:48"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1921:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1908:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:16:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1905:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1960:88:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2018:9:48"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2029:8:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2014:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2014:24:48"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2040:7:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1986:27:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1986:62:48"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "1964:8:48",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "1974:8:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2057:18:48",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2067:8:48"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2057:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2084:18:48",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2094:8:48"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2084:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "850:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "861:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "873:6:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "881:6:48",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "889:6:48",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "897:6:48",
                "type": ""
              }
            ],
            "src": "775:1333:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2191:219:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2237:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2246:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2254:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2239:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2239:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2239:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2212:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2221:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2208:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2208:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2233:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2204:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2204:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "2201:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2272:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2291:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2285:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2285:16:48"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2276:5:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2354:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2363:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2371:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2356:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2356:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2356:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2323:5:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2344:5:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2337:6:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2337:13:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2330:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2330:21:48"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2320:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2320:32:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2313:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2313:40:48"
                  },
                  "nodeType": "YulIf",
                  "src": "2310:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2389:15:48",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2399:5:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2389:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2157:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2168:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2180:6:48",
                "type": ""
              }
            ],
            "src": "2113:297:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2467:426:48",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2477:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2497:5:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2491:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2491:12:48"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2481:6:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2519:3:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2524:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2512:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2512:19:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2512:19:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2540:12:48",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "2549:3:48"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2544:1:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2613:110:48",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2627:14:48",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2637:4:48",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "2631:2:48",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2669:3:48"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2674:1:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2665:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2665:11:48"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2678:2:48"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2661:3:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2661:20:48"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2697:5:48"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2704:1:48"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2693:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2693:13:48"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2708:2:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2689:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2689:22:48"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2683:5:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2683:29:48"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2654:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2654:59:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2654:59:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2572:1:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2575:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2569:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2569:13:48"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2583:21:48",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2585:17:48",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2594:1:48"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2597:4:48",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2590:3:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2590:12:48"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2585:1:48"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2565:3:48",
                    "statements": []
                  },
                  "src": "2561:162:48"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2757:64:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2786:3:48"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2791:6:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2782:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2782:16:48"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2800:4:48",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2778:3:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2778:27:48"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "2807:3:48"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2771:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2771:40:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2771:40:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2738:1:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2741:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2735:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2735:13:48"
                  },
                  "nodeType": "YulIf",
                  "src": "2732:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2830:57:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2845:3:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2858:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2866:2:48",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2854:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2854:15:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2875:2:48",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2871:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2871:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2850:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2850:29:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2841:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2841:39:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2882:4:48",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2837:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2837:50:48"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2830:3:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2444:5:48",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2451:3:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2459:3:48",
                "type": ""
              }
            ],
            "src": "2415:478:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2999:102:48",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3009:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3021:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3032:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3017:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3017:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3009:4:48"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3051:9:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3066:6:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3082:3:48",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3087:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3078:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3078:11:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3091:1:48",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3074:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3074:19:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3062:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3062:32:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3044:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3044:51:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3044:51:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2968:9:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2979:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2990:4:48",
                "type": ""
              }
            ],
            "src": "2898:203:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3307:269:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3324:9:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3339:6:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3355:3:48",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3360:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3351:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3351:11:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3364:1:48",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3347:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3347:19:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3335:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3335:32:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3317:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3317:51:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3317:51:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3388:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3399:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3384:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3384:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3404:3:48",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3377:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3377:31:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3377:31:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3417:56:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3445:6:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3457:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3468:3:48",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3453:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3453:19:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "3425:19:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3425:48:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3417:4:48"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3493:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3504:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3489:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3489:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3513:6:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3521:4:48",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3509:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3509:17:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3482:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3482:45:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3482:45:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3547:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3558:2:48",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3543:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3543:18:48"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3563:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3536:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3536:34:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3536:34:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_uint8_t_bytes32__to_t_address_t_string_memory_ptr_t_uint8_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3252:9:48",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3263:6:48",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3271:6:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3279:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3287:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3298:4:48",
                "type": ""
              }
            ],
            "src": "3106:470:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3754:198:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3771:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3782:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3764:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3764:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3764:21:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3794:55:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3822:6:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3834:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3845:2:48",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3830:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3830:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "3802:19:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3802:47:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3794:4:48"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3869:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3880:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3865:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3865:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3889:6:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3897:4:48",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3885:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3885:17:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3858:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3858:45:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3858:45:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3923:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3934:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3919:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3919:18:48"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3939:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3912:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3912:34:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3912:34:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_uint8_t_bytes32__to_t_string_memory_ptr_t_uint8_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3707:9:48",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3718:6:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3726:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3734:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3745:4:48",
                "type": ""
              }
            ],
            "src": "3581:371:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4131:165:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4148:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4159:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4141:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4141:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4141:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4182:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4193:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4178:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4178:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4198:2:48",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4171:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4171:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4171:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4221:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4232:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4217:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4217:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4237:17:48",
                        "type": "",
                        "value": "Invalid address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4210:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4210:45:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4210:45:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4264:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4276:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4287:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4272:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4272:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4264:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4108:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4122:4:48",
                "type": ""
              }
            ],
            "src": "3957:339:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4475:228:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4492:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4503:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4485:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4485:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4485:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4526:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4537:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4522:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4522:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4542:2:48",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4515:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4515:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4515:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4565:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4576:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4561:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4561:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4581:34:48",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4554:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4554:62:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4554:62:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4636:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4647:2:48",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4632:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4632:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4652:8:48",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4625:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4625:36:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4625:36:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4670:27:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4682:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4693:3:48",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4678:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4678:19:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4670:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4452:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4466:4:48",
                "type": ""
              }
            ],
            "src": "4301:402:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4882:232:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4899:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4910:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4892:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4892:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4892:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4933:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4944:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4929:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4929:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4949:2:48",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4922:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4922:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4922:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4972:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4983:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4968:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4968:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4988:34:48",
                        "type": "",
                        "value": "Permission denied: caller is not"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4961:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4961:62:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4961:62:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5043:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5054:2:48",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5039:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5039:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5059:12:48",
                        "type": "",
                        "value": " community"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5032:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5032:40:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5032:40:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5081:27:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5093:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5104:3:48",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5089:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5089:19:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5081:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4859:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4873:4:48",
                "type": ""
              }
            ],
            "src": "4708:406:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5293:171:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5310:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5321:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5303:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5303:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5303:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5344:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5355:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5340:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5340:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5360:2:48",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5333:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5333:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5333:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5383:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5394:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5379:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5379:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5399:23:48",
                        "type": "",
                        "value": "toBytes32_outOfBounds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5372:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5372:51:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5372:51:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5432:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5444:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5455:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5440:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5440:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5432:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5270:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5284:4:48",
                "type": ""
              }
            ],
            "src": "5119:345:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5643:182:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5660:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5671:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5653:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5653:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5653:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5694:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5705:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5690:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5710:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5683:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5683:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5683:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5733:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5744:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5729:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5729:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5749:34:48",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5722:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5722:62:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5722:62:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5793:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5805:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5816:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5801:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5801:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5793:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5620:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5634:4:48",
                "type": ""
              }
            ],
            "src": "5469:356:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6004:167:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6021:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6032:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6014:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6014:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6014:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6055:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6066:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6051:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6051:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6071:2:48",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6044:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6044:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6044:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6094:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6105:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6090:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6090:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6110:19:48",
                        "type": "",
                        "value": "Invalid community"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6083:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6083:47:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6083:47:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6139:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6151:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6162:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6147:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6147:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6139:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5981:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5995:4:48",
                "type": ""
              }
            ],
            "src": "5830:341:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6350:169:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6367:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6378:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6360:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6360:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6360:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6401:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6412:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6397:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6397:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6417:2:48",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6390:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6390:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6390:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6440:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6451:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6436:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6436:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6456:21:48",
                        "type": "",
                        "value": "toUint8_outOfBounds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6429:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6429:49:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6429:49:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6487:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6499:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6510:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6495:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6495:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6487:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6327:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6341:4:48",
                "type": ""
              }
            ],
            "src": "6176:343:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6572:181:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6607:115:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "6628:3:48"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6637:3:48",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6642:10:48",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6633:3:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6633:20:48"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6621:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6621:33:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6621:33:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6674:1:48",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6677:4:48",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6667:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6667:15:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6667:15:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "6702:3:48"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6707:4:48",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6695:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6695:17:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6695:17:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6588:1:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6595:1:48"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6591:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6591:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6585:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6585:13:48"
                  },
                  "nodeType": "YulIf",
                  "src": "6582:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6731:16:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6742:1:48"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6745:1:48"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6738:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6738:9:48"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6731:3:48"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6555:1:48",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6558:1:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6564:3:48",
                "type": ""
              }
            ],
            "src": "6524:229:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6790:95:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6807:1:48",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6814:3:48",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6819:10:48",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6810:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6810:20:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6800:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6800:31:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6800:31:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6847:1:48",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6850:4:48",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6840:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6840:15:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6840:15:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6871:1:48",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6874:4:48",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6864:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6864:15:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6864:15:48"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "6758:127:48"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(length, length) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value1)\n        value1 := memPtr\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _2) { revert(value2, value2) }\n        let value2_1, value3_1 := abi_decode_t_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint8_t_bytes32__to_t_address_t_string_memory_ptr_t_uint8_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_t_string(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint8_t_bytes32__to_t_string_memory_ptr_t_uint8_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_t_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Permission denied: caller is not\")\n        mstore(add(headStart, 96), \" community\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"toBytes32_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid community\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"toUint8_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 48,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "373:1373:17:-:0;;;535:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:30;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;-1:-1:-1;;;;;592:31:17;;584:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;653:36;;-1:-1:-1;;;;;;653:36:17;;;373:1373;;640:96:41;719:10;640:96;:::o;2270:187:30:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:30;;;-1:-1:-1;;;;;;2378:17:30;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;14:310:48:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:48;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:48:o;329:339::-;531:2;513:21;;;570:2;550:18;;;543:30;609:17;604:2;589:18;;582:45;659:2;644:18;;503:165::o;:::-;373:1373:17;;;;;;;;;;;;",
  "deployedSourceMap": "373:1373:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1548:196;;;;;;:::i;:::-;;:::i;:::-;;1668:101:30;;;:::i;1036:85::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;952:590:17;;;;;;:::i;:::-;;:::i;460:21::-;;;:::i;1918:198:30:-;;;;;;:::i;:::-;;:::i;487:41:17:-;;;:::i;1548:196::-;1259:12:30;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:30;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:30;;1240:68;;;;-1:-1:-1;;;1240:68:30;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1626:21:17;::::1;1618:49;;;;-1:-1:-1::0;;;1618:49:17::1;;;;;;;:::i;:::-;1695:6;::::0;1682:29:::1;::::0;-1:-1:-1;;;;;1682:29:17;;::::1;::::0;1695:6:::1;::::0;1682:29:::1;::::0;1695:6:::1;::::0;1682:29:::1;1721:6;:16:::0;;-1:-1:-1;;;;;;1721:16:17::1;-1:-1:-1::0;;;;;1721:16:17;;;::::1;::::0;;;::::1;::::0;;1548:196::o;1668:101:30:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:30;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:30;;1240:68;;;;-1:-1:-1;;;1240:68:30;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:30;1036:85;:::o;952:590:17:-;1058:7;-1:-1:-1;;;;;1085:23:17;;1098:10;1085:23;1077:78;;;;-1:-1:-1;;;1077:78:17;;;;;;;:::i;:::-;1173:62;;-1:-1:-1;;;1173:62:17;;-1:-1:-1;;;;;1190:16:17;1173:51;;;;:62;;1225:9;;1173:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1165:92;;;;-1:-1:-1;;;1165:92:17;;;;;;;:::i;:::-;1267:13;1283:15;1296:1;1283:4;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1283:12:17;;:15;-1:-1:-1;;1283:12:17;:15;-1:-1:-1;1283:15:17:i;:::-;1267:31;;1308:17;1328;1343:1;1328:4;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1328:14:17;;:17;-1:-1:-1;;1328:14:17;:17;-1:-1:-1;1328:17:17:i;:::-;1308:37;;1355:14;1386:9;1397:4;1403:7;1412:9;1372:50;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1355:67;;1469:9;-1:-1:-1;;;;;1437:68:17;1462:4;-1:-1:-1;;;;;1437:68:17;;1480:4;1486:7;1495:9;1437:68;;;;;;;;:::i;:::-;;;;;;;;1530:4;952:590;-1:-1:-1;;;;;;;952:590:17:o;460:21::-;;;-1:-1:-1;;;;;460:21:17;;:::o;1918:198:30:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:30;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:30;;1240:68;;;;-1:-1:-1;;;1240:68:30;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:30;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:30::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;487:41:17:-;;;:::o;640:96:41:-;719:10;640:96;:::o;2270:187:30:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:30;;;-1:-1:-1;;;;;;2378:17:30;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;12627:302:47:-;12704:5;12746:10;:6;12755:1;12746:10;:::i;:::-;12729:6;:13;:27;;12721:60;;;;-1:-1:-1;;;12721:60:47;;;;;;;:::i;:::-;-1:-1:-1;12857:29:47;12873:3;12857:29;12851:36;;12627:302::o;14814:320::-;14893:7;14937:11;:6;14946:2;14937:11;:::i;:::-;14920:6;:13;:28;;14912:62;;;;-1:-1:-1;;;14912:62:47;;;;;;;:::i;:::-;-1:-1:-1;15058:30:47;15074:4;15058:30;15052:37;;14814:320::o;-1:-1:-1:-;;;;;;;;:::o;14:175:48:-;84:20;;-1:-1:-1;;;;;133:31:48;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:373::-;;;311:3;304:4;296:6;292:17;288:27;278:2;;334:6;326;319:22;278:2;-1:-1:-1;362:20:48;;405:18;394:30;;391:2;;;444:8;434;427:26;391:2;488:4;480:6;476:17;464:29;;540:3;533:4;524:6;516;512:19;508:30;505:39;502:2;;;557:1;554;547:12;502:2;268:299;;;;;:::o;572:198::-;;684:2;672:9;663:7;659:23;655:32;652:2;;;705:6;697;690:22;652:2;733:31;754:9;733:31;:::i;:::-;723:41;642:128;-1:-1:-1;;;642:128:48:o;775:1333::-;;;;;950:2;938:9;929:7;925:23;921:32;918:2;;;971:6;963;956:22;918:2;999:31;1020:9;999:31;:::i;:::-;989:41;;1049:2;1102;1091:9;1087:18;1074:32;1125:18;1166:2;1158:6;1155:14;1152:2;;;1187:6;1179;1172:22;1152:2;1230:6;1219:9;1215:22;1205:32;;1275:7;1268:4;1264:2;1260:13;1256:27;1246:2;;1302:6;1294;1287:22;1246:2;1343;1330:16;1365:2;1361;1358:10;1355:2;;;1371:18;;:::i;:::-;1420:2;1414:9;1489:2;1470:13;;-1:-1:-1;;1466:27:48;1454:40;;1450:49;;1514:18;;;1534:22;;;1511:46;1508:2;;;1560:18;;:::i;:::-;1596:2;1589:22;1620:18;;;1657:11;;;1653:20;;1650:33;-1:-1:-1;1647:2:48;;;1701:6;1693;1686:22;1647:2;1762;1757;1753;1749:11;1744:2;1736:6;1732:15;1719:46;1807:6;1802:2;1797;1789:6;1785:15;1781:24;1774:40;1833:6;1823:16;;;;1892:2;1881:9;1877:18;1864:32;1848:48;;1921:2;1911:8;1908:16;1905:2;;;1942:6;1934;1927:22;1905:2;;;1986:62;2040:7;2029:8;2018:9;2014:24;1986:62;:::i;:::-;908:1200;;;;-1:-1:-1;2067:8:48;-1:-1:-1;;;;908:1200:48:o;2113:297::-;;2233:2;2221:9;2212:7;2208:23;2204:32;2201:2;;;2254:6;2246;2239:22;2201:2;2291:9;2285:16;2344:5;2337:13;2330:21;2323:5;2320:32;2310:2;;2371:6;2363;2356:22;2415:478;;2497:5;2491:12;2524:6;2519:3;2512:19;2549:3;2561:162;2575:6;2572:1;2569:13;2561:162;;;2637:4;2693:13;;;2689:22;;2683:29;2665:11;;;2661:20;;2654:59;2590:12;2561:162;;;2741:6;2738:1;2735:13;2732:2;;;2807:3;2800:4;2791:6;2786:3;2782:16;2778:27;2771:40;2732:2;-1:-1:-1;2875:2:48;2854:15;-1:-1:-1;;2850:29:48;2841:39;;;;2882:4;2837:50;;2467:426;-1:-1:-1;;2467:426:48:o;2898:203::-;-1:-1:-1;;;;;3062:32:48;;;;3044:51;;3032:2;3017:18;;2999:102::o;3106:470::-;-1:-1:-1;;;;;3335:32:48;;3317:51;;3404:3;3399:2;3384:18;;3377:31;;;3106:470;;3425:48;;3453:19;;3445:6;3425:48;:::i;:::-;3521:4;3509:17;;;;3504:2;3489:18;;3482:45;-1:-1:-1;3558:2:48;3543:18;3536:34;3417:56;3307:269;-1:-1:-1;;3307:269:48:o;3581:371::-;;3782:2;3771:9;3764:21;3802:47;3845:2;3834:9;3830:18;3822:6;3802:47;:::i;:::-;3897:4;3885:17;;;;3880:2;3865:18;;3858:45;-1:-1:-1;3934:2:48;3919:18;3912:34;3794:55;3754:198;-1:-1:-1;3754:198:48:o;3957:339::-;4159:2;4141:21;;;4198:2;4178:18;;;4171:30;-1:-1:-1;;;4232:2:48;4217:18;;4210:45;4287:2;4272:18;;4131:165::o;4301:402::-;4503:2;4485:21;;;4542:2;4522:18;;;4515:30;4581:34;4576:2;4561:18;;4554:62;-1:-1:-1;;;4647:2:48;4632:18;;4625:36;4693:3;4678:19;;4475:228::o;4708:406::-;4910:2;4892:21;;;4949:2;4929:18;;;4922:30;4988:34;4983:2;4968:18;;4961:62;-1:-1:-1;;;5054:2:48;5039:18;;5032:40;5104:3;5089:19;;4882:232::o;5119:345::-;5321:2;5303:21;;;5360:2;5340:18;;;5333:30;-1:-1:-1;;;5394:2:48;5379:18;;5372:51;5455:2;5440:18;;5293:171::o;5469:356::-;5671:2;5653:21;;;5690:18;;;5683:30;5749:34;5744:2;5729:18;;5722:62;5816:2;5801:18;;5643:182::o;5830:341::-;6032:2;6014:21;;;6071:2;6051:18;;;6044:30;-1:-1:-1;;;6105:2:48;6090:18;;6083:47;6162:2;6147:18;;6004:167::o;6176:343::-;6378:2;6360:21;;;6417:2;6397:18;;;6390:30;-1:-1:-1;;;6451:2:48;6436:18;;6429:49;6510:2;6495:18;;6350:169::o;6524:229::-;;6595:1;6591:6;6588:1;6585:13;6582:2;;;-1:-1:-1;;;6621:33:48;;6677:4;6674:1;6667:15;6707:4;6628:3;6695:17;6582:2;-1:-1:-1;6738:9:48;;6572:181::o;6758:127::-;6819:10;6814:3;6810:20;6807:1;6800:31;6850:4;6847:1;6840:15;6874:4;6871:1;6864:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"../../interfaces/IPoolFactory.sol\";\nimport \"./SPStaking.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"solidity-bytes-utils/contracts/BytesLib.sol\";\nimport \"../../CommunityFactory.sol\";\n\n/**\n * @dev Factory contract of Nutbox ERC20 staking pool.\n *x\n */\ncontract SPStakingFactory is IPoolFactory, Ownable {\n    using BytesLib for bytes;\n    address public bridge;\n    address public immutable communityFactory;\n\n    constructor(address _communityFactory) {\n        require(_communityFactory != address(0), \"Invalid address\");\n        communityFactory = _communityFactory;\n    }\n\n    event SPStakingCreated(\n        address indexed pool,\n        address indexed community,\n        string name,\n        uint8 chainId,\n        bytes32 delegatee\n    );\n\n    event BridgeChange(address indexed oldBridge, address indexed newBridge);\n\n    function createPool(address community, string memory name, bytes calldata meta) override external returns(address) {\n        require(community == msg.sender, 'Permission denied: caller is not community');\n        require(CommunityFactory(communityFactory).createdCommunity(community), \"Invalid community\");\n        uint8 chainId = meta.toUint8(0);\n        bytes32 delegatee = meta.toBytes32(1);\n        SPStaking pool = new SPStaking(community, name, chainId, delegatee);\n        emit SPStakingCreated(address(pool), community, name, chainId, delegatee);\n        return address(pool);\n    }\n\n    function adminSetBridge(address _bridge) external onlyOwner {\n        require(_bridge != address(0), \"Invalid address\");\n        emit BridgeChange(bridge, _bridge);\n        bridge = _bridge;\n    }\n}\n",
  "sourcePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/sp-staking/SPStakingFactory.sol",
  "ast": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/sp-staking/SPStakingFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        9809
      ],
      "AccessControlEnumerable": [
        9934
      ],
      "ArbSys": [
        9257
      ],
      "BytesLib": [
        12821
      ],
      "Community": [
        1409
      ],
      "CommunityFactory": [
        1667
      ],
      "Context": [
        11338
      ],
      "ERC165": [
        11565
      ],
      "ERC20": [
        10978
      ],
      "ERC20Burnable": [
        11118
      ],
      "ERC20Helper": [
        1874
      ],
      "ERC20Pausable": [
        11155
      ],
      "ERC20PresetMinterPauser": [
        11316
      ],
      "EnumerableSet": [
        12488
      ],
      "IAccessControl": [
        10007
      ],
      "IAccessControlEnumerable": [
        10032
      ],
      "ICalculator": [
        9296
      ],
      "ICommittee": [
        9367
      ],
      "ICommunity": [
        9421
      ],
      "ICommunityTokenFactory": [
        9433
      ],
      "IERC165": [
        11577
      ],
      "IERC20": [
        11056
      ],
      "IERC20Metadata": [
        11180
      ],
      "IGauge": [
        9457
      ],
      "IPool": [
        9484
      ],
      "IPoolFactory": [
        9500
      ],
      "MintableERC20": [
        6737
      ],
      "Ownable": [
        10137
      ],
      "Pausable": [
        10229
      ],
      "SPStaking": [
        9012
      ],
      "SPStakingFactory": [
        9171
      ],
      "SafeMath": [
        11889
      ],
      "Strings": [
        11541
      ]
    },
    "id": 9172,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9014,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:17"
      },
      {
        "id": 9015,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:17"
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPoolFactory.sol",
        "file": "../../interfaces/IPoolFactory.sol",
        "id": 9016,
        "nodeType": "ImportDirective",
        "scope": 9172,
        "sourceUnit": 9501,
        "src": "91:43:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/sp-staking/SPStaking.sol",
        "file": "./SPStaking.sol",
        "id": 9017,
        "nodeType": "ImportDirective",
        "scope": 9172,
        "sourceUnit": 9013,
        "src": "135:25:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9018,
        "nodeType": "ImportDirective",
        "scope": 9172,
        "sourceUnit": 10138,
        "src": "161:52:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "solidity-bytes-utils/contracts/BytesLib.sol",
        "file": "solidity-bytes-utils/contracts/BytesLib.sol",
        "id": 9019,
        "nodeType": "ImportDirective",
        "scope": 9172,
        "sourceUnit": 12822,
        "src": "214:53:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol",
        "file": "../../CommunityFactory.sol",
        "id": 9020,
        "nodeType": "ImportDirective",
        "scope": 9172,
        "sourceUnit": 1668,
        "src": "268:36:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9022,
              "name": "IPoolFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9500,
              "src": "402:12:17"
            },
            "id": 9023,
            "nodeType": "InheritanceSpecifier",
            "src": "402:12:17"
          },
          {
            "baseName": {
              "id": 9024,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10137,
              "src": "416:7:17"
            },
            "id": 9025,
            "nodeType": "InheritanceSpecifier",
            "src": "416:7:17"
          }
        ],
        "contractDependencies": [
          9012,
          9500,
          10137,
          11338
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9021,
          "nodeType": "StructuredDocumentation",
          "src": "306:66:17",
          "text": " @dev Factory contract of Nutbox ERC20 staking pool.\nx"
        },
        "fullyImplemented": true,
        "id": 9171,
        "linearizedBaseContracts": [
          9171,
          10137,
          11338,
          9500
        ],
        "name": "SPStakingFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9028,
            "libraryName": {
              "id": 9026,
              "name": "BytesLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12821,
              "src": "436:8:17"
            },
            "nodeType": "UsingForDirective",
            "src": "430:25:17",
            "typeName": {
              "id": 9027,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "449:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "e78cea92",
            "id": 9030,
            "mutability": "mutable",
            "name": "bridge",
            "nodeType": "VariableDeclaration",
            "scope": 9171,
            "src": "460:21:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9029,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "460:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fac8a610",
            "id": 9032,
            "mutability": "immutable",
            "name": "communityFactory",
            "nodeType": "VariableDeclaration",
            "scope": 9171,
            "src": "487:41:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9031,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "487:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9051,
              "nodeType": "Block",
              "src": "574:122:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9038,
                          "name": "_communityFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9034,
                          "src": "592:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "621:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "613:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9039,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "613:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "613:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "592:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 9044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "625:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 9037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "584:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:59:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9046,
                  "nodeType": "ExpressionStatement",
                  "src": "584:59:17"
                },
                {
                  "expression": {
                    "id": 9049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9047,
                      "name": "communityFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9032,
                      "src": "653:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9048,
                      "name": "_communityFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9034,
                      "src": "672:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "653:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9050,
                  "nodeType": "ExpressionStatement",
                  "src": "653:36:17"
                }
              ]
            },
            "id": 9052,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9034,
                  "mutability": "mutable",
                  "name": "_communityFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 9052,
                  "src": "547:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "546:27:17"
            },
            "returnParameters": {
              "id": 9036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:0:17"
            },
            "scope": 9171,
            "src": "535:161:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 9064,
            "name": "SPStakingCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9054,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 9064,
                  "src": "734:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9056,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 9064,
                  "src": "764:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9058,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 9064,
                  "src": "799:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9057,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9060,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 9064,
                  "src": "820:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 9059,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9062,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 9064,
                  "src": "843:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9061,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:142:17"
            },
            "src": "702:165:17"
          },
          {
            "anonymous": false,
            "id": 9070,
            "name": "BridgeChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9066,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldBridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 9070,
                  "src": "892:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9068,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newBridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 9070,
                  "src": "919:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "891:54:17"
            },
            "src": "873:73:17"
          },
          {
            "baseFunctions": [
              9499
            ],
            "body": {
              "id": 9142,
              "nodeType": "Block",
              "src": "1067:475:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9083,
                          "name": "community",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9072,
                          "src": "1085:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9084,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1098:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1098:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1085:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e2064656e6965643a2063616c6c6572206973206e6f7420636f6d6d756e697479",
                        "id": 9087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1110:44:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6",
                          "typeString": "literal_string \"Permission denied: caller is not community\""
                        },
                        "value": "Permission denied: caller is not community"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6",
                          "typeString": "literal_string \"Permission denied: caller is not community\""
                        }
                      ],
                      "id": 9082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1077:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:78:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9089,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:78:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9095,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9072,
                            "src": "1225:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9092,
                                "name": "communityFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9032,
                                "src": "1190:16:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9091,
                              "name": "CommunityFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1667,
                              "src": "1173:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CommunityFactory_$1667_$",
                                "typeString": "type(contract CommunityFactory)"
                              }
                            },
                            "id": 9093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1173:34:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CommunityFactory_$1667",
                              "typeString": "contract CommunityFactory"
                            }
                          },
                          "id": 9094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "createdCommunity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1427,
                          "src": "1173:51:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 9096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1173:62:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6d6d756e697479",
                        "id": 9097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1237:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374",
                          "typeString": "literal_string \"Invalid community\""
                        },
                        "value": "Invalid community"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374",
                          "typeString": "literal_string \"Invalid community\""
                        }
                      ],
                      "id": 9090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1165:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1165:92:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9099,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:92:17"
                },
                {
                  "assignments": [
                    9101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9101,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "scope": 9142,
                      "src": "1267:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 9100,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1267:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9106,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 9104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1296:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 9102,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9076,
                        "src": "1283:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 9103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint8",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12604,
                      "src": "1283:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,uint256) pure returns (uint8)"
                      }
                    },
                    "id": 9105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1267:31:17"
                },
                {
                  "assignments": [
                    9108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9108,
                      "mutability": "mutable",
                      "name": "delegatee",
                      "nodeType": "VariableDeclaration",
                      "scope": 9142,
                      "src": "1308:17:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 9107,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1308:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9113,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 9111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1343:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 9109,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9076,
                        "src": "1328:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 9110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12786,
                      "src": "1328:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 9112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:17:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1308:37:17"
                },
                {
                  "assignments": [
                    9116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9116,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 9142,
                      "src": "1355:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SPStaking_$9012",
                        "typeString": "contract SPStaking"
                      },
                      "typeName": {
                        "id": 9115,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9114,
                          "name": "SPStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9012,
                          "src": "1355:9:17"
                        },
                        "referencedDeclaration": 9012,
                        "src": "1355:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SPStaking_$9012",
                          "typeString": "contract SPStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9125,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9120,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9072,
                        "src": "1386:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9121,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9074,
                        "src": "1397:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9122,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9101,
                        "src": "1403:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 9123,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9108,
                        "src": "1412:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 9119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1372:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint8_$_t_bytes32_$returns$_t_contract$_SPStaking_$9012_$",
                        "typeString": "function (address,string memory,uint8,bytes32) returns (contract SPStaking)"
                      },
                      "typeName": {
                        "id": 9118,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9117,
                          "name": "SPStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9012,
                          "src": "1376:9:17"
                        },
                        "referencedDeclaration": 9012,
                        "src": "1376:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SPStaking_$9012",
                          "typeString": "contract SPStaking"
                        }
                      }
                    },
                    "id": 9124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SPStaking_$9012",
                      "typeString": "contract SPStaking"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1355:67:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9129,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9116,
                            "src": "1462:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SPStaking_$9012",
                              "typeString": "contract SPStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SPStaking_$9012",
                              "typeString": "contract SPStaking"
                            }
                          ],
                          "id": 9128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1454:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1454:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1454:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9131,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9072,
                        "src": "1469:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9132,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9074,
                        "src": "1480:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9133,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9101,
                        "src": "1486:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 9134,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9108,
                        "src": "1495:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 9126,
                      "name": "SPStakingCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9064,
                      "src": "1437:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint8_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,string memory,uint8,bytes32)"
                      }
                    },
                    "id": 9135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:68:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9136,
                  "nodeType": "EmitStatement",
                  "src": "1432:73:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9139,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9116,
                        "src": "1530:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SPStaking_$9012",
                          "typeString": "contract SPStaking"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_SPStaking_$9012",
                          "typeString": "contract SPStaking"
                        }
                      ],
                      "id": 9138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1522:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 9137,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1522:7:17",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 9140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:13:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9081,
                  "id": 9141,
                  "nodeType": "Return",
                  "src": "1515:20:17"
                }
              ]
            },
            "functionSelector": "b883cc2a",
            "id": 9143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9078,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1032:8:17"
            },
            "parameters": {
              "id": 9077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9072,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 9143,
                  "src": "972:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9074,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 9143,
                  "src": "991:18:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9076,
                  "mutability": "mutable",
                  "name": "meta",
                  "nodeType": "VariableDeclaration",
                  "scope": 9143,
                  "src": "1011:19:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9075,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:60:17"
            },
            "returnParameters": {
              "id": 9081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9080,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9143,
                  "src": "1058:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1057:9:17"
            },
            "scope": 9171,
            "src": "952:590:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9169,
              "nodeType": "Block",
              "src": "1608:136:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9151,
                          "name": "_bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9145,
                          "src": "1626:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1645:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1637:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9152,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1637:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1637:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1626:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 9157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1649:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 9150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1618:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:49:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9159,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:49:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9161,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9030,
                        "src": "1695:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9162,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9145,
                        "src": "1703:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9160,
                      "name": "BridgeChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9070,
                      "src": "1682:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1682:29:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9164,
                  "nodeType": "EmitStatement",
                  "src": "1677:34:17"
                },
                {
                  "expression": {
                    "id": 9167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9165,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9030,
                      "src": "1721:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9166,
                      "name": "_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9145,
                      "src": "1730:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1721:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9168,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:16:17"
                }
              ]
            },
            "functionSelector": "1a5a143e",
            "id": 9170,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9148,
                "modifierName": {
                  "id": 9147,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10079,
                  "src": "1598:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1598:9:17"
              }
            ],
            "name": "adminSetBridge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9145,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 9170,
                  "src": "1572:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1571:17:17"
            },
            "returnParameters": {
              "id": 9149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1608:0:17"
            },
            "scope": 9171,
            "src": "1548:196:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9172,
        "src": "373:1373:17"
      }
    ],
    "src": "33:1714:17"
  },
  "legacyAST": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/sp-staking/SPStakingFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        9809
      ],
      "AccessControlEnumerable": [
        9934
      ],
      "ArbSys": [
        9257
      ],
      "BytesLib": [
        12821
      ],
      "Community": [
        1409
      ],
      "CommunityFactory": [
        1667
      ],
      "Context": [
        11338
      ],
      "ERC165": [
        11565
      ],
      "ERC20": [
        10978
      ],
      "ERC20Burnable": [
        11118
      ],
      "ERC20Helper": [
        1874
      ],
      "ERC20Pausable": [
        11155
      ],
      "ERC20PresetMinterPauser": [
        11316
      ],
      "EnumerableSet": [
        12488
      ],
      "IAccessControl": [
        10007
      ],
      "IAccessControlEnumerable": [
        10032
      ],
      "ICalculator": [
        9296
      ],
      "ICommittee": [
        9367
      ],
      "ICommunity": [
        9421
      ],
      "ICommunityTokenFactory": [
        9433
      ],
      "IERC165": [
        11577
      ],
      "IERC20": [
        11056
      ],
      "IERC20Metadata": [
        11180
      ],
      "IGauge": [
        9457
      ],
      "IPool": [
        9484
      ],
      "IPoolFactory": [
        9500
      ],
      "MintableERC20": [
        6737
      ],
      "Ownable": [
        10137
      ],
      "Pausable": [
        10229
      ],
      "SPStaking": [
        9012
      ],
      "SPStakingFactory": [
        9171
      ],
      "SafeMath": [
        11889
      ],
      "Strings": [
        11541
      ]
    },
    "id": 9172,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9014,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:17"
      },
      {
        "id": 9015,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:17"
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPoolFactory.sol",
        "file": "../../interfaces/IPoolFactory.sol",
        "id": 9016,
        "nodeType": "ImportDirective",
        "scope": 9172,
        "sourceUnit": 9501,
        "src": "91:43:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/dapps/sp-staking/SPStaking.sol",
        "file": "./SPStaking.sol",
        "id": 9017,
        "nodeType": "ImportDirective",
        "scope": 9172,
        "sourceUnit": 9013,
        "src": "135:25:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9018,
        "nodeType": "ImportDirective",
        "scope": 9172,
        "sourceUnit": 10138,
        "src": "161:52:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "solidity-bytes-utils/contracts/BytesLib.sol",
        "file": "solidity-bytes-utils/contracts/BytesLib.sol",
        "id": 9019,
        "nodeType": "ImportDirective",
        "scope": 9172,
        "sourceUnit": 12822,
        "src": "214:53:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol",
        "file": "../../CommunityFactory.sol",
        "id": 9020,
        "nodeType": "ImportDirective",
        "scope": 9172,
        "sourceUnit": 1668,
        "src": "268:36:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9022,
              "name": "IPoolFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9500,
              "src": "402:12:17"
            },
            "id": 9023,
            "nodeType": "InheritanceSpecifier",
            "src": "402:12:17"
          },
          {
            "baseName": {
              "id": 9024,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10137,
              "src": "416:7:17"
            },
            "id": 9025,
            "nodeType": "InheritanceSpecifier",
            "src": "416:7:17"
          }
        ],
        "contractDependencies": [
          9012,
          9500,
          10137,
          11338
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9021,
          "nodeType": "StructuredDocumentation",
          "src": "306:66:17",
          "text": " @dev Factory contract of Nutbox ERC20 staking pool.\nx"
        },
        "fullyImplemented": true,
        "id": 9171,
        "linearizedBaseContracts": [
          9171,
          10137,
          11338,
          9500
        ],
        "name": "SPStakingFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9028,
            "libraryName": {
              "id": 9026,
              "name": "BytesLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12821,
              "src": "436:8:17"
            },
            "nodeType": "UsingForDirective",
            "src": "430:25:17",
            "typeName": {
              "id": 9027,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "449:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "e78cea92",
            "id": 9030,
            "mutability": "mutable",
            "name": "bridge",
            "nodeType": "VariableDeclaration",
            "scope": 9171,
            "src": "460:21:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9029,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "460:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fac8a610",
            "id": 9032,
            "mutability": "immutable",
            "name": "communityFactory",
            "nodeType": "VariableDeclaration",
            "scope": 9171,
            "src": "487:41:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9031,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "487:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9051,
              "nodeType": "Block",
              "src": "574:122:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9038,
                          "name": "_communityFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9034,
                          "src": "592:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "621:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "613:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9039,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "613:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "613:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "592:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 9044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "625:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 9037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "584:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:59:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9046,
                  "nodeType": "ExpressionStatement",
                  "src": "584:59:17"
                },
                {
                  "expression": {
                    "id": 9049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9047,
                      "name": "communityFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9032,
                      "src": "653:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9048,
                      "name": "_communityFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9034,
                      "src": "672:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "653:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9050,
                  "nodeType": "ExpressionStatement",
                  "src": "653:36:17"
                }
              ]
            },
            "id": 9052,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9034,
                  "mutability": "mutable",
                  "name": "_communityFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 9052,
                  "src": "547:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "546:27:17"
            },
            "returnParameters": {
              "id": 9036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:0:17"
            },
            "scope": 9171,
            "src": "535:161:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 9064,
            "name": "SPStakingCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9054,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 9064,
                  "src": "734:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9056,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 9064,
                  "src": "764:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9058,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 9064,
                  "src": "799:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9057,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9060,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 9064,
                  "src": "820:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 9059,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9062,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 9064,
                  "src": "843:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9061,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:142:17"
            },
            "src": "702:165:17"
          },
          {
            "anonymous": false,
            "id": 9070,
            "name": "BridgeChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9066,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldBridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 9070,
                  "src": "892:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9068,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newBridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 9070,
                  "src": "919:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "891:54:17"
            },
            "src": "873:73:17"
          },
          {
            "baseFunctions": [
              9499
            ],
            "body": {
              "id": 9142,
              "nodeType": "Block",
              "src": "1067:475:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9083,
                          "name": "community",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9072,
                          "src": "1085:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9084,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1098:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1098:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1085:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e2064656e6965643a2063616c6c6572206973206e6f7420636f6d6d756e697479",
                        "id": 9087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1110:44:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6",
                          "typeString": "literal_string \"Permission denied: caller is not community\""
                        },
                        "value": "Permission denied: caller is not community"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8125c5b9ef5167ca990d66a58d401d2632a4719c858b24de7785e88e97135de6",
                          "typeString": "literal_string \"Permission denied: caller is not community\""
                        }
                      ],
                      "id": 9082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1077:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:78:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9089,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:78:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9095,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9072,
                            "src": "1225:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9092,
                                "name": "communityFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9032,
                                "src": "1190:16:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9091,
                              "name": "CommunityFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1667,
                              "src": "1173:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CommunityFactory_$1667_$",
                                "typeString": "type(contract CommunityFactory)"
                              }
                            },
                            "id": 9093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1173:34:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CommunityFactory_$1667",
                              "typeString": "contract CommunityFactory"
                            }
                          },
                          "id": 9094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "createdCommunity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1427,
                          "src": "1173:51:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 9096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1173:62:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6d6d756e697479",
                        "id": 9097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1237:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374",
                          "typeString": "literal_string \"Invalid community\""
                        },
                        "value": "Invalid community"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd823a1c641eb0d7b2df323d2858ca744ebd5e6fdf1413de5c98a1bdbab4f374",
                          "typeString": "literal_string \"Invalid community\""
                        }
                      ],
                      "id": 9090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1165:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1165:92:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9099,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:92:17"
                },
                {
                  "assignments": [
                    9101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9101,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "scope": 9142,
                      "src": "1267:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 9100,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1267:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9106,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 9104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1296:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 9102,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9076,
                        "src": "1283:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 9103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint8",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12604,
                      "src": "1283:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,uint256) pure returns (uint8)"
                      }
                    },
                    "id": 9105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1267:31:17"
                },
                {
                  "assignments": [
                    9108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9108,
                      "mutability": "mutable",
                      "name": "delegatee",
                      "nodeType": "VariableDeclaration",
                      "scope": 9142,
                      "src": "1308:17:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 9107,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1308:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9113,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 9111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1343:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 9109,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9076,
                        "src": "1328:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 9110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12786,
                      "src": "1328:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 9112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:17:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1308:37:17"
                },
                {
                  "assignments": [
                    9116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9116,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 9142,
                      "src": "1355:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SPStaking_$9012",
                        "typeString": "contract SPStaking"
                      },
                      "typeName": {
                        "id": 9115,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9114,
                          "name": "SPStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9012,
                          "src": "1355:9:17"
                        },
                        "referencedDeclaration": 9012,
                        "src": "1355:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SPStaking_$9012",
                          "typeString": "contract SPStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9125,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9120,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9072,
                        "src": "1386:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9121,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9074,
                        "src": "1397:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9122,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9101,
                        "src": "1403:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 9123,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9108,
                        "src": "1412:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 9119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1372:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint8_$_t_bytes32_$returns$_t_contract$_SPStaking_$9012_$",
                        "typeString": "function (address,string memory,uint8,bytes32) returns (contract SPStaking)"
                      },
                      "typeName": {
                        "id": 9118,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9117,
                          "name": "SPStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9012,
                          "src": "1376:9:17"
                        },
                        "referencedDeclaration": 9012,
                        "src": "1376:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SPStaking_$9012",
                          "typeString": "contract SPStaking"
                        }
                      }
                    },
                    "id": 9124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SPStaking_$9012",
                      "typeString": "contract SPStaking"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1355:67:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9129,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9116,
                            "src": "1462:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SPStaking_$9012",
                              "typeString": "contract SPStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SPStaking_$9012",
                              "typeString": "contract SPStaking"
                            }
                          ],
                          "id": 9128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1454:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1454:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1454:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9131,
                        "name": "community",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9072,
                        "src": "1469:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9132,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9074,
                        "src": "1480:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 9133,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9101,
                        "src": "1486:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 9134,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9108,
                        "src": "1495:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 9126,
                      "name": "SPStakingCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9064,
                      "src": "1437:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint8_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,string memory,uint8,bytes32)"
                      }
                    },
                    "id": 9135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:68:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9136,
                  "nodeType": "EmitStatement",
                  "src": "1432:73:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9139,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9116,
                        "src": "1530:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SPStaking_$9012",
                          "typeString": "contract SPStaking"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_SPStaking_$9012",
                          "typeString": "contract SPStaking"
                        }
                      ],
                      "id": 9138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1522:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 9137,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1522:7:17",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 9140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:13:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9081,
                  "id": 9141,
                  "nodeType": "Return",
                  "src": "1515:20:17"
                }
              ]
            },
            "functionSelector": "b883cc2a",
            "id": 9143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9078,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1032:8:17"
            },
            "parameters": {
              "id": 9077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9072,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 9143,
                  "src": "972:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9074,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 9143,
                  "src": "991:18:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9076,
                  "mutability": "mutable",
                  "name": "meta",
                  "nodeType": "VariableDeclaration",
                  "scope": 9143,
                  "src": "1011:19:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9075,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:60:17"
            },
            "returnParameters": {
              "id": 9081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9080,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9143,
                  "src": "1058:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1057:9:17"
            },
            "scope": 9171,
            "src": "952:590:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9169,
              "nodeType": "Block",
              "src": "1608:136:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9151,
                          "name": "_bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9145,
                          "src": "1626:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1645:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1637:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9152,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1637:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1637:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1626:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 9157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1649:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 9150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1618:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:49:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9159,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:49:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9161,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9030,
                        "src": "1695:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9162,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9145,
                        "src": "1703:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9160,
                      "name": "BridgeChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9070,
                      "src": "1682:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1682:29:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9164,
                  "nodeType": "EmitStatement",
                  "src": "1677:34:17"
                },
                {
                  "expression": {
                    "id": 9167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9165,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9030,
                      "src": "1721:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9166,
                      "name": "_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9145,
                      "src": "1730:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1721:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9168,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:16:17"
                }
              ]
            },
            "functionSelector": "1a5a143e",
            "id": 9170,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9148,
                "modifierName": {
                  "id": 9147,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10079,
                  "src": "1598:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1598:9:17"
              }
            ],
            "name": "adminSetBridge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9145,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 9170,
                  "src": "1572:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1571:17:17"
            },
            "returnParameters": {
              "id": 9149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1608:0:17"
            },
            "scope": 9171,
            "src": "1548:196:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9172,
        "src": "373:1373:17"
      }
    ],
    "src": "33:1714:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2023-06-14T03:47:44.732Z",
  "devdoc": {
    "details": "Factory contract of Nutbox ERC20 staking pool. x",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}