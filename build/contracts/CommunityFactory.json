{
  "contractName": "CommunityFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_committee",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "communityToken",
          "type": "address"
        }
      ],
      "name": "CommunityCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "createdCommunity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isMintable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "communityToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "communityTokenFactory",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "tokenMeta",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "rewardCalculator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "distributionPolicy",
          "type": "bytes"
        }
      ],
      "name": "createCommunity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_committee\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"communityToken\",\"type\":\"address\"}],\"name\":\"CommunityCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isMintable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"communityToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"communityTokenFactory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"tokenMeta\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"rewardCalculator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"distributionPolicy\",\"type\":\"bytes\"}],\"name\":\"createCommunity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"createdCommunity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract to create an StakingTemplate entity This is the entry contract that user start to create their own staking economy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol\":\"CommunityFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/Community.sol\":{\"keccak256\":\"0x454edbfbde8039209ebc91c564e44631a0f08cf433928a9b483f0e1ce6945990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5331943da057a53a3d207dcf0f8361f33ae70ed1183422bac19ff8ef6030596\",\"dweb:/ipfs/Qmb4F9GxC9cjymJrPvKWw6cbrk8wRgtnjiDTSTWb9Xj5n5\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol\":{\"keccak256\":\"0x651020221943be888ac06515c91ba57fb85a427ee46fe23e86db6eadfb3a2bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c05ef23811ecbda8079d230bc0e69c0b6fd8eb8411d10883c4313a786e78cbbb\",\"dweb:/ipfs/QmNms3YHXUFuY2nE5HkGHFtkRmpj5qffyXgSpmC4pZYgC6\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xddf2a441a9c0714ecc5c14ad5ee6c3ffa2e8155292229574369156004d2bcd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167987fa430b1303ad04b831fa610d31ca3f4202ad847e87cd9bb01156cfe9e0\",\"dweb:/ipfs/Qmf7a5unwgdUWTPfWZ94QRxVVxic12feERMNeC6krcmLmZ\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/community-token/MintableERC20.sol\":{\"keccak256\":\"0xd49c97ab428cd65d2326ad6875aed0082716bbfd094e5fd11cfafc6f778adcf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87da6adb416be4cfa38f6e08989390558297791f362cc237bee8c33080d3bd20\",\"dweb:/ipfs/QmYgQbaazS4L9KVvUhDq7pMxZGhCM8USrgJyjAsLkXDfLX\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ArbSys.sol\":{\"keccak256\":\"0x22f1cf1781c0d8828112ee5cce04e10bcc56dbb3fa668ceb10895393b21c70b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20f6c6a7c3b39241ebbb40490b70398ed8e013d061354447aba23553fd2a6ddc\",\"dweb:/ipfs/QmWzt87GoVDbz27AnbsZdAAoSK6763Jao7FEULLZfPY5by\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICalculator.sol\":{\"keccak256\":\"0x85e62c5ec77229d1e44b2c838b259829093e616ddbb887261eeaadd11c83c70a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8433eb15b4035948768e8707cae178742fc32fd60813dbba845d177ea87a89c7\",\"dweb:/ipfs/QmRByWaN4DZcSUyJABp1PViBDkBfQuHVAvqeU6FwqTPW9K\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommittee.sol\":{\"keccak256\":\"0x2190b0279cab5723ca36a492c45aad3b43f4f705d1df7d81e2932733b371397e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccd2ccfbbb75866a710e334056949888006443fd92404c66f22a2ffbd3a41acf\",\"dweb:/ipfs/QmUE1FEe5qLTp4TTrv9YBPgo97bdjABwUsRkZxkVcmXkUv\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunity.sol\":{\"keccak256\":\"0x9c8f1379634fc9df3fc965ebd5c11976ce3d71aab8996f8efe903aa4a3042811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e3fe744d29ff2f477050a263547fb192ee52180359d469b1cf1f79062f9db4\",\"dweb:/ipfs/QmcpTdndc9H2PmhTJgF5qabCotM74swULzMKCYDbDAACvp\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunityTokenFactory.sol\":{\"keccak256\":\"0x9a69a2d0752d3002d55ec2734724891fdab03de0a88e15ff297d85a3878924b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54fcdeb38c2292e11b14d0ff2b2d772ab8e14ce56d080685fede2f38749ff1d\",\"dweb:/ipfs/QmZdUicfe2kiGG5WaYpYN9yzNoXN7X3AmCMaosF4Vj6kzz\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IGauge.sol\":{\"keccak256\":\"0xafa9311f14cf7617763940d265d51448c613e574e6cbcdbb4412bd76ca7ae1fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d69b9acd6a010f1e8f5e0f3f533633a360c3f9d128d43c5191cc7e3d0864244\",\"dweb:/ipfs/QmQfwcyuTHGaw8xM9jwA9YzrxaKUSXTKNYobGwXLeCYus8\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xedea7672bb9703bcf57a6bbf386e4b528f55a698a08bc7c4481400738671ac83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20c0e753aa731e11ebe3e2918c863a4e72400983bb466660d3580ce4d9fbcf4\",\"dweb:/ipfs/QmUi3uZ9HVmZDAgyTTvWTPMtov2SudhFdSJ7jGLf8w3eis\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0x690fa318a561b45e70ceee542a68746d8b72a98c4ff83abb177c3e3710190fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91b6a4e9de1e1f01065c329d197dfd1f4d9a0996397f9f79b846804d75b1d2bd\",\"dweb:/ipfs/Qmc1eCVjE1xnQx2uMPkhAz5i3ohDDjEoVmJ5SZ8mdytScP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x1304796e9cdc64294735b4222849a240363b2aff374bb58b7c728f8dc0f4aa75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87398b4ba8f7c7e6613a5967e5407a5af6807e753d326d5e3b8c29697d33e36\",\"dweb:/ipfs/QmWGzaF9UWB5rNW1h9kvkJaWSf95WkQZ7RVR3bJ24oVgwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x978847fbff92d66d27d8767402a90ba996970b1936b372406aa17f5492bd8dc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1414cb92779420b50d3e796b47bad6ea800ef1805bc6f9bf35a3ccb4e17db3dc\",\"dweb:/ipfs/QmaMzwYqLiivfaWSgqeaAPboBtJjVD1hSrH48p7ExJZ7DG\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x670a64416cace45b7f4037a2c1cd66a83fbc2a573621fcf6aeb6b917abffde52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a53de93c53876cf4383ef42f9148f7262145e6ac3b0b2d77ec8e12fccacc81\",\"dweb:/ipfs/QmYqDjDinmFVdMZMwHfNdVFmRrZG9MR9LFfpnDxJAQegJB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161450238038061450283398101604081905261002f9161008d565b6001600160a01b038116610078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f906100bb565b60405180910390fd5b60601b6001600160601b0319166080526100f2565b60006020828403121561009e578081fd5b81516001600160a01b03811681146100b4578182fd5b9392505050565b60208082526011908201527f496e76616c696420636f6d6d6974746565000000000000000000000000000000604082015260600190565b60805160601c6143ad6101556000396000818160b301528181610195015281816102cd01528181610427015281816104ce01528181610559015281816106960152818161072c015281816107d60152818161087c015261098d01526143ad6000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c806368a94b6e146200003f578063cc83eac5146200006e575b600080fd5b620000566200005036600462000bf8565b62000087565b60405162000065919062000e74565b60405180910390f35b620000856200007f36600462000c5c565b6200009c565b005b60006020819052908152604090205460ff1681565b604051633d200b4560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d200b4590620000ea90869060040162000dbf565b60206040518083038186803b1580156200010357600080fd5b505afa15801562000118573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013e919062000c3d565b620001665760405162461bcd60e51b81526004016200015d9062000eb4565b60405180910390fd5b60006001600160a01b038816620002c85750604051633d200b4560e01b81526001985088906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d200b4590620001cc908a9060040162000dbf565b60206040518083038186803b158015620001e557600080fd5b505afa158015620001fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000220919062000c3d565b6200023f5760405162461bcd60e51b81526004016200015d9062000f05565b604051633120db1b60e01b81526001600160a01b03881690633120db1b906200026f908990899060040162000e96565b602060405180830381600087803b1580156200028a57600080fd5b505af11580156200029f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c5919062000c1e565b97505b6000337f00000000000000000000000000000000000000000000000000000000000000008a878d604051620002fd9062000ba0565b6200030d95949392919062000ded565b604051809103906000f0801580156200032a573d6000803e3d6000fd5b50905081156200040d57886001600160a01b0316632f2ff15d8a6001600160a01b031663d53913936040518163ffffffff1660e01b815260040160206040518083038186803b1580156200037d57600080fd5b505afa15801562000392573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003b8919062000d24565b836040518363ffffffff1660e01b8152600401620003d892919062000e7f565b600060405180830381600087803b158015620003f357600080fd5b505af115801562000408573d6000803e3d6000fd5b505050505b604051631da3ddcd60e31b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee68906200045c9060040162000f6c565b60206040518083038186803b1580156200047557600080fd5b505afa1580156200048a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b0919062000d24565b1115620008ed57604051631da3ddcd60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee6890620005039060040162000f6c565b60206040518083038186803b1580156200051c57600080fd5b505afa15801562000531573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000557919062000d24565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c10bde0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620005b157600080fd5b505afa158015620005c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005ec919062000c1e565b6001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b81526004016200061b92919062000dd3565b60206040518083038186803b1580156200063457600080fd5b505afa15801562000649573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200066f919062000d24565b1015620006905760405162461bcd60e51b81526004016200015d9062000f4e565b620008657f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c10bde0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620006ee57600080fd5b505afa15801562000703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000729919062000c1e565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633b19e84a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200078457600080fd5b505afa15801562000799573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007bf919062000c1e565b604051631da3ddcd60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee68906200080b9060040162000f6c565b60206040518083038186803b1580156200082457600080fd5b505afa15801562000839573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200085f919062000d24565b62000a65565b60405163038815f360e41b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338815f3090620008b8908490600090339060040162000f86565b600060405180830381600087803b158015620008d357600080fd5b505af1158015620008e8573d6000803e3d6000fd5b505050505b604051635a6c95f560e01b81526001600160a01b03861690635a6c95f5906200091f9084908890889060040162000e44565b602060405180830381600087803b1580156200093a57600080fd5b505af11580156200094f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000975919062000c3d565b50604051631f1a022360e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637c68088c90620009c490849060040162000dbf565b600060405180830381600087803b158015620009df57600080fd5b505af1158015620009f4573d6000803e3d6000fd5b5050506001600160a01b03821660008181526020819052604090819020805460ff191660011790555190915033907fa1d5744e33f2d9cf5537c7ea77603378e4dbda6a0bebd8d33a3e613a4d401bb79062000a51908d9062000dbf565b60405180910390a350505050505050505050565b8362000a748185858562000a7b565b5050505050565b62000ad7846323b872dd60e01b85858560405160240162000a9f9392919062000e20565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262000add565b50505050565b600080836001600160a01b03168360405162000afa919062000d83565b6000604051808303816000865af19150503d806000811462000b39576040519150601f19603f3d011682016040523d82523d6000602084013e62000b3e565b606091505b50915091508162000b635760405162461bcd60e51b81526004016200015d9062000f22565b80511562000ad7578080602001905181019062000b81919062000c3d565b62000ad75760405162461bcd60e51b81526004016200015d9062000ed0565b61338e8062000fea83390190565b60008083601f84011262000bc0578182fd5b50813567ffffffffffffffff81111562000bd8578182fd5b60208301915083602082850101111562000bf157600080fd5b9250929050565b60006020828403121562000c0a578081fd5b813562000c178162000fc1565b9392505050565b60006020828403121562000c30578081fd5b815162000c178162000fc1565b60006020828403121562000c4f578081fd5b815162000c178162000fda565b60008060008060008060008060c0898b03121562000c78578384fd5b883562000c858162000fda565b9750602089013562000c978162000fc1565b9650604089013562000ca98162000fc1565b9550606089013567ffffffffffffffff8082111562000cc6578586fd5b62000cd48c838d0162000bae565b909750955060808b0135915062000ceb8262000fc1565b90935060a08a0135908082111562000d01578384fd5b5062000d108b828c0162000bae565b999c989b5096995094979396929594505050565b60006020828403121562000d36578081fd5b5051919050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6009815268434f4d4d554e49545960b81b602082015260400190565b60008251815b8181101562000da5576020818601810151858301520162000d89565b8181111562000db45782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039586168152938516602085015291841660408401529092166060820152901515608082015260a00190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038416815260406020820181905260009062000e6b908301848662000d3d565b95945050505050565b901515815260200190565b9182526001600160a01b0316602082015260400190565b60006020825262000eac60208301848662000d3d565b949350505050565b602080825260029082015261554360f01b604082015260600190565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b60208082526003908201526255544360e81b604082015260600190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b6020808252600490820152631b99595960e21b604082015260600190565b60006020825262000f806020830162000d67565b92915050565b60006080825262000f9a6080830162000d67565b6001600160a01b039586166020840152938516604083015250921660609092019190915290565b6001600160a01b038116811462000fd757600080fd5b50565b801515811462000fd757600080fdfe6101006040523480156200001257600080fd5b506040516200338e3803806200338e83398101604081905262000035916200020e565b6200004962000043620000d4565b620000d8565b620000548562000128565b600180546001600160a01b0387166001600160a01b031990911681179091556001600160601b0319606086811b821660805285811b821660a05284901b1660e05281151560f81b60c0526040516000907f5d777218f34a12264a9fec685df1868059eeec6d632b17a1775a00089e57533a908290a3505050505062000316565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000132620000d4565b6001600160a01b031662000145620001e2565b6001600160a01b03161462000191576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018890620002e1565b60405180910390fd5b6001600160a01b038116620001d4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001889062000284565b620001df81620000d8565b50565b6000546001600160a01b031690565b80516001600160a01b03811681146200020957600080fd5b919050565b600080600080600060a0868803121562000226578081fd5b6200023186620001f1565b94506200024160208701620001f1565b93506200025160408701620001f1565b92506200026160608701620001f1565b91506080860151801515811462000276578182fd5b809150509295509295909350565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60805160601c60a05160601c60c05160f81c60e05160601c612fc9620003c560003960008181610fa4015281816116650152611d7e01526000818161105b0152818161160301526121ed015260008181610fe601528181611098015281816111ea0152818161221601526122460152600081816105f401528181610a01015281816119cf01528181611a7601528181611b0701528181611b9901528181611c3f0152611ce00152612fc96000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063a1970fa8116100de578063c10b3aee11610097578063f2fde38b11610071578063f2fde38b14610327578063f739a5291461033a578063fa32ddd81461034d578063fd0c94e3146103555761018e565b8063c10b3aee146102ee578063d262738314610301578063ef9b7208146103145761018e565b8063a1970fa81461027c578063a1a89dbc1461028f578063a2a00ed6146102a2578063a8c478ba146102b5578063af3bd4f2146102c8578063bf16c3c2146102db5761018e565b80637942016c1161014b57806396769e891161012557806396769e891461024457806398f69e9a1461024c57806399efcaec1461026c5780639af2e5ef146102745761018e565b80637942016c146102145780638ae63d6d146102275780638da5cb5b1461023c5761018e565b80630924004e14610193578063207cbd95146101a857806341744dd4146101bb57806354054370146101d95780635f78debd146101ec578063715018a61461020c575b600080fd5b6101a66101a1366004612650565b610368565b005b6101a66101b63660046127c1565b610571565b6101c3610826565b6040516101d09190612d9c565b60405180910390f35b6101a66101e73660046125e0565b610837565b6101ff6101fa3660046128c0565b6108f8565b6040516101d09190612949565b6101a6610922565b6101a66102223660046126ee565b61096d565b61022f610f1a565b6040516101d09190612dab565b6101ff610f93565b6101ff610fa2565b61025f61025a3660046125e0565b610fc6565b6040516101d09190612ae9565b6101ff610fe4565b6101a6611008565b6101a661028a3660046128c0565b6111a6565b61022f61029d3660046125e0565b611210565b61022f6102b0366004612618565b61122b565b61022f6102c33660046125e0565b611258565b6101a66102d636600461277c565b6112d3565b6101a66102e93660046126c3565b611311565b6101a66102fc366004612888565b61136a565b6101ff61030f3660046128c0565b611458565b6101a66103223660046126c3565b611468565b6101a66103353660046125e0565b6114f3565b6101a6610348366004612729565b611561565b61025f611601565b61022f610363366004612618565b611625565b610370611927565b6001600160a01b0316610381610f93565b6001600160a01b0316146103b05760405162461bcd60e51b81526004016103a790612cf3565b60405180910390fd5b6001600160a01b03831660009081526003602052604090205460ff166103e85760405162461bcd60e51b81526004016103a790612d7f565b6009546103f790600190612ea2565b8251146104165760405162461bcd60e51b81526004016103a790612bdb565b80518251146104375760405162461bcd60e51b81526004016103a790612b78565b60005b82518110156104bc576003600084838151811061046757634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166104aa5760405162461bcd60e51b81526004016103a790612d47565b806104b481612f07565b91505061043a565b506104c68161192b565b6104f960405180604001604052806009815260200168434f4d4d554e49545960b81b8152506104f3610f93565b856119b8565b6001600160a01b0383166000908152600360209081526040909120805460ff19169055825161052e9160099190850190612423565b5061053881612080565b6040516001600160a01b038416907fd9ddc9dcfa963ac8b810758254dfcbdd868ce81331581e7cfe5686f80cc0ed2090600090a2505050565b610579611927565b6001600160a01b031661058a610f93565b6001600160a01b0316146105b05760405162461bcd60e51b81526004016103a790612cf3565b83516009546105c0906001612e28565b146105dd5760405162461bcd60e51b81526004016103a790612c9c565b604051633d200b4560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d200b4590610629908690600401612949565b60206040518083038186803b15801561064157600080fd5b505afa158015610655573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610679919061275c565b6106955760405162461bcd60e51b81526004016103a790612c43565b61069e8461192b565b604051635c41e61560e11b81526000906001600160a01b0385169063b883cc2a906106d39030908a9088908890600401612981565b602060405180830381600087803b1580156106ed57600080fd5b505af1158015610701573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072591906125fc565b905061075a60405180604001604052806009815260200168434f4d4d554e49545960b81b815250610754610f93565b836119b8565b6001600160a01b03811660008181526003602090815260408083208054600160ff1991821681179092556007845282852080549091168217905560049092528220829055600980548083019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b03199081168517909155600a805492830181559092527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8018054909116909117905561081e85612080565b505050505050565b600054600160a01b900461ffff1681565b61083f611927565b6001600160a01b0316610850610f93565b6001600160a01b0316146108765760405162461bcd60e51b81526004016103a790612cf3565b6001600160a01b03811661089c5760405162461bcd60e51b81526004016103a790612cd7565b6001546040516001600160a01b038084169216907f5d777218f34a12264a9fec685df1868059eeec6d632b17a1775a00089e57533a90600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6009818154811061090857600080fd5b6000918252602090912001546001600160a01b0316905081565b61092a611927565b6001600160a01b031661093b610f93565b6001600160a01b0316146109615760405162461bcd60e51b81526004016103a790612cf3565b61096b6000612164565b565b600b5461097957610f17565b600081511161099a5760405162461bcd60e51b81526004016103a790612bf9565b600b546109a5610f1a565b11156109fa576109fa604051806040016040528060048152602001632aa9a2a960e11b81525033836000815181106109ed57634e487b7160e01b600052603260045260246000fd5b60200260200101516119b8565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2803f036040518163ffffffff1660e01b815260040160206040518083038186803b158015610a5857600080fd5b505afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9091906125fc565b905060005b84518160ff161015610eb5576000858260ff1681518110610ac657634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0381166000908152600790925260409091205490915060ff16610b0e5760405162461bcd60e51b81526004016103a790612d63565b6040516394465b2160e01b81526000906001600160a01b038316906394465b2190610b3d903390600401612949565b60206040518083038186803b158015610b5557600080fd5b505afa158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d91906128d8565b6001600160a01b0383166000818152600660209081526040808320338452825280832054938352600490915281205492935091610be79190610be19064e8d4a5100090610bdb9087906121b4565b906121c7565b906121d3565b905060006001600160a01b03861615801590610c7c5750604051632b6d7e0f60e21b81526001600160a01b0387169063adb5f83c90610c2a908790600401612949565b602060405180830381600087803b158015610c4457600080fd5b505af1158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c919061275c565b15610d25576000866001600160a01b031663328686f66040518163ffffffff1660e01b815260040160206040518083038186803b158015610cbc57600080fd5b505afa158015610cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf491906128a4565b905061ffff811615610d2357610d14612710610bdb8561ffff85166121b4565b9150610d2083896121d3565b92505b505b8015610da35760405163330ff7b560e21b81526001600160a01b0387169063cc3fded490610d5b9030908890869060040161295d565b600060405180830381600087803b158015610d7557600080fd5b505af1158015610d89573d6000803e3d6000fd5b50505050610da081886121df90919063ffffffff16565b96505b8115610dfc576001600160a01b0384166000908152600560209081526040808320338452909152902054610dd790836121df565b6001600160a01b03851660009081526005602090815260408083203384529091529020555b6001600160a01b0384166000908152600560209081526040808320338452909152902054610e2b9089906121df565b6001600160a01b038516600090815260046020526040902054909850610e5d9064e8d4a5100090610bdb9086906121b4565b6001600160a01b0390941660008181526006602090815260408083203380855290835281842098909855928252600581528282209682529590955284209390935550829150610ead905081612f22565b915050610a95565b508115610ec657610ec681836121eb565b610ed033846121eb565b336001600160a01b03167f6ef8cf0d66677b36d11ee4e51dbd733fcd95070b8c2eb524fb96952f26115cb28585604051610f0b929190612a12565b60405180910390a25050505b50565b600060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5657600080fd5b505afa158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e91906128d8565b905090565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b031660009081526003602052604090205460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000090565b611010611927565b6001600160a01b0316611021610f93565b6001600160a01b0316146110475760405162461bcd60e51b81526004016103a790612cf3565b60006002541161105657600080fd5b6002547f0000000000000000000000000000000000000000000000000000000000000000611136576040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906110cd903090600401612949565b60206040518083038186803b1580156110e557600080fd5b505afa1580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111d91906128d8565b9050600254811061113057600254611132565b805b9150505b60015461114c906001600160a01b0316826121eb565b60025461115990826121d3565b6002556001546040516001600160a01b03909116907f86a5cc8fe9af9ae68fb50f62885307a7755a30cbd290131644377f0bd94a71819061119b908490612dab565b60405180910390a250565b6111ae611927565b6001600160a01b03166111bf610f93565b6001600160a01b0316146111e55760405162461bcd60e51b81526004016103a790612cf3565b610f177f00000000000000000000000000000000000000000000000000000000000000003383612268565b6001600160a01b031660009081526004602052604090205490565b6001600160a01b038083166000908152600660209081526040808320938516835292905220545b92915050565b600080805b600a5461ffff821610156112cc576112b86112b1600a8361ffff168154811061129657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031686611625565b83906121df565b9150806112c481612ee5565b91505061125d565b5092915050565b3360009081526007602052604090205460ff166113025760405162461bcd60e51b81526004016103a790612cb9565b61130d8282336119b8565b5050565b3360009081526007602052604090205460ff166113405760405162461bcd60e51b81526004016103a790612cb9565b3360009081526006602090815260408083206001600160a01b039590951683529390529190912055565b611372611927565b6001600160a01b0316611383610f93565b6001600160a01b0316146113a95760405162461bcd60e51b81526004016103a790612cf3565b61271061ffff821611156113cf5760405162461bcd60e51b81526004016103a790612d28565b61140360405180604001604052806009815260200168434f4d4d554e49545960b81b8152506113fc610f93565b60006119b8565b6000805461ffff60a01b1916600160a01b61ffff8416021790556040517fb5ea2431f5202daeb0439a80df086a35ec0abfd105e20f5564a824062596c09e9061144d908390612d9c565b60405180910390a150565b600a818154811061090857600080fd5b3360009081526007602052604090205460ff166114975760405162461bcd60e51b81526004016103a790612cb9565b3360009081526005602090815260408083206001600160a01b03861684529091529020546114c590826121df565b3360009081526005602090815260408083206001600160a01b03969096168352949052929092209190915550565b6114fb611927565b6001600160a01b031661150c610f93565b6001600160a01b0316146115325760405162461bcd60e51b81526004016103a790612cf3565b6001600160a01b0381166115585760405162461bcd60e51b81526004016103a790612b95565b610f1781612164565b611569611927565b6001600160a01b031661157a610f93565b6001600160a01b0316146115a05760405162461bcd60e51b81526004016103a790612cf3565b8051600954146115c25760405162461bcd60e51b81526004016103a790612c80565b6115cb8161192b565b6115f860405180604001604052806009815260200168434f4d4d554e49545960b81b8152506113fc610f93565b610f1781612080565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600b546000141561163a57506000611252565b6000805461171e9061271090610bdb9061165f90600160a01b900461ffff1683612e7f565b61ffff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c32c36030600b5460016116a29190612e28565b6116aa610f1a565b6040518463ffffffff1660e01b81526004016116c8939291906129f1565b60206040518083038186803b1580156116e057600080fd5b505afa1580156116f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171891906128d8565b906121b4565b90506000846001600160a01b03166394465b21856040518263ffffffff1660e01b815260040161174e9190612949565b60206040518083038186803b15801561176657600080fd5b505afa15801561177a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179e91906128d8565b9050806117d3575050506001600160a01b03808316600090815260056020908152604080832093851683529290522054611252565b6000856001600160a01b03166338adb6f06040518163ffffffff1660e01b815260040160206040518083038186803b15801561180e57600080fd5b505afa158015611822573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184691906128d8565b6001600160a01b038716600090815260086020526040812054919250906118a590611886908490610bdb906305f5e10090611718908a9061ffff166121b4565b6001600160a01b038916600090815260046020526040902054906121df565b6001600160a01b038089166000908152600660209081526040808320938b16835292905290812054919250906118e890610be164e8d4a51000610bdb88876121b4565b6001600160a01b03808a166000908152600560209081526040808320938c168352929052205490915061191b90826121df565b98975050505050505050565b3390565b6000805b82518160ff16101561198557828160ff168151811061195e57634e487b7160e01b600052603260045260246000fd5b6020026020010151826119719190612e02565b91508061197d81612f22565b91505061192f565b5061ffff8116612710148061199c575061ffff8116155b61130d5760405162461bcd60e51b81526004016103a790612c60565b604051634ca1a91960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634ca1a91990611a04908590600401612949565b60206040518083038186803b158015611a1c57600080fd5b505afa158015611a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a54919061275c565b158015611afd5750604051631da3ddcd60e31b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee6890611aab908790600401612af4565b60206040518083038186803b158015611ac357600080fd5b505afa158015611ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afb91906128d8565b115b15611d4e57611cc97f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c10bde0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b5e57600080fd5b505afa158015611b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9691906125fc565b837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633b19e84a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bf057600080fd5b505afa158015611c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2891906125fc565b604051631da3ddcd60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee6890611c74908a90600401612af4565b60206040518083038186803b158015611c8c57600080fd5b505afa158015611ca0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc491906128d8565b61227a565b60405163038815f360e41b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338815f3090611d1b908690309086908890600401612b07565b600060405180830381600087803b158015611d3557600080fd5b505af1158015611d49573d6000803e3d6000fd5b505050505b600080611d59610f1a565b9050600b5460001415611d6c57600b8190555b600b548111611d7c57505061207b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c32c36030600b546001611dbb9190612e28565b846040518463ffffffff1660e01b8152600401611dda939291906129f1565b60206040518083038186803b158015611df257600080fd5b505afa158015611e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2a91906128d8565b91508115611eeb57600054600160a01b900461ffff1615611eeb5760008054611e679061271090610bdb908690600160a01b900461ffff166121b4565b600254909150611e7790826121df565b600255600054611ea69061271090610bdb90611e9f908390600160a01b900461ffff166121d3565b86906121b4565b9250846001600160a01b03167f2f4ae87a584f00dc35b043dd1c5ac839c1f41cd3a66e834d4e13faa6251634e682604051611ee19190612dab565b60405180910390a2505b60005b60095461ffff8216101561207557600060098261ffff1681548110611f2357634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546040805163038adb6f60e41b815290516001600160a01b03909216945084926338adb6f092600480840193829003018186803b158015611f7057600080fd5b505afa158015611f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa891906128d8565b9050801580611fd157506001600160a01b03821660009081526008602052604090205461ffff16155b15611fdd575050612063565b6001600160a01b0382166000908152600860205260408120546120159061271090610bdb9061ffff166117188a64e8d4a510006121b4565b905061204361202482846121c7565b6001600160a01b038516600090815260046020526040902054906121df565b6001600160a01b0390931660009081526004602052604090209290925550505b8061206d81612ee5565b915050611eee565b50600b55505b505050565b60005b60095461ffff8216101561213157818161ffff16815181106120b557634e487b7160e01b600052603260045260246000fd5b60200260200101516008600060098461ffff16815481106120e657634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805461ffff191661ffff929092169190911790558061212981612ee5565b915050612083565b507f5b904beeb70c84b12d4105e0582a752c5a2705717790e1a648a27ba8622b978660098260405161144d929190612a63565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006121c08284612e60565b9392505050565b60006121c08284612e40565b60006121c08284612ea2565b60006121c08284612e28565b7f0000000000000000000000000000000000000000000000000000000000000000156122415761223c7f0000000000000000000000000000000000000000000000000000000000000000838361228e565b61130d565b61130d7f000000000000000000000000000000000000000000000000000000000000000083835b826122748184846122f6565b50505050565b836122878185858561234c565b5050505050565b6040516340c10f1960e01b815283906001600160a01b038216906340c10f19906122be90869086906004016129d8565b600060405180830381600087803b1580156122d857600080fd5b505af11580156122ec573d6000803e3d6000fd5b5050505050505050565b61207b8363a9059cbb60e01b84846040516024016123159291906129d8565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261236d565b612274846323b872dd60e01b8585856040516024016123159392919061295d565b600080836001600160a01b031683604051612388919061292d565b6000604051808303816000865af19150503d80600081146123c5576040519150601f19603f3d011682016040523d82523d6000602084013e6123ca565b606091505b5091509150816123ec5760405162461bcd60e51b81526004016103a790612c17565b8051156122745780806020019051810190612407919061275c565b6122745760405162461bcd60e51b81526004016103a790612b43565b828054828255906000526020600020908101928215612478579160200282015b8281111561247857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612443565b50612484929150612488565b5090565b5b808211156124845760008155600101612489565b600082601f8301126124ad578081fd5b813560206124c26124bd83612dde565b612db4565b82815281810190858301838502870184018810156124de578586fd5b855b858110156125055781356124f381612f6e565b845292840192908401906001016124e0565b5090979650505050505050565b600082601f830112612522578081fd5b813560206125326124bd83612dde565b828152818101908583018385028701840188101561254e578586fd5b855b8581101561250557813561256381612f83565b84529284019290840190600101612550565b600082601f830112612585578081fd5b813567ffffffffffffffff81111561259f5761259f612f58565b6125b2601f8201601f1916602001612db4565b8181528460208386010111156125c6578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156125f1578081fd5b81356121c081612f6e565b60006020828403121561260d578081fd5b81516121c081612f6e565b6000806040838503121561262a578081fd5b823561263581612f6e565b9150602083013561264581612f6e565b809150509250929050565b600080600060608486031215612664578081fd5b833561266f81612f6e565b9250602084013567ffffffffffffffff8082111561268b578283fd5b6126978783880161249d565b935060408601359150808211156126ac578283fd5b506126b986828701612512565b9150509250925092565b600080604083850312156126d5578182fd5b82356126e081612f6e565b946020939093013593505050565b6000602082840312156126ff578081fd5b813567ffffffffffffffff811115612715578182fd5b6127218482850161249d565b949350505050565b60006020828403121561273a578081fd5b813567ffffffffffffffff811115612750578182fd5b61272184828501612512565b60006020828403121561276d578081fd5b815180151581146121c0578182fd5b6000806040838503121561278e578182fd5b823567ffffffffffffffff8111156127a4578283fd5b6127b085828601612575565b925050602083013561264581612f6e565b6000806000806000608086880312156127d8578081fd5b853567ffffffffffffffff808211156127ef578283fd5b6127fb89838a01612575565b96506020880135915080821115612810578283fd5b61281c89838a01612512565b95506040880135915061282e82612f6e565b90935060608701359080821115612843578283fd5b818801915088601f830112612856578283fd5b813581811115612864578384fd5b896020828501011115612875578384fd5b9699959850939650602001949392505050565b600060208284031215612899578081fd5b81356121c081612f83565b6000602082840312156128b5578081fd5b81516121c081612f83565b6000602082840312156128d1578081fd5b5035919050565b6000602082840312156128e9578081fd5b5051919050565b6001600160a01b0316815260200190565b60008151808452612919816020860160208601612eb9565b601f01601f19169290920160200192915050565b6000825161293f818460208701612eb9565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03851681526060602082018190526000906129a590830186612901565b82810360408401528381528385602083013781602085830101526020601f19601f86011682010191505095945050505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b604080825283519082018190526000906020906060840190828701845b82811015612a545781516001600160a01b031684529284019290840190600101612a2f565b50505092019290925292915050565b6000604082016040835280855480835260608501915086845260209250828420845b82811015612ab1578154612aa39085906001600160a01b03166128f0565b935060019182019101612a85565b50505083810382850152845180825285830191830190845b8181101561250557835161ffff1683529284019291840191600101612ac9565b901515815260200190565b6000602082526121c06020830184612901565b600060808252612b1a6080830187612901565b6001600160a01b0395861660208401529385166040830152509216606090920191909152919050565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b6020808252600390820152624c444d60e81b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526004908201526315d0541360e21b604082015260600190565b6020808252600490820152634d484f3160e01b604082015260600190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b6020808252600390820152622aa82360e91b604082015260600190565b6020808252600690820152655253213d317760d01b604082015260600190565b60208082526002908201526115d360f21b604082015260600190565b60208082526003908201526257504360e81b604082015260600190565b602080825260049082015263504e495760e01b604082015260600190565b602080825260029082015261494160f01b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526005908201526450523e317760d81b604082015260600190565b602080825260029082015261057560f41b604082015260600190565b602080825260029082015261049560f41b604082015260600190565b60208082526003908201526250494160e81b604082015260600190565b61ffff91909116815260200190565b90815260200190565b60405181810167ffffffffffffffff81118282101715612dd657612dd6612f58565b604052919050565b600067ffffffffffffffff821115612df857612df8612f58565b5060209081020190565b600061ffff808316818516808303821115612e1f57612e1f612f42565b01949350505050565b60008219821115612e3b57612e3b612f42565b500190565b600082612e5b57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612e7a57612e7a612f42565b500290565b600061ffff83811690831681811015612e9a57612e9a612f42565b039392505050565b600082821015612eb457612eb4612f42565b500390565b60005b83811015612ed4578181015183820152602001612ebc565b838111156122745750506000910152565b600061ffff80831681811415612efd57612efd612f42565b6001019392505050565b6000600019821415612f1b57612f1b612f42565b5060010190565b600060ff821660ff811415612f3957612f39612f42565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f1757600080fd5b61ffff81168114610f1757600080fdfea2646970667358221220c37038deb0750564796c17d8d84ba65d2df75f4ae9d354b01380520e4209f5b464736f6c63430008000033a264697066735822122052a9a093d8c57f061c948e47b291ad6b117bcad98fbc0f7dbf0ac4c354ec7e5c64736f6c63430008000033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200003a5760003560e01c806368a94b6e146200003f578063cc83eac5146200006e575b600080fd5b620000566200005036600462000bf8565b62000087565b60405162000065919062000e74565b60405180910390f35b620000856200007f36600462000c5c565b6200009c565b005b60006020819052908152604090205460ff1681565b604051633d200b4560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d200b4590620000ea90869060040162000dbf565b60206040518083038186803b1580156200010357600080fd5b505afa15801562000118573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013e919062000c3d565b620001665760405162461bcd60e51b81526004016200015d9062000eb4565b60405180910390fd5b60006001600160a01b038816620002c85750604051633d200b4560e01b81526001985088906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d200b4590620001cc908a9060040162000dbf565b60206040518083038186803b158015620001e557600080fd5b505afa158015620001fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000220919062000c3d565b6200023f5760405162461bcd60e51b81526004016200015d9062000f05565b604051633120db1b60e01b81526001600160a01b03881690633120db1b906200026f908990899060040162000e96565b602060405180830381600087803b1580156200028a57600080fd5b505af11580156200029f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c5919062000c1e565b97505b6000337f00000000000000000000000000000000000000000000000000000000000000008a878d604051620002fd9062000ba0565b6200030d95949392919062000ded565b604051809103906000f0801580156200032a573d6000803e3d6000fd5b50905081156200040d57886001600160a01b0316632f2ff15d8a6001600160a01b031663d53913936040518163ffffffff1660e01b815260040160206040518083038186803b1580156200037d57600080fd5b505afa15801562000392573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003b8919062000d24565b836040518363ffffffff1660e01b8152600401620003d892919062000e7f565b600060405180830381600087803b158015620003f357600080fd5b505af115801562000408573d6000803e3d6000fd5b505050505b604051631da3ddcd60e31b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee68906200045c9060040162000f6c565b60206040518083038186803b1580156200047557600080fd5b505afa1580156200048a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b0919062000d24565b1115620008ed57604051631da3ddcd60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee6890620005039060040162000f6c565b60206040518083038186803b1580156200051c57600080fd5b505afa15801562000531573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000557919062000d24565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c10bde0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620005b157600080fd5b505afa158015620005c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005ec919062000c1e565b6001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b81526004016200061b92919062000dd3565b60206040518083038186803b1580156200063457600080fd5b505afa15801562000649573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200066f919062000d24565b1015620006905760405162461bcd60e51b81526004016200015d9062000f4e565b620008657f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c10bde0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620006ee57600080fd5b505afa15801562000703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000729919062000c1e565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633b19e84a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200078457600080fd5b505afa15801562000799573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007bf919062000c1e565b604051631da3ddcd60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee68906200080b9060040162000f6c565b60206040518083038186803b1580156200082457600080fd5b505afa15801562000839573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200085f919062000d24565b62000a65565b60405163038815f360e41b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338815f3090620008b8908490600090339060040162000f86565b600060405180830381600087803b158015620008d357600080fd5b505af1158015620008e8573d6000803e3d6000fd5b505050505b604051635a6c95f560e01b81526001600160a01b03861690635a6c95f5906200091f9084908890889060040162000e44565b602060405180830381600087803b1580156200093a57600080fd5b505af11580156200094f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000975919062000c3d565b50604051631f1a022360e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637c68088c90620009c490849060040162000dbf565b600060405180830381600087803b158015620009df57600080fd5b505af1158015620009f4573d6000803e3d6000fd5b5050506001600160a01b03821660008181526020819052604090819020805460ff191660011790555190915033907fa1d5744e33f2d9cf5537c7ea77603378e4dbda6a0bebd8d33a3e613a4d401bb79062000a51908d9062000dbf565b60405180910390a350505050505050505050565b8362000a748185858562000a7b565b5050505050565b62000ad7846323b872dd60e01b85858560405160240162000a9f9392919062000e20565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262000add565b50505050565b600080836001600160a01b03168360405162000afa919062000d83565b6000604051808303816000865af19150503d806000811462000b39576040519150601f19603f3d011682016040523d82523d6000602084013e62000b3e565b606091505b50915091508162000b635760405162461bcd60e51b81526004016200015d9062000f22565b80511562000ad7578080602001905181019062000b81919062000c3d565b62000ad75760405162461bcd60e51b81526004016200015d9062000ed0565b61338e8062000fea83390190565b60008083601f84011262000bc0578182fd5b50813567ffffffffffffffff81111562000bd8578182fd5b60208301915083602082850101111562000bf157600080fd5b9250929050565b60006020828403121562000c0a578081fd5b813562000c178162000fc1565b9392505050565b60006020828403121562000c30578081fd5b815162000c178162000fc1565b60006020828403121562000c4f578081fd5b815162000c178162000fda565b60008060008060008060008060c0898b03121562000c78578384fd5b883562000c858162000fda565b9750602089013562000c978162000fc1565b9650604089013562000ca98162000fc1565b9550606089013567ffffffffffffffff8082111562000cc6578586fd5b62000cd48c838d0162000bae565b909750955060808b0135915062000ceb8262000fc1565b90935060a08a0135908082111562000d01578384fd5b5062000d108b828c0162000bae565b999c989b5096995094979396929594505050565b60006020828403121562000d36578081fd5b5051919050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6009815268434f4d4d554e49545960b81b602082015260400190565b60008251815b8181101562000da5576020818601810151858301520162000d89565b8181111562000db45782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039586168152938516602085015291841660408401529092166060820152901515608082015260a00190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038416815260406020820181905260009062000e6b908301848662000d3d565b95945050505050565b901515815260200190565b9182526001600160a01b0316602082015260400190565b60006020825262000eac60208301848662000d3d565b949350505050565b602080825260029082015261554360f01b604082015260600190565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b60208082526003908201526255544360e81b604082015260600190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b6020808252600490820152631b99595960e21b604082015260600190565b60006020825262000f806020830162000d67565b92915050565b60006080825262000f9a6080830162000d67565b6001600160a01b039586166020840152938516604083015250921660609092019190915290565b6001600160a01b038116811462000fd757600080fd5b50565b801515811462000fd757600080fdfe6101006040523480156200001257600080fd5b506040516200338e3803806200338e83398101604081905262000035916200020e565b6200004962000043620000d4565b620000d8565b620000548562000128565b600180546001600160a01b0387166001600160a01b031990911681179091556001600160601b0319606086811b821660805285811b821660a05284901b1660e05281151560f81b60c0526040516000907f5d777218f34a12264a9fec685df1868059eeec6d632b17a1775a00089e57533a908290a3505050505062000316565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000132620000d4565b6001600160a01b031662000145620001e2565b6001600160a01b03161462000191576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018890620002e1565b60405180910390fd5b6001600160a01b038116620001d4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001889062000284565b620001df81620000d8565b50565b6000546001600160a01b031690565b80516001600160a01b03811681146200020957600080fd5b919050565b600080600080600060a0868803121562000226578081fd5b6200023186620001f1565b94506200024160208701620001f1565b93506200025160408701620001f1565b92506200026160608701620001f1565b91506080860151801515811462000276578182fd5b809150509295509295909350565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60805160601c60a05160601c60c05160f81c60e05160601c612fc9620003c560003960008181610fa4015281816116650152611d7e01526000818161105b0152818161160301526121ed015260008181610fe601528181611098015281816111ea0152818161221601526122460152600081816105f401528181610a01015281816119cf01528181611a7601528181611b0701528181611b9901528181611c3f0152611ce00152612fc96000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063a1970fa8116100de578063c10b3aee11610097578063f2fde38b11610071578063f2fde38b14610327578063f739a5291461033a578063fa32ddd81461034d578063fd0c94e3146103555761018e565b8063c10b3aee146102ee578063d262738314610301578063ef9b7208146103145761018e565b8063a1970fa81461027c578063a1a89dbc1461028f578063a2a00ed6146102a2578063a8c478ba146102b5578063af3bd4f2146102c8578063bf16c3c2146102db5761018e565b80637942016c1161014b57806396769e891161012557806396769e891461024457806398f69e9a1461024c57806399efcaec1461026c5780639af2e5ef146102745761018e565b80637942016c146102145780638ae63d6d146102275780638da5cb5b1461023c5761018e565b80630924004e14610193578063207cbd95146101a857806341744dd4146101bb57806354054370146101d95780635f78debd146101ec578063715018a61461020c575b600080fd5b6101a66101a1366004612650565b610368565b005b6101a66101b63660046127c1565b610571565b6101c3610826565b6040516101d09190612d9c565b60405180910390f35b6101a66101e73660046125e0565b610837565b6101ff6101fa3660046128c0565b6108f8565b6040516101d09190612949565b6101a6610922565b6101a66102223660046126ee565b61096d565b61022f610f1a565b6040516101d09190612dab565b6101ff610f93565b6101ff610fa2565b61025f61025a3660046125e0565b610fc6565b6040516101d09190612ae9565b6101ff610fe4565b6101a6611008565b6101a661028a3660046128c0565b6111a6565b61022f61029d3660046125e0565b611210565b61022f6102b0366004612618565b61122b565b61022f6102c33660046125e0565b611258565b6101a66102d636600461277c565b6112d3565b6101a66102e93660046126c3565b611311565b6101a66102fc366004612888565b61136a565b6101ff61030f3660046128c0565b611458565b6101a66103223660046126c3565b611468565b6101a66103353660046125e0565b6114f3565b6101a6610348366004612729565b611561565b61025f611601565b61022f610363366004612618565b611625565b610370611927565b6001600160a01b0316610381610f93565b6001600160a01b0316146103b05760405162461bcd60e51b81526004016103a790612cf3565b60405180910390fd5b6001600160a01b03831660009081526003602052604090205460ff166103e85760405162461bcd60e51b81526004016103a790612d7f565b6009546103f790600190612ea2565b8251146104165760405162461bcd60e51b81526004016103a790612bdb565b80518251146104375760405162461bcd60e51b81526004016103a790612b78565b60005b82518110156104bc576003600084838151811061046757634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166104aa5760405162461bcd60e51b81526004016103a790612d47565b806104b481612f07565b91505061043a565b506104c68161192b565b6104f960405180604001604052806009815260200168434f4d4d554e49545960b81b8152506104f3610f93565b856119b8565b6001600160a01b0383166000908152600360209081526040909120805460ff19169055825161052e9160099190850190612423565b5061053881612080565b6040516001600160a01b038416907fd9ddc9dcfa963ac8b810758254dfcbdd868ce81331581e7cfe5686f80cc0ed2090600090a2505050565b610579611927565b6001600160a01b031661058a610f93565b6001600160a01b0316146105b05760405162461bcd60e51b81526004016103a790612cf3565b83516009546105c0906001612e28565b146105dd5760405162461bcd60e51b81526004016103a790612c9c565b604051633d200b4560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d200b4590610629908690600401612949565b60206040518083038186803b15801561064157600080fd5b505afa158015610655573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610679919061275c565b6106955760405162461bcd60e51b81526004016103a790612c43565b61069e8461192b565b604051635c41e61560e11b81526000906001600160a01b0385169063b883cc2a906106d39030908a9088908890600401612981565b602060405180830381600087803b1580156106ed57600080fd5b505af1158015610701573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072591906125fc565b905061075a60405180604001604052806009815260200168434f4d4d554e49545960b81b815250610754610f93565b836119b8565b6001600160a01b03811660008181526003602090815260408083208054600160ff1991821681179092556007845282852080549091168217905560049092528220829055600980548083019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b03199081168517909155600a805492830181559092527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8018054909116909117905561081e85612080565b505050505050565b600054600160a01b900461ffff1681565b61083f611927565b6001600160a01b0316610850610f93565b6001600160a01b0316146108765760405162461bcd60e51b81526004016103a790612cf3565b6001600160a01b03811661089c5760405162461bcd60e51b81526004016103a790612cd7565b6001546040516001600160a01b038084169216907f5d777218f34a12264a9fec685df1868059eeec6d632b17a1775a00089e57533a90600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6009818154811061090857600080fd5b6000918252602090912001546001600160a01b0316905081565b61092a611927565b6001600160a01b031661093b610f93565b6001600160a01b0316146109615760405162461bcd60e51b81526004016103a790612cf3565b61096b6000612164565b565b600b5461097957610f17565b600081511161099a5760405162461bcd60e51b81526004016103a790612bf9565b600b546109a5610f1a565b11156109fa576109fa604051806040016040528060048152602001632aa9a2a960e11b81525033836000815181106109ed57634e487b7160e01b600052603260045260246000fd5b60200260200101516119b8565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2803f036040518163ffffffff1660e01b815260040160206040518083038186803b158015610a5857600080fd5b505afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9091906125fc565b905060005b84518160ff161015610eb5576000858260ff1681518110610ac657634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0381166000908152600790925260409091205490915060ff16610b0e5760405162461bcd60e51b81526004016103a790612d63565b6040516394465b2160e01b81526000906001600160a01b038316906394465b2190610b3d903390600401612949565b60206040518083038186803b158015610b5557600080fd5b505afa158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d91906128d8565b6001600160a01b0383166000818152600660209081526040808320338452825280832054938352600490915281205492935091610be79190610be19064e8d4a5100090610bdb9087906121b4565b906121c7565b906121d3565b905060006001600160a01b03861615801590610c7c5750604051632b6d7e0f60e21b81526001600160a01b0387169063adb5f83c90610c2a908790600401612949565b602060405180830381600087803b158015610c4457600080fd5b505af1158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c919061275c565b15610d25576000866001600160a01b031663328686f66040518163ffffffff1660e01b815260040160206040518083038186803b158015610cbc57600080fd5b505afa158015610cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf491906128a4565b905061ffff811615610d2357610d14612710610bdb8561ffff85166121b4565b9150610d2083896121d3565b92505b505b8015610da35760405163330ff7b560e21b81526001600160a01b0387169063cc3fded490610d5b9030908890869060040161295d565b600060405180830381600087803b158015610d7557600080fd5b505af1158015610d89573d6000803e3d6000fd5b50505050610da081886121df90919063ffffffff16565b96505b8115610dfc576001600160a01b0384166000908152600560209081526040808320338452909152902054610dd790836121df565b6001600160a01b03851660009081526005602090815260408083203384529091529020555b6001600160a01b0384166000908152600560209081526040808320338452909152902054610e2b9089906121df565b6001600160a01b038516600090815260046020526040902054909850610e5d9064e8d4a5100090610bdb9086906121b4565b6001600160a01b0390941660008181526006602090815260408083203380855290835281842098909855928252600581528282209682529590955284209390935550829150610ead905081612f22565b915050610a95565b508115610ec657610ec681836121eb565b610ed033846121eb565b336001600160a01b03167f6ef8cf0d66677b36d11ee4e51dbd733fcd95070b8c2eb524fb96952f26115cb28585604051610f0b929190612a12565b60405180910390a25050505b50565b600060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5657600080fd5b505afa158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e91906128d8565b905090565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b031660009081526003602052604090205460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000090565b611010611927565b6001600160a01b0316611021610f93565b6001600160a01b0316146110475760405162461bcd60e51b81526004016103a790612cf3565b60006002541161105657600080fd5b6002547f0000000000000000000000000000000000000000000000000000000000000000611136576040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906110cd903090600401612949565b60206040518083038186803b1580156110e557600080fd5b505afa1580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111d91906128d8565b9050600254811061113057600254611132565b805b9150505b60015461114c906001600160a01b0316826121eb565b60025461115990826121d3565b6002556001546040516001600160a01b03909116907f86a5cc8fe9af9ae68fb50f62885307a7755a30cbd290131644377f0bd94a71819061119b908490612dab565b60405180910390a250565b6111ae611927565b6001600160a01b03166111bf610f93565b6001600160a01b0316146111e55760405162461bcd60e51b81526004016103a790612cf3565b610f177f00000000000000000000000000000000000000000000000000000000000000003383612268565b6001600160a01b031660009081526004602052604090205490565b6001600160a01b038083166000908152600660209081526040808320938516835292905220545b92915050565b600080805b600a5461ffff821610156112cc576112b86112b1600a8361ffff168154811061129657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031686611625565b83906121df565b9150806112c481612ee5565b91505061125d565b5092915050565b3360009081526007602052604090205460ff166113025760405162461bcd60e51b81526004016103a790612cb9565b61130d8282336119b8565b5050565b3360009081526007602052604090205460ff166113405760405162461bcd60e51b81526004016103a790612cb9565b3360009081526006602090815260408083206001600160a01b039590951683529390529190912055565b611372611927565b6001600160a01b0316611383610f93565b6001600160a01b0316146113a95760405162461bcd60e51b81526004016103a790612cf3565b61271061ffff821611156113cf5760405162461bcd60e51b81526004016103a790612d28565b61140360405180604001604052806009815260200168434f4d4d554e49545960b81b8152506113fc610f93565b60006119b8565b6000805461ffff60a01b1916600160a01b61ffff8416021790556040517fb5ea2431f5202daeb0439a80df086a35ec0abfd105e20f5564a824062596c09e9061144d908390612d9c565b60405180910390a150565b600a818154811061090857600080fd5b3360009081526007602052604090205460ff166114975760405162461bcd60e51b81526004016103a790612cb9565b3360009081526005602090815260408083206001600160a01b03861684529091529020546114c590826121df565b3360009081526005602090815260408083206001600160a01b03969096168352949052929092209190915550565b6114fb611927565b6001600160a01b031661150c610f93565b6001600160a01b0316146115325760405162461bcd60e51b81526004016103a790612cf3565b6001600160a01b0381166115585760405162461bcd60e51b81526004016103a790612b95565b610f1781612164565b611569611927565b6001600160a01b031661157a610f93565b6001600160a01b0316146115a05760405162461bcd60e51b81526004016103a790612cf3565b8051600954146115c25760405162461bcd60e51b81526004016103a790612c80565b6115cb8161192b565b6115f860405180604001604052806009815260200168434f4d4d554e49545960b81b8152506113fc610f93565b610f1781612080565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600b546000141561163a57506000611252565b6000805461171e9061271090610bdb9061165f90600160a01b900461ffff1683612e7f565b61ffff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c32c36030600b5460016116a29190612e28565b6116aa610f1a565b6040518463ffffffff1660e01b81526004016116c8939291906129f1565b60206040518083038186803b1580156116e057600080fd5b505afa1580156116f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171891906128d8565b906121b4565b90506000846001600160a01b03166394465b21856040518263ffffffff1660e01b815260040161174e9190612949565b60206040518083038186803b15801561176657600080fd5b505afa15801561177a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179e91906128d8565b9050806117d3575050506001600160a01b03808316600090815260056020908152604080832093851683529290522054611252565b6000856001600160a01b03166338adb6f06040518163ffffffff1660e01b815260040160206040518083038186803b15801561180e57600080fd5b505afa158015611822573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184691906128d8565b6001600160a01b038716600090815260086020526040812054919250906118a590611886908490610bdb906305f5e10090611718908a9061ffff166121b4565b6001600160a01b038916600090815260046020526040902054906121df565b6001600160a01b038089166000908152600660209081526040808320938b16835292905290812054919250906118e890610be164e8d4a51000610bdb88876121b4565b6001600160a01b03808a166000908152600560209081526040808320938c168352929052205490915061191b90826121df565b98975050505050505050565b3390565b6000805b82518160ff16101561198557828160ff168151811061195e57634e487b7160e01b600052603260045260246000fd5b6020026020010151826119719190612e02565b91508061197d81612f22565b91505061192f565b5061ffff8116612710148061199c575061ffff8116155b61130d5760405162461bcd60e51b81526004016103a790612c60565b604051634ca1a91960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634ca1a91990611a04908590600401612949565b60206040518083038186803b158015611a1c57600080fd5b505afa158015611a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a54919061275c565b158015611afd5750604051631da3ddcd60e31b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee6890611aab908790600401612af4565b60206040518083038186803b158015611ac357600080fd5b505afa158015611ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afb91906128d8565b115b15611d4e57611cc97f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c10bde0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b5e57600080fd5b505afa158015611b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9691906125fc565b837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633b19e84a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bf057600080fd5b505afa158015611c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2891906125fc565b604051631da3ddcd60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee6890611c74908a90600401612af4565b60206040518083038186803b158015611c8c57600080fd5b505afa158015611ca0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc491906128d8565b61227a565b60405163038815f360e41b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338815f3090611d1b908690309086908890600401612b07565b600060405180830381600087803b158015611d3557600080fd5b505af1158015611d49573d6000803e3d6000fd5b505050505b600080611d59610f1a565b9050600b5460001415611d6c57600b8190555b600b548111611d7c57505061207b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c32c36030600b546001611dbb9190612e28565b846040518463ffffffff1660e01b8152600401611dda939291906129f1565b60206040518083038186803b158015611df257600080fd5b505afa158015611e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2a91906128d8565b91508115611eeb57600054600160a01b900461ffff1615611eeb5760008054611e679061271090610bdb908690600160a01b900461ffff166121b4565b600254909150611e7790826121df565b600255600054611ea69061271090610bdb90611e9f908390600160a01b900461ffff166121d3565b86906121b4565b9250846001600160a01b03167f2f4ae87a584f00dc35b043dd1c5ac839c1f41cd3a66e834d4e13faa6251634e682604051611ee19190612dab565b60405180910390a2505b60005b60095461ffff8216101561207557600060098261ffff1681548110611f2357634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546040805163038adb6f60e41b815290516001600160a01b03909216945084926338adb6f092600480840193829003018186803b158015611f7057600080fd5b505afa158015611f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa891906128d8565b9050801580611fd157506001600160a01b03821660009081526008602052604090205461ffff16155b15611fdd575050612063565b6001600160a01b0382166000908152600860205260408120546120159061271090610bdb9061ffff166117188a64e8d4a510006121b4565b905061204361202482846121c7565b6001600160a01b038516600090815260046020526040902054906121df565b6001600160a01b0390931660009081526004602052604090209290925550505b8061206d81612ee5565b915050611eee565b50600b55505b505050565b60005b60095461ffff8216101561213157818161ffff16815181106120b557634e487b7160e01b600052603260045260246000fd5b60200260200101516008600060098461ffff16815481106120e657634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805461ffff191661ffff929092169190911790558061212981612ee5565b915050612083565b507f5b904beeb70c84b12d4105e0582a752c5a2705717790e1a648a27ba8622b978660098260405161144d929190612a63565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006121c08284612e60565b9392505050565b60006121c08284612e40565b60006121c08284612ea2565b60006121c08284612e28565b7f0000000000000000000000000000000000000000000000000000000000000000156122415761223c7f0000000000000000000000000000000000000000000000000000000000000000838361228e565b61130d565b61130d7f000000000000000000000000000000000000000000000000000000000000000083835b826122748184846122f6565b50505050565b836122878185858561234c565b5050505050565b6040516340c10f1960e01b815283906001600160a01b038216906340c10f19906122be90869086906004016129d8565b600060405180830381600087803b1580156122d857600080fd5b505af11580156122ec573d6000803e3d6000fd5b5050505050505050565b61207b8363a9059cbb60e01b84846040516024016123159291906129d8565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261236d565b612274846323b872dd60e01b8585856040516024016123159392919061295d565b600080836001600160a01b031683604051612388919061292d565b6000604051808303816000865af19150503d80600081146123c5576040519150601f19603f3d011682016040523d82523d6000602084013e6123ca565b606091505b5091509150816123ec5760405162461bcd60e51b81526004016103a790612c17565b8051156122745780806020019051810190612407919061275c565b6122745760405162461bcd60e51b81526004016103a790612b43565b828054828255906000526020600020908101928215612478579160200282015b8281111561247857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612443565b50612484929150612488565b5090565b5b808211156124845760008155600101612489565b600082601f8301126124ad578081fd5b813560206124c26124bd83612dde565b612db4565b82815281810190858301838502870184018810156124de578586fd5b855b858110156125055781356124f381612f6e565b845292840192908401906001016124e0565b5090979650505050505050565b600082601f830112612522578081fd5b813560206125326124bd83612dde565b828152818101908583018385028701840188101561254e578586fd5b855b8581101561250557813561256381612f83565b84529284019290840190600101612550565b600082601f830112612585578081fd5b813567ffffffffffffffff81111561259f5761259f612f58565b6125b2601f8201601f1916602001612db4565b8181528460208386010111156125c6578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156125f1578081fd5b81356121c081612f6e565b60006020828403121561260d578081fd5b81516121c081612f6e565b6000806040838503121561262a578081fd5b823561263581612f6e565b9150602083013561264581612f6e565b809150509250929050565b600080600060608486031215612664578081fd5b833561266f81612f6e565b9250602084013567ffffffffffffffff8082111561268b578283fd5b6126978783880161249d565b935060408601359150808211156126ac578283fd5b506126b986828701612512565b9150509250925092565b600080604083850312156126d5578182fd5b82356126e081612f6e565b946020939093013593505050565b6000602082840312156126ff578081fd5b813567ffffffffffffffff811115612715578182fd5b6127218482850161249d565b949350505050565b60006020828403121561273a578081fd5b813567ffffffffffffffff811115612750578182fd5b61272184828501612512565b60006020828403121561276d578081fd5b815180151581146121c0578182fd5b6000806040838503121561278e578182fd5b823567ffffffffffffffff8111156127a4578283fd5b6127b085828601612575565b925050602083013561264581612f6e565b6000806000806000608086880312156127d8578081fd5b853567ffffffffffffffff808211156127ef578283fd5b6127fb89838a01612575565b96506020880135915080821115612810578283fd5b61281c89838a01612512565b95506040880135915061282e82612f6e565b90935060608701359080821115612843578283fd5b818801915088601f830112612856578283fd5b813581811115612864578384fd5b896020828501011115612875578384fd5b9699959850939650602001949392505050565b600060208284031215612899578081fd5b81356121c081612f83565b6000602082840312156128b5578081fd5b81516121c081612f83565b6000602082840312156128d1578081fd5b5035919050565b6000602082840312156128e9578081fd5b5051919050565b6001600160a01b0316815260200190565b60008151808452612919816020860160208601612eb9565b601f01601f19169290920160200192915050565b6000825161293f818460208701612eb9565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03851681526060602082018190526000906129a590830186612901565b82810360408401528381528385602083013781602085830101526020601f19601f86011682010191505095945050505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b604080825283519082018190526000906020906060840190828701845b82811015612a545781516001600160a01b031684529284019290840190600101612a2f565b50505092019290925292915050565b6000604082016040835280855480835260608501915086845260209250828420845b82811015612ab1578154612aa39085906001600160a01b03166128f0565b935060019182019101612a85565b50505083810382850152845180825285830191830190845b8181101561250557835161ffff1683529284019291840191600101612ac9565b901515815260200190565b6000602082526121c06020830184612901565b600060808252612b1a6080830187612901565b6001600160a01b0395861660208401529385166040830152509216606090920191909152919050565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b6020808252600390820152624c444d60e81b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526004908201526315d0541360e21b604082015260600190565b6020808252600490820152634d484f3160e01b604082015260600190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b6020808252600390820152622aa82360e91b604082015260600190565b6020808252600690820152655253213d317760d01b604082015260600190565b60208082526002908201526115d360f21b604082015260600190565b60208082526003908201526257504360e81b604082015260600190565b602080825260049082015263504e495760e01b604082015260600190565b602080825260029082015261494160f01b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526005908201526450523e317760d81b604082015260600190565b602080825260029082015261057560f41b604082015260600190565b602080825260029082015261049560f41b604082015260600190565b60208082526003908201526250494160e81b604082015260600190565b61ffff91909116815260200190565b90815260200190565b60405181810167ffffffffffffffff81118282101715612dd657612dd6612f58565b604052919050565b600067ffffffffffffffff821115612df857612df8612f58565b5060209081020190565b600061ffff808316818516808303821115612e1f57612e1f612f42565b01949350505050565b60008219821115612e3b57612e3b612f42565b500190565b600082612e5b57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612e7a57612e7a612f42565b500290565b600061ffff83811690831681811015612e9a57612e9a612f42565b039392505050565b600082821015612eb457612eb4612f42565b500390565b60005b83811015612ed4578181015183820152602001612ebc565b838111156122745750506000910152565b600061ffff80831681811415612efd57612efd612f42565b6001019392505050565b6000600019821415612f1b57612f1b612f42565b5060010190565b600060ff821660ff811415612f3957612f39612f42565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f1757600080fd5b61ffff81168114610f1757600080fdfea2646970667358221220c37038deb0750564796c17d8d84ba65d2df75f4ae9d354b01380520e4209f5b464736f6c63430008000033a264697066735822122052a9a093d8c57f061c948e47b291ad6b117bcad98fbc0f7dbf0ac4c354ec7e5c64736f6c63430008000033",
  "immutableReferences": {
    "1423": [
      {
        "length": 32,
        "start": 179
      },
      {
        "length": 32,
        "start": 405
      },
      {
        "length": 32,
        "start": 717
      },
      {
        "length": 32,
        "start": 1063
      },
      {
        "length": 32,
        "start": 1230
      },
      {
        "length": 32,
        "start": 1369
      },
      {
        "length": 32,
        "start": 1686
      },
      {
        "length": 32,
        "start": 1836
      },
      {
        "length": 32,
        "start": 2006
      },
      {
        "length": 32,
        "start": 2172
      },
      {
        "length": 32,
        "start": 2445
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:672:48",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:48",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:48"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:48"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:48",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:48",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:48"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:48"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:48",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:48",
                "type": ""
              }
            ],
            "src": "14:310:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:167:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "520:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "531:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "513:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "554:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "565:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "550:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "550:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:2:48",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "543:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "543:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "609:19:48",
                        "type": "",
                        "value": "Invalid committee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "582:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:47:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:47:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "638:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "650:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "661:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "646:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "646:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "638:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "480:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "494:4:48",
                "type": ""
              }
            ],
            "src": "329:341:48"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid committee\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 48,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9109:48",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:48",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "88:303:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "137:30:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "146:8:48"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "156:8:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "139:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "139:26:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "139:26:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "116:6:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "124:4:48",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "112:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "112:17:48"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "131:3:48"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "108:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "108:27:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "101:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "101:35:48"
                  },
                  "nodeType": "YulIf",
                  "src": "98:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "176:30:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "199:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "186:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "186:20:48"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "176:6:48"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "249:30:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "258:8:48"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "268:8:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "251:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "251:26:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "251:26:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "221:6:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "229:18:48",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "218:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:30:48"
                  },
                  "nodeType": "YulIf",
                  "src": "215:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "288:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "304:6:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "312:4:48",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "300:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "300:17:48"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "288:8:48"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "369:16:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "378:1:48",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "381:1:48",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "371:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "371:12:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "371:12:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "340:6:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "348:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "336:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "336:19:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "357:4:48",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "332:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "332:30:48"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "364:3:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "329:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "329:39:48"
                  },
                  "nodeType": "YulIf",
                  "src": "326:2:48"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "51:6:48",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "59:3:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "67:8:48",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "77:6:48",
                "type": ""
              }
            ],
            "src": "14:377:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "466:189:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "512:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "521:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "529:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "514:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "514:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "514:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "487:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "496:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "483:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "483:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "479:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "479:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "476:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "547:36:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "573:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "560:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "560:23:48"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "551:5:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "619:5:48"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "592:26:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:33:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "592:33:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "634:15:48",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "644:5:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "634:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "432:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "443:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "455:6:48",
                "type": ""
              }
            ],
            "src": "396:259:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:182:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "762:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "771:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "758:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "758:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "783:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "754:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "751:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "822:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "841:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "835:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:16:48"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "826:5:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "887:5:48"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "860:26:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:33:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "860:33:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "902:15:48",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "912:5:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "902:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "707:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "718:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "730:6:48",
                "type": ""
              }
            ],
            "src": "660:263:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1006:179:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1052:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1061:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1069:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1054:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1054:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1054:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1027:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1036:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1048:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1019:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1016:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1087:29:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1106:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1100:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:16:48"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1091:5:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1149:5:48"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1125:23:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1125:30:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1164:15:48",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1174:5:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1164:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "972:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "983:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "995:6:48",
                "type": ""
              }
            ],
            "src": "928:257:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1380:1124:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1427:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1436:6:48"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1444:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1429:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1429:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1429:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1401:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1410:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1397:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1397:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1422:3:48",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1393:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1393:33:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1390:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1462:36:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1488:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1475:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1475:23:48"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1466:5:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1531:5:48"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1507:23:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1507:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1507:30:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1546:15:48",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1556:5:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1546:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1570:47:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1602:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1613:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1598:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1598:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1585:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:32:48"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1574:7:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1653:7:48"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1626:26:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1626:35:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1626:35:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1670:17:48",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1680:7:48"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1696:47:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1728:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1739:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1724:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1724:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1711:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:32:48"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "1700:7:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1779:7:48"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1752:26:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:35:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1752:35:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1796:17:48",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1806:7:48"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1796:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1822:46:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1853:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1864:2:48",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1849:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1849:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1836:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:32:48"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1826:6:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1877:28:48",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1887:18:48",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1881:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1932:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1941:6:48"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1949:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1934:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1934:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1934:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1920:6:48"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1928:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1917:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1917:14:48"
                  },
                  "nodeType": "YulIf",
                  "src": "1914:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1967:86:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2025:9:48"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2036:6:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2021:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:22:48"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2045:7:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1993:27:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1993:60:48"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "1971:8:48",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "1981:8:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2062:18:48",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2072:8:48"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2062:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2089:18:48",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "2099:8:48"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2089:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2116:48:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2148:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2159:3:48",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2144:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2144:19:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2131:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2131:33:48"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "2120:7:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "2200:7:48"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2173:26:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2173:35:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2173:35:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2217:17:48",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "2227:7:48"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2217:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2243:49:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2276:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2287:3:48",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2272:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2272:19:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2259:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2259:33:48"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2247:8:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2321:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value6",
                              "nodeType": "YulIdentifier",
                              "src": "2330:6:48"
                            },
                            {
                              "name": "value6",
                              "nodeType": "YulIdentifier",
                              "src": "2338:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2323:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2323:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2323:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2307:8:48"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2317:2:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2304:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2304:16:48"
                  },
                  "nodeType": "YulIf",
                  "src": "2301:2:48"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2356:88:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2414:9:48"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2425:8:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2410:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2410:24:48"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2436:7:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2382:27:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2382:62:48"
                  },
                  "variables": [
                    {
                      "name": "value6_1",
                      "nodeType": "YulTypedName",
                      "src": "2360:8:48",
                      "type": ""
                    },
                    {
                      "name": "value7_1",
                      "nodeType": "YulTypedName",
                      "src": "2370:8:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2453:18:48",
                  "value": {
                    "name": "value6_1",
                    "nodeType": "YulIdentifier",
                    "src": "2463:8:48"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "2453:6:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2480:18:48",
                  "value": {
                    "name": "value7_1",
                    "nodeType": "YulIdentifier",
                    "src": "2490:8:48"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "2480:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_boolt_addresst_addresst_bytes_calldata_ptrt_addresst_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1290:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1301:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1313:6:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1321:6:48",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1329:6:48",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1337:6:48",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1345:6:48",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1353:6:48",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "1361:6:48",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "1369:6:48",
                "type": ""
              }
            ],
            "src": "1190:1314:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2590:113:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2636:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2645:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2653:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2638:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2638:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2638:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2611:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2620:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2607:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2607:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2632:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2603:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2603:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "2600:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2671:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2687:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2681:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:16:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2671:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2556:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2567:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2579:6:48",
                "type": ""
              }
            ],
            "src": "2509:194:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2789:113:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2835:26:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2844:6:48"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2852:6:48"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2837:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2837:22:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2837:22:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2810:7:48"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2819:9:48"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2806:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2806:23:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2831:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2802:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2802:32:48"
                  },
                  "nodeType": "YulIf",
                  "src": "2799:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2870:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2886:9:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2880:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2880:16:48"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2870:6:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2755:9:48",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2766:7:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2778:6:48",
                "type": ""
              }
            ],
            "src": "2708:194:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2975:202:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2992:3:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2997:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2985:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2985:19:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2985:19:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3030:3:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3035:4:48",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3026:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3026:14:48"
                      },
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "3042:5:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3049:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3013:12:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3013:43:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3013:43:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3080:3:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3085:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3076:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3076:16:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3094:4:48",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3072:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3072:27:48"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3101:3:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3065:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3065:40:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3065:40:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3114:57:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3129:3:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3142:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3150:2:48",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3138:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3138:15:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3159:2:48",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3155:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3155:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3134:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3134:29:48"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3125:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3125:39:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3166:4:48",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3121:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3121:50:48"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3114:3:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "2944:5:48",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2951:6:48",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2959:3:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2967:3:48",
                "type": ""
              }
            ],
            "src": "2907:270:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3239:102:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3256:3:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3261:1:48",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3249:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:14:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3249:14:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3283:3:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3288:4:48",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3279:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3279:14:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3295:11:48",
                        "type": "",
                        "value": "COMMUNITY"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3272:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3272:35:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3272:35:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3316:19:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3327:3:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3332:2:48",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3323:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3323:12:48"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3316:3:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e94d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3223:3:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3231:3:48",
                "type": ""
              }
            ],
            "src": "3182:159:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3483:293:48",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3493:27:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3513:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3507:5:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3507:13:48"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3497:6:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3529:12:48",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "3538:3:48"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3533:1:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3602:77:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3627:3:48"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3632:1:48"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3623:3:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3623:11:48"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3650:6:48"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3658:1:48"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3646:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3646:14:48"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3662:4:48",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3642:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3642:25:48"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3636:5:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3636:32:48"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3616:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3616:53:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3616:53:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3561:1:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3564:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3558:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3558:13:48"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3572:21:48",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3574:17:48",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3583:1:48"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3586:4:48",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3579:3:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3579:12:48"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3574:1:48"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3554:3:48",
                    "statements": []
                  },
                  "src": "3550:129:48"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3705:33:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3718:3:48"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3723:6:48"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3714:3:48"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3714:16:48"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "3732:3:48"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3707:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3707:29:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3707:29:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3694:1:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3697:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3691:2:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3691:13:48"
                  },
                  "nodeType": "YulIf",
                  "src": "3688:2:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3747:23:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3758:3:48"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3763:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3754:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3754:16:48"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3747:3:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3459:3:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3464:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3475:3:48",
                "type": ""
              }
            ],
            "src": "3346:430:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3882:102:48",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3892:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3904:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3915:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3900:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3900:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3892:4:48"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3934:9:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3949:6:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3965:3:48",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3970:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3961:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3961:11:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3974:1:48",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3957:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3957:19:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3945:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3945:32:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3927:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3927:51:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3927:51:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3851:9:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3862:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3873:4:48",
                "type": ""
              }
            ],
            "src": "3781:203:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4118:175:48",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4128:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4140:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4151:2:48",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4136:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4128:4:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4163:29:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4181:3:48",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4186:1:48",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4177:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4177:11:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4190:1:48",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4173:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4173:19:48"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4167:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4208:9:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4223:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4231:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4219:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4219:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4201:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4201:34:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4201:34:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4255:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4266:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4251:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4251:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4275:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4283:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4271:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4271:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4244:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4244:43:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4244:43:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4079:9:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4090:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4098:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4109:4:48",
                "type": ""
              }
            ],
            "src": "3989:304:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4505:340:48",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4515:27:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4527:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4538:3:48",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4523:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4523:19:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4515:4:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4551:29:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4569:3:48",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4574:1:48",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4565:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4565:11:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4578:1:48",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4561:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4561:19:48"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4555:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4596:9:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4611:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4619:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4607:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4607:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4589:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4589:34:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4589:34:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4643:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4654:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4639:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4639:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4663:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4671:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4659:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4659:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4632:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4632:43:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4632:43:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4695:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4706:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4691:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4691:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4715:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4723:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4711:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4711:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4684:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4684:43:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4684:43:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4747:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4758:2:48",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4743:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4743:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4767:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4775:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4763:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4763:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4736:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4736:43:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4736:43:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4799:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4810:3:48",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4795:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4795:19:48"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "4830:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4823:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4823:14:48"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4816:6:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4816:22:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4788:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4788:51:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4788:51:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4442:9:48",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4453:6:48",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4461:6:48",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4469:6:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4477:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4485:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4496:4:48",
                "type": ""
              }
            ],
            "src": "4298:547:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5007:218:48",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5017:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5029:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5040:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5025:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5025:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5017:4:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5052:29:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5070:3:48",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5075:1:48",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5066:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5066:11:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5079:1:48",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5062:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5062:19:48"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5056:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5097:9:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5112:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5120:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5108:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5108:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5090:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5090:34:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5090:34:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5144:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5155:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5140:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5140:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5164:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5172:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5160:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5160:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5133:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5133:43:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5133:43:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5196:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5207:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5192:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5192:18:48"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5212:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5185:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5185:34:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5185:34:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4960:9:48",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4971:6:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4979:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4987:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4998:4:48",
                "type": ""
              }
            ],
            "src": "4850:375:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5387:186:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5404:9:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5419:6:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5435:3:48",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5440:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5431:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5431:11:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5444:1:48",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5427:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5427:19:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5415:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5415:32:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5397:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:51:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5397:51:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5468:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5479:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5464:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5464:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5484:2:48",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5457:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5457:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5457:30:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5496:71:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5532:6:48"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5540:6:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5552:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5563:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5548:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5548:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5504:27:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5504:63:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5496:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5340:9:48",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5351:6:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5359:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5367:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5378:4:48",
                "type": ""
              }
            ],
            "src": "5230:343:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5673:92:48",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5683:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5695:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5706:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5691:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5691:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5683:4:48"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5725:9:48"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5750:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5743:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5743:14:48"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5736:6:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5736:22:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5718:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5718:41:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5718:41:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5642:9:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5653:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5664:4:48",
                "type": ""
              }
            ],
            "src": "5578:187:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5899:145:48",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5909:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5921:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5932:2:48",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5917:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5917:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5909:4:48"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5951:9:48"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5962:6:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5944:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5944:25:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5944:25:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5989:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6000:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5985:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5985:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6009:6:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6025:3:48",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6030:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6021:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6021:11:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6034:1:48",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6017:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6017:19:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6005:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6005:32:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5978:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5978:60:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5978:60:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5860:9:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5871:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5879:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5890:4:48",
                "type": ""
              }
            ],
            "src": "5770:274:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6178:117:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6195:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6206:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6188:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6188:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6188:21:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6218:71:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6254:6:48"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6262:6:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6274:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6285:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6270:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6270:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "6226:27:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6226:63:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6218:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6139:9:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6150:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6158:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6169:4:48",
                "type": ""
              }
            ],
            "src": "6049:246:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6474:151:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6491:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6502:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6484:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6484:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6484:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6525:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6536:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6521:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6521:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6541:1:48",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6514:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6514:29:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6514:29:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6563:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6574:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6559:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6559:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6579:4:48",
                        "type": "",
                        "value": "UC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6552:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6552:32:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6552:32:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6593:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6605:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6616:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6601:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6601:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6593:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6451:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6465:4:48",
                "type": ""
              }
            ],
            "src": "6300:325:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6804:182:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6821:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6832:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6814:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6814:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6814:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6855:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6866:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6851:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6851:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6871:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6844:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6844:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6844:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6894:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6905:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6890:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6890:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6910:34:48",
                        "type": "",
                        "value": "ERC20: operation did not succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6883:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6883:62:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6883:62:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6954:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6966:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6977:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6962:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6962:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6954:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e070c5d84d2ce64f06a55372ede71bea348c7746469ec289c4aba299bc05fdc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6781:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6795:4:48",
                "type": ""
              }
            ],
            "src": "6630:356:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7165:152:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7182:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7193:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7175:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7175:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7175:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7216:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7227:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7212:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7212:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7232:1:48",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7205:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7205:29:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7205:29:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7254:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7265:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7250:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7250:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7270:5:48",
                        "type": "",
                        "value": "UTC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7243:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7243:33:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7243:33:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7285:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7297:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7308:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7293:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7293:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7285:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7142:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7156:4:48",
                "type": ""
              }
            ],
            "src": "6991:326:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7496:168:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7513:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7524:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7506:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7506:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7506:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7547:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7558:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7543:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7543:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7563:2:48",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7536:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7536:30:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7536:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7586:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7597:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7582:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7582:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7602:20:48",
                        "type": "",
                        "value": "ERC20: call failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7575:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7575:48:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7575:48:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7632:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7644:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7655:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7640:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7640:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7632:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3576d6dfb5a800b5f7598d3cc3220135845acd27db3901a5c3c655559195efba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7473:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7487:4:48",
                "type": ""
              }
            ],
            "src": "7322:342:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7843:153:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7860:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7871:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7853:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7853:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7853:21:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7894:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7905:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7890:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7890:18:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7910:1:48",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7883:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7883:29:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7883:29:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7932:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7943:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7928:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7928:18:48"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7948:6:48",
                        "type": "",
                        "value": "need"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7921:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7921:34:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7921:34:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7964:26:48",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7976:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7987:2:48",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7972:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7972:18:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7964:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7820:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7834:4:48",
                "type": ""
              }
            ],
            "src": "7669:327:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8175:105:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8192:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8203:2:48",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8185:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8185:21:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8185:21:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8215:59:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8259:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8270:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8255:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8255:18:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e94d",
                      "nodeType": "YulIdentifier",
                      "src": "8223:31:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8223:51:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8215:4:48"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8152:9:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8166:4:48",
                "type": ""
              }
            ],
            "src": "8001:279:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8543:301:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8560:9:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8571:3:48",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8553:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8553:22:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8553:22:48"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8584:60:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8628:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8639:3:48",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8624:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8624:19:48"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e94d",
                      "nodeType": "YulIdentifier",
                      "src": "8592:31:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8592:52:48"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8584:4:48"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8653:29:48",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8671:3:48",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8676:1:48",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8667:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8667:11:48"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8680:1:48",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8663:3:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8663:19:48"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8657:2:48",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8702:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8713:2:48",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8698:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8698:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8722:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8730:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8718:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8718:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8691:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8691:43:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8691:43:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8754:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8765:2:48",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8750:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8750:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8774:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8782:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8770:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8770:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8743:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8743:43:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8743:43:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8806:9:48"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8817:2:48",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8802:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8802:18:48"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8826:6:48"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8834:2:48"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8822:3:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8822:15:48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8795:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8795:43:48"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8795:43:48"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074_t_address_t_address_t_address__to_t_string_memory_ptr_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8496:9:48",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8507:6:48",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8515:6:48",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8523:6:48",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8534:4:48",
                "type": ""
              }
            ],
            "src": "8285:559:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8896:86:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8960:16:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8969:1:48",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8972:1:48",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8962:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8962:12:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8962:12:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8919:5:48"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8930:5:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8945:3:48",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8950:1:48",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8941:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8941:11:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8954:1:48",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8937:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8937:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8926:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8926:31:48"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8916:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8916:42:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8909:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8909:50:48"
                  },
                  "nodeType": "YulIf",
                  "src": "8906:2:48"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8885:5:48",
                "type": ""
              }
            ],
            "src": "8849:133:48"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9031:76:48",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9085:16:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9094:1:48",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9097:1:48",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9087:6:48"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9087:12:48"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9087:12:48"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9054:5:48"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9075:5:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9068:6:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9068:13:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9061:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9061:21:48"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9051:2:48"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9051:32:48"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9044:6:48"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9044:40:48"
                  },
                  "nodeType": "YulIf",
                  "src": "9041:2:48"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9020:5:48",
                "type": ""
              }
            ],
            "src": "8987:120:48"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_boolt_addresst_addresst_bytes_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_2)\n        value2 := value_2\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_t_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let value_3 := calldataload(add(headStart, 128))\n        validator_revert_t_address(value_3)\n        value5 := value_3\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(value6, value6) }\n        let value6_1, value7_1 := abi_decode_t_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), end)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_t_stringliteral_e94d(pos) -> end\n    {\n        mstore(pos, 9)\n        mstore(add(pos, 0x20), \"COMMUNITY\")\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), end) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_address_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_t_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes_calldata(value0, value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"UC\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0e070c5d84d2ce64f06a55372ede71bea348c7746469ec289c4aba299bc05fdc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC20: operation did not succeed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"UTC\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3576d6dfb5a800b5f7598d3cc3220135845acd27db3901a5c3c655559195efba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"ERC20: call failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"need\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_stringliteral_e94d(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074_t_address_t_address_t_address__to_t_string_memory_ptr_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        tail := abi_encode_t_stringliteral_e94d(add(headStart, 128))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value0, _1))\n        mstore(add(headStart, 64), and(value1, _1))\n        mstore(add(headStart, 96), and(value2, _1))\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 48,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "474:2817:1:-:0;;;716:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;766:24:1;;758:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;822:22;;-1:-1:-1;;;;;;822:22:1;;;474:2817;;14:310:48;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:48;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:48:o;329:341::-;531:2;513:21;;;570:2;550:18;;;543:30;609:19;604:2;589:18;;582:47;661:2;646:18;;503:167::o;:::-;474:2817:1;;;;;;;;;;;;",
  "deployedSourceMap": "474:2817:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:49;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1009:2280;;;;;;:::i;:::-;;:::i;:::-;;555:49;;;;;;;;;;;;;;;;:::o;1009:2280::-;1275:54;;-1:-1:-1;;;1275:54:1;;-1:-1:-1;;;;;1286:9:1;1275:36;;;;:54;;1312:16;;1275:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1267:69;;;;-1:-1:-1;;;1267:69:1;;;;;;;:::i;:::-;;;;;;;;;1435:18;-1:-1:-1;;;;;1475:28:1;;1471:335;;-1:-1:-1;1591:59:1;;-1:-1:-1;;;1591:59:1;;1534:4;;-1:-1:-1;1534:4:1;;-1:-1:-1;;;;;1602:9:1;1591:36;;;;:59;;1628:21;;1591:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1583:75;;;;-1:-1:-1;;;1583:75:1;;;;;;;:::i;:::-;1718:77;;-1:-1:-1;;;1718:77:1;;-1:-1:-1;;;;;1718:66:1;;;;;:77;;1785:9;;;;1718:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:94;;1471:335;1816:19;1852:10;1864:9;1875:14;1891:16;1909:10;1838:82;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1816:104;;1942:13;1938:457;;;2094:14;-1:-1:-1;;;;;2080:39:1;;2134:14;-1:-1:-1;;;;;2120:41:1;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2173:9;2080:104;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:457;2408:41;;-1:-1:-1;;;2408:41:1;;2452:1;;-1:-1:-1;;;;;2419:9:1;2408:28;;;;:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;2405:462;;;2554:41;;-1:-1:-1;;;2554:41:1;;-1:-1:-1;;;;;2565:9:1;2554:28;;;;:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2493:9;-1:-1:-1;;;;;2482:28:1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2476:47:1;;2524:10;2544:4;2476:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:119;;2468:136;;;;-1:-1:-1;;;2468:136:1;;;;;;;:::i;:::-;2618:133;2639:9;-1:-1:-1;;;;;2628:28:1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2660:10;2683:9;-1:-1:-1;;;;;2672:33:1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2709:41;;-1:-1:-1;;;2709:41:1;;-1:-1:-1;;;;;2720:9:1;2709:28;;;;:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2618:9;:133::i;:::-;2765:91;;-1:-1:-1;;;2765:91:1;;-1:-1:-1;;;;;2776:9:1;2765:34;;;;:91;;2821:9;;2841:1;;2845:10;;2765:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2405:462;2946:88;;-1:-1:-1;;;2946:88:1;;-1:-1:-1;;;;;2946:48:1;;;;;:88;;3003:9;;3015:18;;;;2946:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3095:53:1;;-1:-1:-1;;;3095:53:1;;-1:-1:-1;;;;;3106:9:1;3095:33;;;;:53;;3137:9;;3095:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;3159:36:1;;:16;:36;;;;;;;;;;;;:43;;-1:-1:-1;;3159:43:1;3198:4;3159:43;;;3218:64;3159:36;;-1:-1:-1;3235:10:1;;3218:64;;;;3267:14;;3218:64;:::i;:::-;;;;;;;;1009:2280;;;;;;;;;;:::o;725:250:2:-;895:12;918:50;895:12;943:5;950:9;961:6;918:17;:50::i;:::-;725:250;;;;;:::o;3029:265::-;3167:120;3190:5;3232:27;;;3261:4;3267:2;3271:5;3209:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3209:68:2;;;;;;;;;;;;;;-1:-1:-1;;;;;3209:68:2;-1:-1:-1;;;;;;3209:68:2;;;;;;;;;;3167:9;:120::i;:::-;3029:265;;;;:::o;3455:375::-;3526:12;3540:23;3575:5;-1:-1:-1;;;;;3567:19:2;3587:4;3567:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3525:67;;;;3610:7;3602:38;;;;-1:-1:-1;;;3602:38:2;;;;;;;:::i;:::-;3655:17;;:21;3651:173;;3728:10;3717:30;;;;;;;;;;;;:::i;:::-;3692:121;;;;-1:-1:-1;;;3692:121:2;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:377:48:-;;;131:3;124:4;116:6;112:17;108:27;98:2;;156:8;146;139:26;98:2;-1:-1:-1;186:20:48;;229:18;218:30;;215:2;;;268:8;258;251:26;215:2;312:4;304:6;300:17;288:29;;364:3;357:4;348:6;340;336:19;332:30;329:39;326:2;;;381:1;378;371:12;326:2;88:303;;;;;:::o;396:259::-;;508:2;496:9;487:7;483:23;479:32;476:2;;;529:6;521;514:22;476:2;573:9;560:23;592:33;619:5;592:33;:::i;:::-;644:5;466:189;-1:-1:-1;;;466:189:48:o;660:263::-;;783:2;771:9;762:7;758:23;754:32;751:2;;;804:6;796;789:22;751:2;841:9;835:16;860:33;887:5;860:33;:::i;928:257::-;;1048:2;1036:9;1027:7;1023:23;1019:32;1016:2;;;1069:6;1061;1054:22;1016:2;1106:9;1100:16;1125:30;1149:5;1125:30;:::i;1190:1314::-;;;;;;;;;1422:3;1410:9;1401:7;1397:23;1393:33;1390:2;;;1444:6;1436;1429:22;1390:2;1488:9;1475:23;1507:30;1531:5;1507:30;:::i;:::-;1556:5;-1:-1:-1;1613:2:48;1598:18;;1585:32;1626:35;1585:32;1626:35;:::i;:::-;1680:7;-1:-1:-1;1739:2:48;1724:18;;1711:32;1752:35;1711:32;1752:35;:::i;:::-;1806:7;-1:-1:-1;1864:2:48;1849:18;;1836:32;1887:18;1917:14;;;1914:2;;;1949:6;1941;1934:22;1914:2;1993:60;2045:7;2036:6;2025:9;2021:22;1993:60;:::i;:::-;2072:8;;-1:-1:-1;1967:86:48;-1:-1:-1;2159:3:48;2144:19;;2131:33;;-1:-1:-1;2173:35:48;2131:33;2173:35;:::i;:::-;2227:7;;-1:-1:-1;2287:3:48;2272:19;;2259:33;;2304:16;;;2301:2;;;2338:6;2330;2323:22;2301:2;;2382:62;2436:7;2425:8;2414:9;2410:24;2382:62;:::i;:::-;1380:1124;;;;-1:-1:-1;1380:1124:48;;-1:-1:-1;1380:1124:48;;;;;;2463:8;-1:-1:-1;;;1380:1124:48:o;2509:194::-;;2632:2;2620:9;2611:7;2607:23;2603:32;2600:2;;;2653:6;2645;2638:22;2600:2;-1:-1:-1;2681:16:48;;2590:113;-1:-1:-1;2590:113:48:o;2907:270::-;;2997:6;2992:3;2985:19;3049:6;3042:5;3035:4;3030:3;3026:14;3013:43;3101:3;3094:4;3085:6;3080:3;3076:16;3072:27;3065:40;3166:4;3159:2;3155:7;3150:2;3142:6;3138:15;3134:29;3129:3;3125:39;3121:50;3114:57;;2975:202;;;;;:::o;3182:159::-;3261:1;3249:14;;-1:-1:-1;;;3288:4:48;3279:14;;3272:35;3332:2;3323:12;;3239:102::o;3346:430::-;;3513:6;3507:13;3538:3;3550:129;3564:6;3561:1;3558:13;3550:129;;;3662:4;3646:14;;;3642:25;;3636:32;3623:11;;;3616:53;3579:12;3550:129;;;3697:6;3694:1;3691:13;3688:2;;;3732:3;3723:6;3718:3;3714:16;3707:29;3688:2;-1:-1:-1;3754:16:48;;;;;3483:293;-1:-1:-1;;3483:293:48:o;3781:203::-;-1:-1:-1;;;;;3945:32:48;;;;3927:51;;3915:2;3900:18;;3882:102::o;3989:304::-;-1:-1:-1;;;;;4219:15:48;;;4201:34;;4271:15;;4266:2;4251:18;;4244:43;4151:2;4136:18;;4118:175::o;4298:547::-;-1:-1:-1;;;;;4607:15:48;;;4589:34;;4659:15;;;4654:2;4639:18;;4632:43;4711:15;;;4706:2;4691:18;;4684:43;4763:15;;;4758:2;4743:18;;4736:43;4823:14;;4816:22;4810:3;4795:19;;4788:51;4538:3;4523:19;;4505:340::o;4850:375::-;-1:-1:-1;;;;;5108:15:48;;;5090:34;;5160:15;;;;5155:2;5140:18;;5133:43;5207:2;5192:18;;5185:34;;;;5040:2;5025:18;;5007:218::o;5230:343::-;-1:-1:-1;;;;;5415:32:48;;5397:51;;5484:2;5479;5464:18;;5457:30;;;5230:343;;5504:63;;5548:18;;5540:6;5532;5504:63;:::i;:::-;5496:71;5387:186;-1:-1:-1;;;;;5387:186:48:o;5578:187::-;5743:14;;5736:22;5718:41;;5706:2;5691:18;;5673:92::o;5770:274::-;5944:25;;;-1:-1:-1;;;;;6005:32:48;6000:2;5985:18;;5978:60;5932:2;5917:18;;5899:145::o;6049:246::-;;6206:2;6195:9;6188:21;6226:63;6285:2;6274:9;6270:18;6262:6;6254;6226:63;:::i;:::-;6218:71;6178:117;-1:-1:-1;;;;6178:117:48:o;6300:325::-;6502:2;6484:21;;;6541:1;6521:18;;;6514:29;-1:-1:-1;;;6574:2:48;6559:18;;6552:32;6616:2;6601:18;;6474:151::o;6630:356::-;6832:2;6814:21;;;6851:18;;;6844:30;6910:34;6905:2;6890:18;;6883:62;6977:2;6962:18;;6804:182::o;6991:326::-;7193:2;7175:21;;;7232:1;7212:18;;;7205:29;-1:-1:-1;;;7265:2:48;7250:18;;7243:33;7308:2;7293:18;;7165:152::o;7322:342::-;7524:2;7506:21;;;7563:2;7543:18;;;7536:30;-1:-1:-1;;;7597:2:48;7582:18;;7575:48;7655:2;7640:18;;7496:168::o;7669:327::-;7871:2;7853:21;;;7910:1;7890:18;;;7883:29;-1:-1:-1;;;7943:2:48;7928:18;;7921:34;7987:2;7972:18;;7843:153::o;8001:279::-;;8203:2;8192:9;8185:21;8223:51;8270:2;8259:9;8255:18;8223:51;:::i;:::-;8215:59;8175:105;-1:-1:-1;;8175:105:48:o;8285:559::-;;8571:3;8560:9;8553:22;8592:52;8639:3;8628:9;8624:19;8592:52;:::i;:::-;-1:-1:-1;;;;;8718:15:48;;;8713:2;8698:18;;8691:43;8770:15;;;8765:2;8750:18;;8743:43;-1:-1:-1;8822:15:48;;8817:2;8802:18;;;8795:43;;;;8584:60;8543:301::o;8849:133::-;-1:-1:-1;;;;;8926:31:48;;8916:42;;8906:2;;8972:1;8969;8962:12;8906:2;8896:86;:::o;8987:120::-;9075:5;9068:13;9061:21;9054:5;9051:32;9041:2;;9097:1;9094;9087:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport './Community.sol';\nimport './interfaces/ICalculator.sol';\nimport './interfaces/ICommittee.sol';\nimport \"./interfaces/ICommunityTokenFactory.sol\";\nimport \"./ERC20Helper.sol\";\nimport \"./community-token/MintableERC20.sol\";\n\n/**\n * @dev Factory contract to create an StakingTemplate entity\n *\n * This is the entry contract that user start to create their own staking economy.\n */\ncontract CommunityFactory is ERC20Helper {\n\n    address immutable committee;\n    mapping (address => bool) public createdCommunity;\n\n    event CommunityCreated(address indexed creator, address indexed community, address communityToken);\n\n    constructor(address _committee) {\n        require(_committee != address(0), \"Invalid committee\");\n        committee = _committee;\n    }\n\n    // If communityToken == address(0), we would create a mintable token for cummunity by token factory,\n    // thus caller should give arguments bytes\n    function createCommunity (\n        bool isMintable,\n        address communityToken,\n        address communityTokenFactory,\n        bytes calldata tokenMeta,\n        address rewardCalculator,\n        bytes calldata distributionPolicy\n    ) external {\n        require(ICommittee(committee).verifyContract(rewardCalculator), 'UC'); // Unsupported calculator\n\n        // we would create a new mintable token for community\n        bool needGrantRole = false;\n        if (communityToken == address(0)){\n            needGrantRole = true;\n            isMintable = true;\n            require(ICommittee(committee).verifyContract(communityTokenFactory), 'UTC'); // Unsupported token factory\n            communityToken = ICommunityTokenFactory(communityTokenFactory).createCommunityToken(tokenMeta);\n        }\n\n        Community community = new Community(msg.sender, committee, communityToken, rewardCalculator, isMintable);\n       \n        if (needGrantRole){\n            // Token deployed by walnut need to grant mint role from community factory to sepecify community.\n            MintableERC20(communityToken).grantRole(MintableERC20(communityToken).MINTER_ROLE(), address(community));\n            // Token provided by user need user to grant mint role to community\n            // if user set isMintable to true,\n            // this action will be executed after this method completed.\n        }\n\n        if(ICommittee(committee).getFee('COMMUNITY') > 0){\n            require(ERC20(ICommittee(committee).getNut()).allowance(msg.sender, address(this)) >= ICommittee(committee).getFee('COMMUNITY'), \"need\");\n            lockERC20(ICommittee(committee).getNut(), msg.sender, ICommittee(committee).getTreasury(), ICommittee(committee).getFee('COMMUNITY'));\n            ICommittee(committee).updateLedger('COMMUNITY', address(community), address(0), msg.sender);\n        }\n\n        // set staking feast rewarad distribution distributionPolicy\n        ICalculator(rewardCalculator).setDistributionEra(address(community), distributionPolicy);\n\n        // add community to fee payment whitelist\n        ICommittee(committee).setFeePayer(address(community));\n\n        createdCommunity[address(community)] = true;\n\n        emit CommunityCreated(msg.sender, address(community), communityToken);\n    }\n}\n",
  "sourcePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol",
  "ast": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        9809
      ],
      "AccessControlEnumerable": [
        9934
      ],
      "ArbSys": [
        9257
      ],
      "Community": [
        1409
      ],
      "CommunityFactory": [
        1667
      ],
      "Context": [
        11338
      ],
      "ERC165": [
        11565
      ],
      "ERC20": [
        10978
      ],
      "ERC20Burnable": [
        11118
      ],
      "ERC20Helper": [
        1874
      ],
      "ERC20Pausable": [
        11155
      ],
      "ERC20PresetMinterPauser": [
        11316
      ],
      "EnumerableSet": [
        12488
      ],
      "IAccessControl": [
        10007
      ],
      "IAccessControlEnumerable": [
        10032
      ],
      "ICalculator": [
        9296
      ],
      "ICommittee": [
        9367
      ],
      "ICommunity": [
        9421
      ],
      "ICommunityTokenFactory": [
        9433
      ],
      "IERC165": [
        11577
      ],
      "IERC20": [
        11056
      ],
      "IERC20Metadata": [
        11180
      ],
      "IGauge": [
        9457
      ],
      "IPool": [
        9484
      ],
      "IPoolFactory": [
        9500
      ],
      "MintableERC20": [
        6737
      ],
      "Ownable": [
        10137
      ],
      "Pausable": [
        10229
      ],
      "SafeMath": [
        11889
      ],
      "Strings": [
        11541
      ]
    },
    "id": 1668,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1411,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "id": 1412,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:1"
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/Community.sol",
        "file": "./Community.sol",
        "id": 1413,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 1410,
        "src": "91:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICalculator.sol",
        "file": "./interfaces/ICalculator.sol",
        "id": 1414,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 9297,
        "src": "117:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommittee.sol",
        "file": "./interfaces/ICommittee.sol",
        "id": 1415,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 9368,
        "src": "156:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunityTokenFactory.sol",
        "file": "./interfaces/ICommunityTokenFactory.sol",
        "id": 1416,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 9434,
        "src": "194:49:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/ERC20Helper.sol",
        "file": "./ERC20Helper.sol",
        "id": 1417,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 1875,
        "src": "244:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/community-token/MintableERC20.sol",
        "file": "./community-token/MintableERC20.sol",
        "id": 1418,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 6738,
        "src": "272:45:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1420,
              "name": "ERC20Helper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1874,
              "src": "503:11:1"
            },
            "id": 1421,
            "nodeType": "InheritanceSpecifier",
            "src": "503:11:1"
          }
        ],
        "contractDependencies": [
          1409,
          1874
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1419,
          "nodeType": "StructuredDocumentation",
          "src": "319:154:1",
          "text": " @dev Factory contract to create an StakingTemplate entity\n This is the entry contract that user start to create their own staking economy."
        },
        "fullyImplemented": true,
        "id": 1667,
        "linearizedBaseContracts": [
          1667,
          1874
        ],
        "name": "CommunityFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1423,
            "mutability": "immutable",
            "name": "committee",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "522:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1422,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "68a94b6e",
            "id": 1427,
            "mutability": "mutable",
            "name": "createdCommunity",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "555:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1426,
              "keyType": {
                "id": 1424,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "564:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "555:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1425,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "575:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1435,
            "name": "CommunityCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1429,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "634:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1431,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "659:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1433,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "communityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "686:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "633:76:1"
            },
            "src": "611:99:1"
          },
          {
            "body": {
              "id": 1454,
              "nodeType": "Block",
              "src": "748:103:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1441,
                          "name": "_committee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "766:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "788:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "780:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1442,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "780:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "780:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "766:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6d6d6974746565",
                        "id": 1447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "792:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5",
                          "typeString": "literal_string \"Invalid committee\""
                        },
                        "value": "Invalid committee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5",
                          "typeString": "literal_string \"Invalid committee\""
                        }
                      ],
                      "id": 1440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "758:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "758:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "758:54:1"
                },
                {
                  "expression": {
                    "id": 1452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1450,
                      "name": "committee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1423,
                      "src": "822:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1451,
                      "name": "_committee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1437,
                      "src": "834:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "822:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1453,
                  "nodeType": "ExpressionStatement",
                  "src": "822:22:1"
                }
              ]
            },
            "id": 1455,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "_committee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1455,
                  "src": "728:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:20:1"
            },
            "returnParameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:1"
            },
            "scope": 1667,
            "src": "716:135:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1665,
              "nodeType": "Block",
              "src": "1257:2032:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1475,
                            "name": "rewardCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1465,
                            "src": "1312:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1472,
                                "name": "committee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1423,
                                "src": "1286:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1471,
                              "name": "ICommittee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9367,
                              "src": "1275:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                "typeString": "type(contract ICommittee)"
                              }
                            },
                            "id": 1473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1275:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICommittee_$9367",
                              "typeString": "contract ICommittee"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9352,
                          "src": "1275:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1275:54:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5543",
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1331:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527",
                          "typeString": "literal_string \"UC\""
                        },
                        "value": "UC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527",
                          "typeString": "literal_string \"UC\""
                        }
                      ],
                      "id": 1470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1267:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1479,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:69:1"
                },
                {
                  "assignments": [
                    1481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1481,
                      "mutability": "mutable",
                      "name": "needGrantRole",
                      "nodeType": "VariableDeclaration",
                      "scope": 1665,
                      "src": "1435:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1480,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1435:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1483,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1456:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1435:26:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1484,
                      "name": "communityToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1459,
                      "src": "1475:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1501:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1493:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1485,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1493:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1493:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1475:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1518,
                  "nodeType": "IfStatement",
                  "src": "1471:335:1",
                  "trueBody": {
                    "id": 1517,
                    "nodeType": "Block",
                    "src": "1504:302:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1490,
                            "name": "needGrantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1481,
                            "src": "1518:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1534:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1518:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1493,
                        "nodeType": "ExpressionStatement",
                        "src": "1518:20:1"
                      },
                      {
                        "expression": {
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1494,
                            "name": "isMintable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1457,
                            "src": "1552:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1565:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1552:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1497,
                        "nodeType": "ExpressionStatement",
                        "src": "1552:17:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1503,
                                  "name": "communityTokenFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1461,
                                  "src": "1628:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1500,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1423,
                                      "src": "1602:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1499,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9367,
                                    "src": "1591:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 1501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1591:21:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$9367",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 1502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verifyContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9352,
                                "src": "1591:36:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 1504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1591:59:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "555443",
                              "id": 1505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1652:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f",
                                "typeString": "literal_string \"UTC\""
                              },
                              "value": "UTC"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f",
                                "typeString": "literal_string \"UTC\""
                              }
                            ],
                            "id": 1498,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1583:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1583:75:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1507,
                        "nodeType": "ExpressionStatement",
                        "src": "1583:75:1"
                      },
                      {
                        "expression": {
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1508,
                            "name": "communityToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1459,
                            "src": "1701:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1513,
                                "name": "tokenMeta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1463,
                                "src": "1785:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1510,
                                    "name": "communityTokenFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1461,
                                    "src": "1741:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1509,
                                  "name": "ICommunityTokenFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9433,
                                  "src": "1718:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICommunityTokenFactory_$9433_$",
                                    "typeString": "type(contract ICommunityTokenFactory)"
                                  }
                                },
                                "id": 1511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1718:45:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICommunityTokenFactory_$9433",
                                  "typeString": "contract ICommunityTokenFactory"
                                }
                              },
                              "id": 1512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "createCommunityToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9432,
                              "src": "1718:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes memory) external returns (address)"
                              }
                            },
                            "id": 1514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1718:77:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1701:94:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1516,
                        "nodeType": "ExpressionStatement",
                        "src": "1701:94:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1521,
                      "mutability": "mutable",
                      "name": "community",
                      "nodeType": "VariableDeclaration",
                      "scope": 1665,
                      "src": "1816:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Community_$1409",
                        "typeString": "contract Community"
                      },
                      "typeName": {
                        "id": 1520,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1519,
                          "name": "Community",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1409,
                          "src": "1816:9:1"
                        },
                        "referencedDeclaration": 1409,
                        "src": "1816:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Community_$1409",
                          "typeString": "contract Community"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1532,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1525,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1852:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1852:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1527,
                        "name": "committee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "1864:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1528,
                        "name": "communityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1459,
                        "src": "1875:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1529,
                        "name": "rewardCalculator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
                        "src": "1891:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1530,
                        "name": "isMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "1909:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1838:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$returns$_t_contract$_Community_$1409_$",
                        "typeString": "function (address,address,address,address,bool) returns (contract Community)"
                      },
                      "typeName": {
                        "id": 1523,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1522,
                          "name": "Community",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1409,
                          "src": "1842:9:1"
                        },
                        "referencedDeclaration": 1409,
                        "src": "1842:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Community_$1409",
                          "typeString": "contract Community"
                        }
                      }
                    },
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:82:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Community_$1409",
                      "typeString": "contract Community"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1816:104:1"
                },
                {
                  "condition": {
                    "id": 1533,
                    "name": "needGrantRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1481,
                    "src": "1942:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1550,
                  "nodeType": "IfStatement",
                  "src": "1938:457:1",
                  "trueBody": {
                    "id": 1549,
                    "nodeType": "Block",
                    "src": "1956:439:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1539,
                                      "name": "communityToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1459,
                                      "src": "2134:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1538,
                                    "name": "MintableERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6737,
                                    "src": "2120:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MintableERC20_$6737_$",
                                      "typeString": "type(contract MintableERC20)"
                                    }
                                  },
                                  "id": 1540,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2120:29:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MintableERC20_$6737",
                                    "typeString": "contract MintableERC20"
                                  }
                                },
                                "id": 1541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "MINTER_ROLE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6664,
                                "src": "2120:41:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                  "typeString": "function () view external returns (bytes32)"
                                }
                              },
                              "id": 1542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2120:43:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1545,
                                  "name": "community",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1521,
                                  "src": "2173:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Community_$1409",
                                    "typeString": "contract Community"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Community_$1409",
                                    "typeString": "contract Community"
                                  }
                                ],
                                "id": 1544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2165:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1543,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2165:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2165:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1535,
                                  "name": "communityToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1459,
                                  "src": "2094:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1534,
                                "name": "MintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6737,
                                "src": "2080:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MintableERC20_$6737_$",
                                  "typeString": "type(contract MintableERC20)"
                                }
                              },
                              "id": 1536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2080:29:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableERC20_$6737",
                                "typeString": "contract MintableERC20"
                              }
                            },
                            "id": 1537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9660,
                            "src": "2080:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2080:104:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1548,
                        "nodeType": "ExpressionStatement",
                        "src": "2080:104:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "hexValue": "434f4d4d554e495459",
                          "id": 1555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2437:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                            "typeString": "literal_string \"COMMUNITY\""
                          },
                          "value": "COMMUNITY"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                            "typeString": "literal_string \"COMMUNITY\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1552,
                              "name": "committee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1423,
                              "src": "2419:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1551,
                            "name": "ICommittee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9367,
                            "src": "2408:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                              "typeString": "type(contract ICommittee)"
                            }
                          },
                          "id": 1553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2408:21:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICommittee_$9367",
                            "typeString": "contract ICommittee"
                          }
                        },
                        "id": 1554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9312,
                        "src": "2408:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) view external returns (uint256)"
                        }
                      },
                      "id": 1556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2408:41:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2452:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2408:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1624,
                  "nodeType": "IfStatement",
                  "src": "2405:462:1",
                  "trueBody": {
                    "id": 1623,
                    "nodeType": "Block",
                    "src": "2454:413:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1568,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2524:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1569,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2524:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1572,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "2544:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CommunityFactory_$1667",
                                          "typeString": "contract CommunityFactory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CommunityFactory_$1667",
                                          "typeString": "contract CommunityFactory"
                                        }
                                      ],
                                      "id": 1571,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2536:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1570,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2536:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2536:13:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1562,
                                                "name": "committee",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1423,
                                                "src": "2493:9:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1561,
                                              "name": "ICommittee",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9367,
                                              "src": "2482:10:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                                "typeString": "type(contract ICommittee)"
                                              }
                                            },
                                            "id": 1563,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2482:21:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ICommittee_$9367",
                                              "typeString": "contract ICommittee"
                                            }
                                          },
                                          "id": 1564,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "getNut",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 9317,
                                          "src": "2482:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 1565,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2482:30:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1560,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10978,
                                      "src": "2476:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$10978_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 1566,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2476:37:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$10978",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 1567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10570,
                                  "src": "2476:47:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 1574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2476:74:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "434f4d4d554e495459",
                                    "id": 1579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2583:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                      "typeString": "literal_string \"COMMUNITY\""
                                    },
                                    "value": "COMMUNITY"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                      "typeString": "literal_string \"COMMUNITY\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1576,
                                        "name": "committee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1423,
                                        "src": "2565:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1575,
                                      "name": "ICommittee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9367,
                                      "src": "2554:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                        "typeString": "type(contract ICommittee)"
                                      }
                                    },
                                    "id": 1577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2554:21:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommittee_$9367",
                                      "typeString": "contract ICommittee"
                                    }
                                  },
                                  "id": 1578,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9312,
                                  "src": "2554:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (string memory) view external returns (uint256)"
                                  }
                                },
                                "id": 1580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2554:41:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2476:119:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e656564",
                              "id": 1582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2597:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934",
                                "typeString": "literal_string \"need\""
                              },
                              "value": "need"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934",
                                "typeString": "literal_string \"need\""
                              }
                            ],
                            "id": 1559,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2468:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2468:136:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1584,
                        "nodeType": "ExpressionStatement",
                        "src": "2468:136:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1587,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1423,
                                      "src": "2639:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1586,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9367,
                                    "src": "2628:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 1588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2628:21:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$9367",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 1589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getNut",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9317,
                                "src": "2628:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2628:30:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1591,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2660:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2660:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1594,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1423,
                                      "src": "2683:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1593,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9367,
                                    "src": "2672:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 1595,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2672:21:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$9367",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 1596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getTreasury",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9322,
                                "src": "2672:33:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 1597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2672:35:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "434f4d4d554e495459",
                                  "id": 1602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2738:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                    "typeString": "literal_string \"COMMUNITY\""
                                  },
                                  "value": "COMMUNITY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                    "typeString": "literal_string \"COMMUNITY\""
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1599,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1423,
                                      "src": "2720:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1598,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9367,
                                    "src": "2709:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 1600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2709:21:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$9367",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 1601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getFee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9312,
                                "src": "2709:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (string memory) view external returns (uint256)"
                                }
                              },
                              "id": 1603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2709:41:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1585,
                            "name": "lockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1704,
                            "src": "2618:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2618:133:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1605,
                        "nodeType": "ExpressionStatement",
                        "src": "2618:133:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "434f4d4d554e495459",
                              "id": 1610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2800:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                "typeString": "literal_string \"COMMUNITY\""
                              },
                              "value": "COMMUNITY"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1613,
                                  "name": "community",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1521,
                                  "src": "2821:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Community_$1409",
                                    "typeString": "contract Community"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Community_$1409",
                                    "typeString": "contract Community"
                                  }
                                ],
                                "id": 1612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2813:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1611,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2813:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2813:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2841:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2833:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1615,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2833:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2833:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1619,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2845:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2845:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                "typeString": "literal_string \"COMMUNITY\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1607,
                                  "name": "committee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1423,
                                  "src": "2776:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1606,
                                "name": "ICommittee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9367,
                                "src": "2765:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                  "typeString": "type(contract ICommittee)"
                                }
                              },
                              "id": 1608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2765:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICommittee_$9367",
                                "typeString": "contract ICommittee"
                              }
                            },
                            "id": 1609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateLedger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9338,
                            "src": "2765:34:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address,address,address) external"
                            }
                          },
                          "id": 1621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2765:91:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1622,
                        "nodeType": "ExpressionStatement",
                        "src": "2765:91:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1631,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "3003:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2995:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2995:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2995:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1633,
                        "name": "distributionPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "3015:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1626,
                            "name": "rewardCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1465,
                            "src": "2958:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1625,
                          "name": "ICalculator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9296,
                          "src": "2946:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICalculator_$9296_$",
                            "typeString": "type(contract ICalculator)"
                          }
                        },
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2946:29:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICalculator_$9296",
                          "typeString": "contract ICalculator"
                        }
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDistributionEra",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9281,
                      "src": "2946:48:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2946:88:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1635,
                  "nodeType": "ExpressionStatement",
                  "src": "2946:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1642,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "3137:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3129:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1640,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3129:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3129:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1637,
                            "name": "committee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "3106:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1636,
                          "name": "ICommittee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9367,
                          "src": "3095:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                            "typeString": "type(contract ICommittee)"
                          }
                        },
                        "id": 1638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3095:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommittee_$9367",
                          "typeString": "contract ICommittee"
                        }
                      },
                      "id": 1639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFeePayer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9305,
                      "src": "3095:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3095:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1645,
                  "nodeType": "ExpressionStatement",
                  "src": "3095:53:1"
                },
                {
                  "expression": {
                    "id": 1653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1646,
                        "name": "createdCommunity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1427,
                        "src": "3159:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1651,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1649,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "3184:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3176:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1647,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3176:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3176:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3159:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3198:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3159:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1654,
                  "nodeType": "ExpressionStatement",
                  "src": "3159:43:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1656,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3235:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3235:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1660,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "3255:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3247:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1658,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3247:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3247:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1662,
                        "name": "communityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1459,
                        "src": "3267:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1655,
                      "name": "CommunityCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "3218:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 1663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3218:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1664,
                  "nodeType": "EmitStatement",
                  "src": "3213:69:1"
                }
              ]
            },
            "functionSelector": "cc83eac5",
            "id": 1666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCommunity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1457,
                  "mutability": "mutable",
                  "name": "isMintable",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1044:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1456,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1459,
                  "mutability": "mutable",
                  "name": "communityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1069:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1461,
                  "mutability": "mutable",
                  "name": "communityTokenFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1101:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "tokenMeta",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1140:24:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1465,
                  "mutability": "mutable",
                  "name": "rewardCalculator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1174:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1467,
                  "mutability": "mutable",
                  "name": "distributionPolicy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1208:33:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1466,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1034:213:1"
            },
            "returnParameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:0:1"
            },
            "scope": 1667,
            "src": "1009:2280:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1668,
        "src": "474:2817:1"
      }
    ],
    "src": "33:3259:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        9809
      ],
      "AccessControlEnumerable": [
        9934
      ],
      "ArbSys": [
        9257
      ],
      "Community": [
        1409
      ],
      "CommunityFactory": [
        1667
      ],
      "Context": [
        11338
      ],
      "ERC165": [
        11565
      ],
      "ERC20": [
        10978
      ],
      "ERC20Burnable": [
        11118
      ],
      "ERC20Helper": [
        1874
      ],
      "ERC20Pausable": [
        11155
      ],
      "ERC20PresetMinterPauser": [
        11316
      ],
      "EnumerableSet": [
        12488
      ],
      "IAccessControl": [
        10007
      ],
      "IAccessControlEnumerable": [
        10032
      ],
      "ICalculator": [
        9296
      ],
      "ICommittee": [
        9367
      ],
      "ICommunity": [
        9421
      ],
      "ICommunityTokenFactory": [
        9433
      ],
      "IERC165": [
        11577
      ],
      "IERC20": [
        11056
      ],
      "IERC20Metadata": [
        11180
      ],
      "IGauge": [
        9457
      ],
      "IPool": [
        9484
      ],
      "IPoolFactory": [
        9500
      ],
      "MintableERC20": [
        6737
      ],
      "Ownable": [
        10137
      ],
      "Pausable": [
        10229
      ],
      "SafeMath": [
        11889
      ],
      "Strings": [
        11541
      ]
    },
    "id": 1668,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1411,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "id": 1412,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:1"
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/Community.sol",
        "file": "./Community.sol",
        "id": 1413,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 1410,
        "src": "91:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICalculator.sol",
        "file": "./interfaces/ICalculator.sol",
        "id": 1414,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 9297,
        "src": "117:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommittee.sol",
        "file": "./interfaces/ICommittee.sol",
        "id": 1415,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 9368,
        "src": "156:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunityTokenFactory.sol",
        "file": "./interfaces/ICommunityTokenFactory.sol",
        "id": 1416,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 9434,
        "src": "194:49:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/ERC20Helper.sol",
        "file": "./ERC20Helper.sol",
        "id": 1417,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 1875,
        "src": "244:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/community-token/MintableERC20.sol",
        "file": "./community-token/MintableERC20.sol",
        "id": 1418,
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 6738,
        "src": "272:45:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1420,
              "name": "ERC20Helper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1874,
              "src": "503:11:1"
            },
            "id": 1421,
            "nodeType": "InheritanceSpecifier",
            "src": "503:11:1"
          }
        ],
        "contractDependencies": [
          1409,
          1874
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1419,
          "nodeType": "StructuredDocumentation",
          "src": "319:154:1",
          "text": " @dev Factory contract to create an StakingTemplate entity\n This is the entry contract that user start to create their own staking economy."
        },
        "fullyImplemented": true,
        "id": 1667,
        "linearizedBaseContracts": [
          1667,
          1874
        ],
        "name": "CommunityFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1423,
            "mutability": "immutable",
            "name": "committee",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "522:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1422,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "68a94b6e",
            "id": 1427,
            "mutability": "mutable",
            "name": "createdCommunity",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "555:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1426,
              "keyType": {
                "id": 1424,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "564:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "555:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1425,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "575:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1435,
            "name": "CommunityCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1429,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "634:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1431,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "659:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1433,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "communityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "686:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "633:76:1"
            },
            "src": "611:99:1"
          },
          {
            "body": {
              "id": 1454,
              "nodeType": "Block",
              "src": "748:103:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1441,
                          "name": "_committee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "766:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "788:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "780:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1442,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "780:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "780:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "766:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6d6d6974746565",
                        "id": 1447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "792:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5",
                          "typeString": "literal_string \"Invalid committee\""
                        },
                        "value": "Invalid committee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5",
                          "typeString": "literal_string \"Invalid committee\""
                        }
                      ],
                      "id": 1440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "758:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "758:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "758:54:1"
                },
                {
                  "expression": {
                    "id": 1452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1450,
                      "name": "committee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1423,
                      "src": "822:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1451,
                      "name": "_committee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1437,
                      "src": "834:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "822:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1453,
                  "nodeType": "ExpressionStatement",
                  "src": "822:22:1"
                }
              ]
            },
            "id": 1455,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "_committee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1455,
                  "src": "728:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:20:1"
            },
            "returnParameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:1"
            },
            "scope": 1667,
            "src": "716:135:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1665,
              "nodeType": "Block",
              "src": "1257:2032:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1475,
                            "name": "rewardCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1465,
                            "src": "1312:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1472,
                                "name": "committee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1423,
                                "src": "1286:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1471,
                              "name": "ICommittee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9367,
                              "src": "1275:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                "typeString": "type(contract ICommittee)"
                              }
                            },
                            "id": 1473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1275:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICommittee_$9367",
                              "typeString": "contract ICommittee"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9352,
                          "src": "1275:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1275:54:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5543",
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1331:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527",
                          "typeString": "literal_string \"UC\""
                        },
                        "value": "UC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527",
                          "typeString": "literal_string \"UC\""
                        }
                      ],
                      "id": 1470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1267:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1479,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:69:1"
                },
                {
                  "assignments": [
                    1481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1481,
                      "mutability": "mutable",
                      "name": "needGrantRole",
                      "nodeType": "VariableDeclaration",
                      "scope": 1665,
                      "src": "1435:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1480,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1435:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1483,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1456:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1435:26:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1484,
                      "name": "communityToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1459,
                      "src": "1475:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1501:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1493:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1485,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1493:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1493:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1475:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1518,
                  "nodeType": "IfStatement",
                  "src": "1471:335:1",
                  "trueBody": {
                    "id": 1517,
                    "nodeType": "Block",
                    "src": "1504:302:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1490,
                            "name": "needGrantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1481,
                            "src": "1518:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1534:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1518:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1493,
                        "nodeType": "ExpressionStatement",
                        "src": "1518:20:1"
                      },
                      {
                        "expression": {
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1494,
                            "name": "isMintable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1457,
                            "src": "1552:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1565:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1552:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1497,
                        "nodeType": "ExpressionStatement",
                        "src": "1552:17:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1503,
                                  "name": "communityTokenFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1461,
                                  "src": "1628:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1500,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1423,
                                      "src": "1602:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1499,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9367,
                                    "src": "1591:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 1501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1591:21:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$9367",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 1502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verifyContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9352,
                                "src": "1591:36:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 1504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1591:59:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "555443",
                              "id": 1505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1652:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f",
                                "typeString": "literal_string \"UTC\""
                              },
                              "value": "UTC"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f",
                                "typeString": "literal_string \"UTC\""
                              }
                            ],
                            "id": 1498,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1583:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1583:75:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1507,
                        "nodeType": "ExpressionStatement",
                        "src": "1583:75:1"
                      },
                      {
                        "expression": {
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1508,
                            "name": "communityToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1459,
                            "src": "1701:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1513,
                                "name": "tokenMeta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1463,
                                "src": "1785:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1510,
                                    "name": "communityTokenFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1461,
                                    "src": "1741:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1509,
                                  "name": "ICommunityTokenFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9433,
                                  "src": "1718:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICommunityTokenFactory_$9433_$",
                                    "typeString": "type(contract ICommunityTokenFactory)"
                                  }
                                },
                                "id": 1511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1718:45:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICommunityTokenFactory_$9433",
                                  "typeString": "contract ICommunityTokenFactory"
                                }
                              },
                              "id": 1512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "createCommunityToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9432,
                              "src": "1718:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes memory) external returns (address)"
                              }
                            },
                            "id": 1514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1718:77:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1701:94:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1516,
                        "nodeType": "ExpressionStatement",
                        "src": "1701:94:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1521,
                      "mutability": "mutable",
                      "name": "community",
                      "nodeType": "VariableDeclaration",
                      "scope": 1665,
                      "src": "1816:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Community_$1409",
                        "typeString": "contract Community"
                      },
                      "typeName": {
                        "id": 1520,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1519,
                          "name": "Community",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1409,
                          "src": "1816:9:1"
                        },
                        "referencedDeclaration": 1409,
                        "src": "1816:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Community_$1409",
                          "typeString": "contract Community"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1532,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1525,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1852:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1852:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1527,
                        "name": "committee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "1864:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1528,
                        "name": "communityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1459,
                        "src": "1875:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1529,
                        "name": "rewardCalculator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
                        "src": "1891:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1530,
                        "name": "isMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "1909:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1838:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$returns$_t_contract$_Community_$1409_$",
                        "typeString": "function (address,address,address,address,bool) returns (contract Community)"
                      },
                      "typeName": {
                        "id": 1523,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1522,
                          "name": "Community",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1409,
                          "src": "1842:9:1"
                        },
                        "referencedDeclaration": 1409,
                        "src": "1842:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Community_$1409",
                          "typeString": "contract Community"
                        }
                      }
                    },
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:82:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Community_$1409",
                      "typeString": "contract Community"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1816:104:1"
                },
                {
                  "condition": {
                    "id": 1533,
                    "name": "needGrantRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1481,
                    "src": "1942:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1550,
                  "nodeType": "IfStatement",
                  "src": "1938:457:1",
                  "trueBody": {
                    "id": 1549,
                    "nodeType": "Block",
                    "src": "1956:439:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1539,
                                      "name": "communityToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1459,
                                      "src": "2134:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1538,
                                    "name": "MintableERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6737,
                                    "src": "2120:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MintableERC20_$6737_$",
                                      "typeString": "type(contract MintableERC20)"
                                    }
                                  },
                                  "id": 1540,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2120:29:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MintableERC20_$6737",
                                    "typeString": "contract MintableERC20"
                                  }
                                },
                                "id": 1541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "MINTER_ROLE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6664,
                                "src": "2120:41:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                  "typeString": "function () view external returns (bytes32)"
                                }
                              },
                              "id": 1542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2120:43:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1545,
                                  "name": "community",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1521,
                                  "src": "2173:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Community_$1409",
                                    "typeString": "contract Community"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Community_$1409",
                                    "typeString": "contract Community"
                                  }
                                ],
                                "id": 1544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2165:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1543,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2165:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2165:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1535,
                                  "name": "communityToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1459,
                                  "src": "2094:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1534,
                                "name": "MintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6737,
                                "src": "2080:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MintableERC20_$6737_$",
                                  "typeString": "type(contract MintableERC20)"
                                }
                              },
                              "id": 1536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2080:29:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableERC20_$6737",
                                "typeString": "contract MintableERC20"
                              }
                            },
                            "id": 1537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9660,
                            "src": "2080:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2080:104:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1548,
                        "nodeType": "ExpressionStatement",
                        "src": "2080:104:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "hexValue": "434f4d4d554e495459",
                          "id": 1555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2437:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                            "typeString": "literal_string \"COMMUNITY\""
                          },
                          "value": "COMMUNITY"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                            "typeString": "literal_string \"COMMUNITY\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1552,
                              "name": "committee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1423,
                              "src": "2419:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1551,
                            "name": "ICommittee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9367,
                            "src": "2408:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                              "typeString": "type(contract ICommittee)"
                            }
                          },
                          "id": 1553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2408:21:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICommittee_$9367",
                            "typeString": "contract ICommittee"
                          }
                        },
                        "id": 1554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9312,
                        "src": "2408:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) view external returns (uint256)"
                        }
                      },
                      "id": 1556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2408:41:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2452:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2408:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1624,
                  "nodeType": "IfStatement",
                  "src": "2405:462:1",
                  "trueBody": {
                    "id": 1623,
                    "nodeType": "Block",
                    "src": "2454:413:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1568,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2524:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1569,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2524:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1572,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "2544:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CommunityFactory_$1667",
                                          "typeString": "contract CommunityFactory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CommunityFactory_$1667",
                                          "typeString": "contract CommunityFactory"
                                        }
                                      ],
                                      "id": 1571,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2536:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1570,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2536:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2536:13:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1562,
                                                "name": "committee",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1423,
                                                "src": "2493:9:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1561,
                                              "name": "ICommittee",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9367,
                                              "src": "2482:10:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                                "typeString": "type(contract ICommittee)"
                                              }
                                            },
                                            "id": 1563,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2482:21:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ICommittee_$9367",
                                              "typeString": "contract ICommittee"
                                            }
                                          },
                                          "id": 1564,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "getNut",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 9317,
                                          "src": "2482:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 1565,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2482:30:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1560,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10978,
                                      "src": "2476:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$10978_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 1566,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2476:37:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$10978",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 1567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10570,
                                  "src": "2476:47:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 1574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2476:74:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "434f4d4d554e495459",
                                    "id": 1579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2583:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                      "typeString": "literal_string \"COMMUNITY\""
                                    },
                                    "value": "COMMUNITY"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                      "typeString": "literal_string \"COMMUNITY\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1576,
                                        "name": "committee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1423,
                                        "src": "2565:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1575,
                                      "name": "ICommittee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9367,
                                      "src": "2554:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                        "typeString": "type(contract ICommittee)"
                                      }
                                    },
                                    "id": 1577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2554:21:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommittee_$9367",
                                      "typeString": "contract ICommittee"
                                    }
                                  },
                                  "id": 1578,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9312,
                                  "src": "2554:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (string memory) view external returns (uint256)"
                                  }
                                },
                                "id": 1580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2554:41:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2476:119:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e656564",
                              "id": 1582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2597:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934",
                                "typeString": "literal_string \"need\""
                              },
                              "value": "need"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934",
                                "typeString": "literal_string \"need\""
                              }
                            ],
                            "id": 1559,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2468:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2468:136:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1584,
                        "nodeType": "ExpressionStatement",
                        "src": "2468:136:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1587,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1423,
                                      "src": "2639:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1586,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9367,
                                    "src": "2628:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 1588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2628:21:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$9367",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 1589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getNut",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9317,
                                "src": "2628:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2628:30:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1591,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2660:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2660:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1594,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1423,
                                      "src": "2683:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1593,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9367,
                                    "src": "2672:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 1595,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2672:21:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$9367",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 1596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getTreasury",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9322,
                                "src": "2672:33:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 1597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2672:35:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "434f4d4d554e495459",
                                  "id": 1602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2738:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                    "typeString": "literal_string \"COMMUNITY\""
                                  },
                                  "value": "COMMUNITY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                    "typeString": "literal_string \"COMMUNITY\""
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1599,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1423,
                                      "src": "2720:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1598,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9367,
                                    "src": "2709:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 1600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2709:21:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$9367",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 1601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getFee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9312,
                                "src": "2709:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (string memory) view external returns (uint256)"
                                }
                              },
                              "id": 1603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2709:41:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1585,
                            "name": "lockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1704,
                            "src": "2618:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2618:133:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1605,
                        "nodeType": "ExpressionStatement",
                        "src": "2618:133:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "434f4d4d554e495459",
                              "id": 1610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2800:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                "typeString": "literal_string \"COMMUNITY\""
                              },
                              "value": "COMMUNITY"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1613,
                                  "name": "community",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1521,
                                  "src": "2821:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Community_$1409",
                                    "typeString": "contract Community"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Community_$1409",
                                    "typeString": "contract Community"
                                  }
                                ],
                                "id": 1612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2813:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1611,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2813:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2813:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2841:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2833:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1615,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2833:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2833:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1619,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2845:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2845:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                "typeString": "literal_string \"COMMUNITY\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1607,
                                  "name": "committee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1423,
                                  "src": "2776:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1606,
                                "name": "ICommittee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9367,
                                "src": "2765:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                                  "typeString": "type(contract ICommittee)"
                                }
                              },
                              "id": 1608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2765:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICommittee_$9367",
                                "typeString": "contract ICommittee"
                              }
                            },
                            "id": 1609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateLedger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9338,
                            "src": "2765:34:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address,address,address) external"
                            }
                          },
                          "id": 1621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2765:91:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1622,
                        "nodeType": "ExpressionStatement",
                        "src": "2765:91:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1631,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "3003:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2995:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2995:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2995:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1633,
                        "name": "distributionPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "3015:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1626,
                            "name": "rewardCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1465,
                            "src": "2958:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1625,
                          "name": "ICalculator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9296,
                          "src": "2946:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICalculator_$9296_$",
                            "typeString": "type(contract ICalculator)"
                          }
                        },
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2946:29:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICalculator_$9296",
                          "typeString": "contract ICalculator"
                        }
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDistributionEra",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9281,
                      "src": "2946:48:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2946:88:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1635,
                  "nodeType": "ExpressionStatement",
                  "src": "2946:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1642,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "3137:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3129:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1640,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3129:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3129:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1637,
                            "name": "committee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "3106:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1636,
                          "name": "ICommittee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9367,
                          "src": "3095:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommittee_$9367_$",
                            "typeString": "type(contract ICommittee)"
                          }
                        },
                        "id": 1638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3095:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommittee_$9367",
                          "typeString": "contract ICommittee"
                        }
                      },
                      "id": 1639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFeePayer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9305,
                      "src": "3095:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3095:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1645,
                  "nodeType": "ExpressionStatement",
                  "src": "3095:53:1"
                },
                {
                  "expression": {
                    "id": 1653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1646,
                        "name": "createdCommunity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1427,
                        "src": "3159:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1651,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1649,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "3184:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3176:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1647,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3176:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3176:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3159:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3198:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3159:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1654,
                  "nodeType": "ExpressionStatement",
                  "src": "3159:43:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1656,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3235:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3235:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1660,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "3255:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$1409",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3247:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1658,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3247:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3247:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1662,
                        "name": "communityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1459,
                        "src": "3267:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1655,
                      "name": "CommunityCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "3218:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 1663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3218:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1664,
                  "nodeType": "EmitStatement",
                  "src": "3213:69:1"
                }
              ]
            },
            "functionSelector": "cc83eac5",
            "id": 1666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCommunity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1457,
                  "mutability": "mutable",
                  "name": "isMintable",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1044:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1456,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1459,
                  "mutability": "mutable",
                  "name": "communityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1069:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1461,
                  "mutability": "mutable",
                  "name": "communityTokenFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1101:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "tokenMeta",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1140:24:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1465,
                  "mutability": "mutable",
                  "name": "rewardCalculator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1174:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1467,
                  "mutability": "mutable",
                  "name": "distributionPolicy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1208:33:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1466,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1034:213:1"
            },
            "returnParameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:0:1"
            },
            "scope": 1667,
            "src": "1009:2280:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1668,
        "src": "474:2817:1"
      }
    ],
    "src": "33:3259:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2023-06-14T03:47:44.527Z",
  "devdoc": {
    "details": "Factory contract to create an StakingTemplate entity This is the entry contract that user start to create their own staking economy.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}