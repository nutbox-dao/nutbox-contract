{
  "contractName": "CommunityFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_committee",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "community",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "communityToken",
          "type": "address"
        }
      ],
      "name": "CommunityCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "createdCommunity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isMintable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "communityToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "communityTokenFactory",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "tokenMeta",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "rewardCalculator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "distributionPolicy",
          "type": "bytes"
        }
      ],
      "name": "createCommunity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_committee\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"communityToken\",\"type\":\"address\"}],\"name\":\"CommunityCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isMintable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"communityToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"communityTokenFactory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"tokenMeta\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"rewardCalculator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"distributionPolicy\",\"type\":\"bytes\"}],\"name\":\"createCommunity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"createdCommunity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract to create an StakingTemplate entity This is the entry contract that user start to create their own staking economy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol\":\"CommunityFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/Community.sol\":{\"keccak256\":\"0xc1919ce46dcc08ad71b99cdefbdd8fb4454da1f14b1214f217d252493a427b44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd57c0598327d311ef069b9ba244fc3c62f35cffa3e5cae3f976eeddd2b5f507\",\"dweb:/ipfs/QmPMNAW3ftnCbgP16naDdP25ZGz1Nuimk88SHr2iPPSPtr\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol\":{\"keccak256\":\"0x651020221943be888ac06515c91ba57fb85a427ee46fe23e86db6eadfb3a2bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c05ef23811ecbda8079d230bc0e69c0b6fd8eb8411d10883c4313a786e78cbbb\",\"dweb:/ipfs/QmNms3YHXUFuY2nE5HkGHFtkRmpj5qffyXgSpmC4pZYgC6\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xddf2a441a9c0714ecc5c14ad5ee6c3ffa2e8155292229574369156004d2bcd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167987fa430b1303ad04b831fa610d31ca3f4202ad847e87cd9bb01156cfe9e0\",\"dweb:/ipfs/Qmf7a5unwgdUWTPfWZ94QRxVVxic12feERMNeC6krcmLmZ\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/community-token/MintableERC20.sol\":{\"keccak256\":\"0xd49c97ab428cd65d2326ad6875aed0082716bbfd094e5fd11cfafc6f778adcf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87da6adb416be4cfa38f6e08989390558297791f362cc237bee8c33080d3bd20\",\"dweb:/ipfs/QmYgQbaazS4L9KVvUhDq7pMxZGhCM8USrgJyjAsLkXDfLX\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ArbSys.sol\":{\"keccak256\":\"0x22f1cf1781c0d8828112ee5cce04e10bcc56dbb3fa668ceb10895393b21c70b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20f6c6a7c3b39241ebbb40490b70398ed8e013d061354447aba23553fd2a6ddc\",\"dweb:/ipfs/QmWzt87GoVDbz27AnbsZdAAoSK6763Jao7FEULLZfPY5by\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICalculator.sol\":{\"keccak256\":\"0x85e62c5ec77229d1e44b2c838b259829093e616ddbb887261eeaadd11c83c70a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8433eb15b4035948768e8707cae178742fc32fd60813dbba845d177ea87a89c7\",\"dweb:/ipfs/QmRByWaN4DZcSUyJABp1PViBDkBfQuHVAvqeU6FwqTPW9K\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommittee.sol\":{\"keccak256\":\"0x2190b0279cab5723ca36a492c45aad3b43f4f705d1df7d81e2932733b371397e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccd2ccfbbb75866a710e334056949888006443fd92404c66f22a2ffbd3a41acf\",\"dweb:/ipfs/QmUE1FEe5qLTp4TTrv9YBPgo97bdjABwUsRkZxkVcmXkUv\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunity.sol\":{\"keccak256\":\"0xffca71db30ce904d411ce19e250e66278c3547ec466e3263b1e4666b37c3b65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aec1e649127ab1f4812273dadc10d56d9c055f376ef1081b2b9885293cf18ca\",\"dweb:/ipfs/QmamXoeyTcakstJdc9cUfnRChGJtxxV2uA1y3HAg3Scyx9\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunityTokenFactory.sol\":{\"keccak256\":\"0x9a69a2d0752d3002d55ec2734724891fdab03de0a88e15ff297d85a3878924b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54fcdeb38c2292e11b14d0ff2b2d772ab8e14ce56d080685fede2f38749ff1d\",\"dweb:/ipfs/QmZdUicfe2kiGG5WaYpYN9yzNoXN7X3AmCMaosF4Vj6kzz\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IGauge.sol\":{\"keccak256\":\"0xafa9311f14cf7617763940d265d51448c613e574e6cbcdbb4412bd76ca7ae1fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d69b9acd6a010f1e8f5e0f3f533633a360c3f9d128d43c5191cc7e3d0864244\",\"dweb:/ipfs/QmQfwcyuTHGaw8xM9jwA9YzrxaKUSXTKNYobGwXLeCYus8\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xedea7672bb9703bcf57a6bbf386e4b528f55a698a08bc7c4481400738671ac83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20c0e753aa731e11ebe3e2918c863a4e72400983bb466660d3580ce4d9fbcf4\",\"dweb:/ipfs/QmUi3uZ9HVmZDAgyTTvWTPMtov2SudhFdSJ7jGLf8w3eis\"]},\"/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0x690fa318a561b45e70ceee542a68746d8b72a98c4ff83abb177c3e3710190fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91b6a4e9de1e1f01065c329d197dfd1f4d9a0996397f9f79b846804d75b1d2bd\",\"dweb:/ipfs/Qmc1eCVjE1xnQx2uMPkhAz5i3ohDDjEoVmJ5SZ8mdytScP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161433b38038061433b83398101604081905261002f9161008d565b6001600160a01b038116610078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f906100bb565b60405180910390fd5b60601b6001600160601b0319166080526100f2565b60006020828403121561009e578081fd5b81516001600160a01b03811681146100b4578182fd5b9392505050565b60208082526011908201527f496e76616c696420636f6d6d6974746565000000000000000000000000000000604082015260600190565b60805160601c6141e66101556000396000818160b301528181610195015281816102cd01528181610427015281816104ce01528181610559015281816106960152818161072c015281816107d60152818161087c015261098d01526141e66000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c806368a94b6e146200003f578063cc83eac5146200006e575b600080fd5b620000566200005036600462000bf8565b62000087565b60405162000065919062000e74565b60405180910390f35b620000856200007f36600462000c5c565b6200009c565b005b60006020819052908152604090205460ff1681565b604051633d200b4560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d200b4590620000ea90869060040162000dbf565b60206040518083038186803b1580156200010357600080fd5b505afa15801562000118573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013e919062000c3d565b620001665760405162461bcd60e51b81526004016200015d9062000eb4565b60405180910390fd5b60006001600160a01b038816620002c85750604051633d200b4560e01b81526001985088906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d200b4590620001cc908a9060040162000dbf565b60206040518083038186803b158015620001e557600080fd5b505afa158015620001fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000220919062000c3d565b6200023f5760405162461bcd60e51b81526004016200015d9062000f05565b604051633120db1b60e01b81526001600160a01b03881690633120db1b906200026f908990899060040162000e96565b602060405180830381600087803b1580156200028a57600080fd5b505af11580156200029f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c5919062000c1e565b97505b6000337f00000000000000000000000000000000000000000000000000000000000000008a878d604051620002fd9062000ba0565b6200030d95949392919062000ded565b604051809103906000f0801580156200032a573d6000803e3d6000fd5b50905081156200040d57886001600160a01b0316632f2ff15d8a6001600160a01b031663d53913936040518163ffffffff1660e01b815260040160206040518083038186803b1580156200037d57600080fd5b505afa15801562000392573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003b8919062000d24565b836040518363ffffffff1660e01b8152600401620003d892919062000e7f565b600060405180830381600087803b158015620003f357600080fd5b505af115801562000408573d6000803e3d6000fd5b505050505b604051631da3ddcd60e31b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee68906200045c9060040162000f6c565b60206040518083038186803b1580156200047557600080fd5b505afa1580156200048a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b0919062000d24565b1115620008ed57604051631da3ddcd60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee6890620005039060040162000f6c565b60206040518083038186803b1580156200051c57600080fd5b505afa15801562000531573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000557919062000d24565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c10bde0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620005b157600080fd5b505afa158015620005c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005ec919062000c1e565b6001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b81526004016200061b92919062000dd3565b60206040518083038186803b1580156200063457600080fd5b505afa15801562000649573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200066f919062000d24565b1015620006905760405162461bcd60e51b81526004016200015d9062000f4e565b620008657f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c10bde0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620006ee57600080fd5b505afa15801562000703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000729919062000c1e565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633b19e84a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200078457600080fd5b505afa15801562000799573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007bf919062000c1e565b604051631da3ddcd60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee68906200080b9060040162000f6c565b60206040518083038186803b1580156200082457600080fd5b505afa15801562000839573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200085f919062000d24565b62000a65565b60405163038815f360e41b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338815f3090620008b8908490600090339060040162000f86565b600060405180830381600087803b158015620008d357600080fd5b505af1158015620008e8573d6000803e3d6000fd5b505050505b604051635a6c95f560e01b81526001600160a01b03861690635a6c95f5906200091f9084908890889060040162000e44565b602060405180830381600087803b1580156200093a57600080fd5b505af11580156200094f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000975919062000c3d565b50604051631f1a022360e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637c68088c90620009c490849060040162000dbf565b600060405180830381600087803b158015620009df57600080fd5b505af1158015620009f4573d6000803e3d6000fd5b5050506001600160a01b03821660008181526020819052604090819020805460ff191660011790555190915033907fa1d5744e33f2d9cf5537c7ea77603378e4dbda6a0bebd8d33a3e613a4d401bb79062000a51908d9062000dbf565b60405180910390a350505050505050505050565b8362000a748185858562000a7b565b5050505050565b62000ad7846323b872dd60e01b85858560405160240162000a9f9392919062000e20565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262000add565b50505050565b600080836001600160a01b03168360405162000afa919062000d83565b6000604051808303816000865af19150503d806000811462000b39576040519150601f19603f3d011682016040523d82523d6000602084013e62000b3e565b606091505b50915091508162000b635760405162461bcd60e51b81526004016200015d9062000f22565b80511562000ad7578080602001905181019062000b81919062000c3d565b62000ad75760405162461bcd60e51b81526004016200015d9062000ed0565b6131c78062000fea83390190565b60008083601f84011262000bc0578182fd5b50813567ffffffffffffffff81111562000bd8578182fd5b60208301915083602082850101111562000bf157600080fd5b9250929050565b60006020828403121562000c0a578081fd5b813562000c178162000fc1565b9392505050565b60006020828403121562000c30578081fd5b815162000c178162000fc1565b60006020828403121562000c4f578081fd5b815162000c178162000fda565b60008060008060008060008060c0898b03121562000c78578384fd5b883562000c858162000fda565b9750602089013562000c978162000fc1565b9650604089013562000ca98162000fc1565b9550606089013567ffffffffffffffff8082111562000cc6578586fd5b62000cd48c838d0162000bae565b909750955060808b0135915062000ceb8262000fc1565b90935060a08a0135908082111562000d01578384fd5b5062000d108b828c0162000bae565b999c989b5096995094979396929594505050565b60006020828403121562000d36578081fd5b5051919050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6009815268434f4d4d554e49545960b81b602082015260400190565b60008251815b8181101562000da5576020818601810151858301520162000d89565b8181111562000db45782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039586168152938516602085015291841660408401529092166060820152901515608082015260a00190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038416815260406020820181905260009062000e6b908301848662000d3d565b95945050505050565b901515815260200190565b9182526001600160a01b0316602082015260400190565b60006020825262000eac60208301848662000d3d565b949350505050565b602080825260029082015261554360f01b604082015260600190565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b60208082526003908201526255544360e81b604082015260600190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b6020808252600490820152631b99595960e21b604082015260600190565b60006020825262000f806020830162000d67565b92915050565b60006080825262000f9a6080830162000d67565b6001600160a01b039586166020840152938516604083015250921660609092019190915290565b6001600160a01b038116811462000fd757600080fd5b50565b801515811462000fd757600080fdfe60e0604052604051620031c7380380620031c7833981016040819052620000269162000212565b6200003a62000034620000cc565b620000d0565b620000458562000120565b600280546001600160a01b038088166001600160a01b0319928316811790935560018054918816919092161790556001600160601b0319606085811b821660805284901b1660c05281151560f81b60a0526040516000907f5d777218f34a12264a9fec685df1868059eeec6d632b17a1775a00089e57533a908290a350505050506200031a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200012a62000184565b6001600160a01b03811662000176576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016d9062000288565b60405180910390fd5b6200018181620000d0565b50565b6200018e620000cc565b6001600160a01b0316620001a1620001e6565b6001600160a01b031614620001e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016d90620002e5565b565b6000546001600160a01b031690565b80516001600160a01b03811681146200020d57600080fd5b919050565b600080600080600060a086880312156200022a578081fd5b6200023586620001f5565b94506200024560208701620001f5565b93506200025560408701620001f5565b92506200026560608701620001f5565b9150608086015180151581146200027a578182fd5b809150509295509295909350565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60805160601c60a05160f81c60c05160601c612e3c6200038b60003960008181610f92015281816115530152611bfb015260008181611012015281816114ed015261206c015260008181610fd40152818161104f0152818161116a0152818161209501526120c50152612e3c6000f3fe6080604052600436106101a05760003560e01c8063a1970fa8116100ec578063d26273831161008a578063f2fde38b11610064578063f2fde38b14610459578063f739a52914610479578063fa32ddd814610499578063fd0c94e3146104ae576101a7565b8063d262738314610404578063d864e74014610424578063ef9b720814610439576101a7565b8063a8c478ba116100c6578063a8c478ba14610391578063af3bd4f2146103b1578063bf16c3c2146103c4578063c10b3aee146103e4576101a7565b8063a1970fa814610331578063a1a89dbc14610351578063a2a00ed614610371576101a7565b80637942016c1161015957806396769e891161013357806396769e89146102c557806398f69e9a146102da57806399efcaec146103075780639af2e5ef1461031c576101a7565b80637942016c1461027b5780638ae63d6d1461028e5780638da5cb5b146102b0576101a7565b80630924004e146101ac578063207cbd95146101ce57806341744dd4146101ee57806354054370146102195780635f78debd14610239578063715018a614610266576101a7565b366101a757005b600080fd5b3480156101b857600080fd5b506101cc6101c7366004612499565b6104ce565b005b3480156101da57600080fd5b506101cc6101e936600461260a565b6106a0565b3480156101fa57600080fd5b50610203610902565b6040516102109190612c0f565b60405180910390f35b34801561022557600080fd5b506101cc610234366004612429565b610913565b34801561024557600080fd5b50610259610254366004612709565b61099d565b6040516102109190612795565b34801561027257600080fd5b506101cc6109c7565b6101cc610289366004612537565b6109db565b34801561029a57600080fd5b506102a3610f7d565b6040516102109190612c1e565b3480156102bc57600080fd5b50610259610f81565b3480156102d157600080fd5b50610259610f90565b3480156102e657600080fd5b506102fa6102f5366004612429565b610fb4565b6040516102109190612935565b34801561031357600080fd5b50610259610fd2565b34801561032857600080fd5b506101cc610ff6565b34801561033d57600080fd5b506101cc61034c366004612709565b61115d565b34801561035d57600080fd5b506102a361036c366004612429565b611190565b34801561037d57600080fd5b506102a361038c366004612461565b6111ab565b34801561039d57600080fd5b506102a36103ac366004612429565b6111d8565b6101cc6103bf3660046125c5565b611253565b3480156103d057600080fd5b506101cc6103df36600461250c565b611291565b3480156103f057600080fd5b506101cc6103ff3660046126d1565b6112ea565b34801561041057600080fd5b5061025961041f366004612709565b6113a1565b34801561043057600080fd5b506102596113b1565b34801561044557600080fd5b506101cc61045436600461250c565b6113c0565b34801561046557600080fd5b506101cc610474366004612429565b61144b565b34801561048557600080fd5b506101cc610494366004612572565b611482565b3480156104a557600080fd5b506102fa6114eb565b3480156104ba57600080fd5b506102a36104c9366004612461565b61150f565b6104d6611815565b6001600160a01b03831660009081526004602052604090205460ff166105175760405162461bcd60e51b815260040161050e90612bf2565b60405180910390fd5b600a5461052690600190612d15565b8251146105455760405162461bcd60e51b815260040161050e90612a27565b80518251146105665760405162461bcd60e51b815260040161050e906129c4565b60005b82518110156105eb576004600084838151811061059657634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166105d95760405162461bcd60e51b815260040161050e90612bba565b806105e381612d7a565b915050610569565b506105f581611854565b61062860405180604001604052806009815260200168434f4d4d554e49545960b81b815250610622610f81565b856118e1565b6001600160a01b0383166000908152600460209081526040909120805460ff19169055825161065d91600a919085019061226c565b5061066781611eff565b6040516001600160a01b038416907fd9ddc9dcfa963ac8b810758254dfcbdd868ce81331581e7cfe5686f80cc0ed2090600090a2505050565b6106a8611815565b8351600a546106b8906001612c9b565b146106d55760405162461bcd60e51b815260040161050e90612b0f565b600154604051633d200b4560e01b81526001600160a01b0390911690633d200b4590610705908690600401612795565b60206040518083038186803b15801561071d57600080fd5b505afa158015610731573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075591906125a5565b6107715760405162461bcd60e51b815260040161050e90612ab6565b61077a84611854565b604051635c41e61560e11b81526000906001600160a01b0385169063b883cc2a906107af9030908a90889088906004016127cd565b602060405180830381600087803b1580156107c957600080fd5b505af11580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108019190612445565b905061083660405180604001604052806009815260200168434f4d4d554e49545960b81b815250610830610f81565b836118e1565b6001600160a01b03811660008181526004602090815260408083208054600160ff1991821681179092556008845282852080549091168217905560059092528220829055600a80548083019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b03199081168517909155600b805492830181559092527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901805490911690911790556108fa85611eff565b505050505050565b600154600160a01b900461ffff1681565b61091b611815565b6001600160a01b0381166109415760405162461bcd60e51b815260040161050e90612b4a565b6002546040516001600160a01b038084169216907f5d777218f34a12264a9fec685df1868059eeec6d632b17a1775a00089e57533a90600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b600a81815481106109ad57600080fd5b6000918252602090912001546001600160a01b0316905081565b6109cf611815565b6109d96000611fe3565b565b600c546109e757610f7a565b6000815111610a085760405162461bcd60e51b815260040161050e90612a45565b600c54610a13610f7d565b1115610a6857610a68604051806040016040528060048152602001632aa9a2a960e11b8152503383600081518110610a5b57634e487b7160e01b600052603260045260246000fd5b60200260200101516118e1565b6000806000600160009054906101000a90046001600160a01b03166001600160a01b031663f2803f036040518163ffffffff1660e01b815260040160206040518083038186803b158015610abb57600080fd5b505afa158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af39190612445565b905060005b84518160ff161015610f18576000858260ff1681518110610b2957634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0381166000908152600890925260409091205490915060ff16610b715760405162461bcd60e51b815260040161050e90612bd6565b6040516394465b2160e01b81526000906001600160a01b038316906394465b2190610ba0903390600401612795565b60206040518083038186803b158015610bb857600080fd5b505afa158015610bcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf09190612721565b6001600160a01b0383166000818152600760209081526040808320338452825280832054938352600590915281205492935091610c4a9190610c449064e8d4a5100090610c3e908790612033565b90612046565b90612052565b905060006001600160a01b03861615801590610cdf5750604051632b6d7e0f60e21b81526001600160a01b0387169063adb5f83c90610c8d908790600401612795565b602060405180830381600087803b158015610ca757600080fd5b505af1158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf91906125a5565b15610d88576000866001600160a01b031663328686f66040518163ffffffff1660e01b815260040160206040518083038186803b158015610d1f57600080fd5b505afa158015610d33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5791906126ed565b905061ffff811615610d8657610d77612710610c3e8561ffff8516612033565b9150610d838389612052565b92505b505b8015610e065760405163330ff7b560e21b81526001600160a01b0387169063cc3fded490610dbe903090889086906004016127a9565b600060405180830381600087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b50505050610e03818861205e90919063ffffffff16565b96505b8115610e5f576001600160a01b0384166000908152600660209081526040808320338452909152902054610e3a908361205e565b6001600160a01b03851660009081526006602090815260408083203384529091529020555b6001600160a01b0384166000908152600660209081526040808320338452909152902054610e8e90899061205e565b6001600160a01b038516600090815260056020526040902054909850610ec09064e8d4a5100090610c3e908690612033565b6001600160a01b0390941660008181526007602090815260408083203380855290835281842098909855928252600681528282209682529590955284209390935550829150610f10905081612d95565b915050610af8565b508115610f2957610f29818361206a565b610f33338461206a565b336001600160a01b03167f6ef8cf0d66677b36d11ee4e51dbd733fcd95070b8c2eb524fb96952f26115cb28585604051610f6e92919061285e565b60405180910390a25050505b50565b4390565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b031660009081526004602052604090205460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000090565b610ffe611815565b60006003541161100d57600080fd5b6003547f00000000000000000000000000000000000000000000000000000000000000006110ed576040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190611084903090600401612795565b60206040518083038186803b15801561109c57600080fd5b505afa1580156110b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d49190612721565b905060035481106110e7576003546110e9565b805b9150505b600254611103906001600160a01b03168261206a565b6003546111109082612052565b6003556002546040516001600160a01b03909116907f86a5cc8fe9af9ae68fb50f62885307a7755a30cbd290131644377f0bd94a718190611152908490612c1e565b60405180910390a250565b611165611815565b610f7a7f000000000000000000000000000000000000000000000000000000000000000033836120e7565b6001600160a01b031660009081526005602052604090205490565b6001600160a01b038083166000908152600760209081526040808320938516835292905220545b92915050565b600080805b600b5461ffff8216101561124c57611238611231600b8361ffff168154811061121657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03168661150f565b839061205e565b91508061124481612d58565b9150506111dd565b5092915050565b3360009081526008602052604090205460ff166112825760405162461bcd60e51b815260040161050e90612b2c565b61128d8282336118e1565b5050565b3360009081526008602052604090205460ff166112c05760405162461bcd60e51b815260040161050e90612b2c565b3360009081526007602090815260408083206001600160a01b039590951683529390529190912055565b6112f2611815565b61271061ffff821611156113185760405162461bcd60e51b815260040161050e90612b9b565b61134c60405180604001604052806009815260200168434f4d4d554e49545960b81b815250611345610f81565b60006118e1565b6001805461ffff60a01b1916600160a01b61ffff8416021790556040517fb5ea2431f5202daeb0439a80df086a35ec0abfd105e20f5564a824062596c09e90611396908390612c0f565b60405180910390a150565b600b81815481106109ad57600080fd5b6001546001600160a01b031681565b3360009081526008602052604090205460ff166113ef5760405162461bcd60e51b815260040161050e90612b2c565b3360009081526006602090815260408083206001600160a01b038616845290915290205461141d908261205e565b3360009081526006602090815260408083206001600160a01b03969096168352949052929092209190915550565b611453611815565b6001600160a01b0381166114795760405162461bcd60e51b815260040161050e906129e1565b610f7a81611fe3565b61148a611815565b8051600a54146114ac5760405162461bcd60e51b815260040161050e90612af3565b6114b581611854565b6114e260405180604001604052806009815260200168434f4d4d554e49545960b81b815250611345610f81565b610f7a81611eff565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600c5460001415611524575060006111d2565b600061160c612710610c3e600160149054906101000a900461ffff1661271061154d9190612cf2565b61ffff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c32c36030600c5460016115909190612c9b565b611598610f7d565b6040518463ffffffff1660e01b81526004016115b69392919061283d565b60206040518083038186803b1580156115ce57600080fd5b505afa1580156115e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116069190612721565b90612033565b90506000846001600160a01b03166394465b21856040518263ffffffff1660e01b815260040161163c9190612795565b60206040518083038186803b15801561165457600080fd5b505afa158015611668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168c9190612721565b9050806116c1575050506001600160a01b038083166000908152600660209081526040808320938516835292905220546111d2565b6000856001600160a01b03166338adb6f06040518163ffffffff1660e01b815260040160206040518083038186803b1580156116fc57600080fd5b505afa158015611710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117349190612721565b6001600160a01b0387166000908152600960205260408120549192509061179390611774908490610c3e906305f5e10090611606908a9061ffff16612033565b6001600160a01b0389166000908152600560205260409020549061205e565b6001600160a01b038089166000908152600760209081526040808320938b16835292905290812054919250906117d690610c4464e8d4a51000610c3e8887612033565b6001600160a01b03808a166000908152600660209081526040808320938c1683529290522054909150611809908261205e565b98975050505050505050565b61181d6120f9565b6001600160a01b031661182e610f81565b6001600160a01b0316146109d95760405162461bcd60e51b815260040161050e90612b66565b6000805b82518160ff1610156118ae57828160ff168151811061188757634e487b7160e01b600052603260045260246000fd5b60200260200101518261189a9190612c75565b9150806118a681612d95565b915050611858565b5061ffff811661271014806118c5575061ffff8116155b61128d5760405162461bcd60e51b815260040161050e90612ad3565b600154604051634ca1a91960e01b81526001600160a01b0390911690634ca1a91990611911908590600401612795565b60206040518083038186803b15801561192957600080fd5b505afa15801561193d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196191906125a5565b1580156119ec5750600154604051631da3ddcd60e31b81526000916001600160a01b03169063ed1eee689061199a908790600401612940565b60206040518083038186803b1580156119b257600080fd5b505afa1580156119c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ea9190612721565b115b15611bcb5760015460408051631d8cf42560e11b815290516000926001600160a01b031691633b19e84a916004808301926020929190829003018186803b158015611a3657600080fd5b505afa158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6e9190612445565b600154604051631da3ddcd60e31b81526001600160a01b03928316929091169063ed1eee6890611aa2908890600401612940565b60206040518083038186803b158015611aba57600080fd5b505afa158015611ace573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af29190612721565b604051611afe90612792565b60006040518083038185875af1925050503d8060008114611b3b576040519150601f19603f3d011682016040523d82523d6000602084013e611b40565b606091505b5050905080611b615760405162461bcd60e51b815260040161050e90612a8f565b60015460405163038815f360e41b81526001600160a01b03909116906338815f3090611b97908790309087908990600401612953565b600060405180830381600087803b158015611bb157600080fd5b505af1158015611bc5573d6000803e3d6000fd5b50505050505b600080611bd6610f7d565b9050600c5460001415611be957600c8190555b600c548111611bf9575050611efa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c32c36030600c546001611c389190612c9b565b846040518463ffffffff1660e01b8152600401611c579392919061283d565b60206040518083038186803b158015611c6f57600080fd5b505afa158015611c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca79190612721565b91508115611d6a57600154600160a01b900461ffff1615611d6a57600154600090611ce69061271090610c3e908690600160a01b900461ffff16612033565b600354909150611cf6908261205e565b600355600154611d259061271090610c3e90611d1e908390600160a01b900461ffff16612052565b8690612033565b9250846001600160a01b03167f2f4ae87a584f00dc35b043dd1c5ac839c1f41cd3a66e834d4e13faa6251634e682604051611d609190612c1e565b60405180910390a2505b60005b600a5461ffff82161015611ef4576000600a8261ffff1681548110611da257634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546040805163038adb6f60e41b815290516001600160a01b03909216945084926338adb6f092600480840193829003018186803b158015611def57600080fd5b505afa158015611e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e279190612721565b9050801580611e5057506001600160a01b03821660009081526009602052604090205461ffff16155b15611e5c575050611ee2565b6001600160a01b038216600090815260096020526040812054611e949061271090610c3e9061ffff166116068a64e8d4a51000612033565b9050611ec2611ea38284612046565b6001600160a01b0385166000908152600560205260409020549061205e565b6001600160a01b0390931660009081526005602052604090209290925550505b80611eec81612d58565b915050611d6d565b50600c55505b505050565b60005b600a5461ffff82161015611fb057818161ffff1681518110611f3457634e487b7160e01b600052603260045260246000fd5b602002602001015160096000600a8461ffff1681548110611f6557634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805461ffff191661ffff9290921691909117905580611fa881612d58565b915050611f02565b507f5b904beeb70c84b12d4105e0582a752c5a2705717790e1a648a27ba8622b9786600a826040516113969291906128af565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061203f8284612cd3565b9392505050565b600061203f8284612cb3565b600061203f8284612d15565b600061203f8284612c9b565b7f0000000000000000000000000000000000000000000000000000000000000000156120c0576120bb7f000000000000000000000000000000000000000000000000000000000000000083836120fd565b61128d565b61128d7f000000000000000000000000000000000000000000000000000000000000000083835b826120f3818484612165565b50505050565b3390565b6040516340c10f1960e01b815283906001600160a01b038216906340c10f199061212d9086908690600401612824565b600060405180830381600087803b15801561214757600080fd5b505af115801561215b573d6000803e3d6000fd5b5050505050505050565b611efa8363a9059cbb60e01b8484604051602401612184929190612824565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600080836001600160a01b0316836040516121d19190612776565b6000604051808303816000865af19150503d806000811461220e576040519150601f19603f3d011682016040523d82523d6000602084013e612213565b606091505b5091509150816122355760405162461bcd60e51b815260040161050e90612a63565b8051156120f3578080602001905181019061225091906125a5565b6120f35760405162461bcd60e51b815260040161050e9061298f565b8280548282559060005260206000209081019282156122c1579160200282015b828111156122c157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061228c565b506122cd9291506122d1565b5090565b5b808211156122cd57600081556001016122d2565b600082601f8301126122f6578081fd5b8135602061230b61230683612c51565b612c27565b8281528181019085830183850287018401881015612327578586fd5b855b8581101561234e57813561233c81612de1565b84529284019290840190600101612329565b5090979650505050505050565b600082601f83011261236b578081fd5b8135602061237b61230683612c51565b8281528181019085830183850287018401881015612397578586fd5b855b8581101561234e5781356123ac81612df6565b84529284019290840190600101612399565b600082601f8301126123ce578081fd5b813567ffffffffffffffff8111156123e8576123e8612dcb565b6123fb601f8201601f1916602001612c27565b81815284602083860101111561240f578283fd5b816020850160208301379081016020019190915292915050565b60006020828403121561243a578081fd5b813561203f81612de1565b600060208284031215612456578081fd5b815161203f81612de1565b60008060408385031215612473578081fd5b823561247e81612de1565b9150602083013561248e81612de1565b809150509250929050565b6000806000606084860312156124ad578081fd5b83356124b881612de1565b9250602084013567ffffffffffffffff808211156124d4578283fd5b6124e0878388016122e6565b935060408601359150808211156124f5578283fd5b506125028682870161235b565b9150509250925092565b6000806040838503121561251e578182fd5b823561252981612de1565b946020939093013593505050565b600060208284031215612548578081fd5b813567ffffffffffffffff81111561255e578182fd5b61256a848285016122e6565b949350505050565b600060208284031215612583578081fd5b813567ffffffffffffffff811115612599578182fd5b61256a8482850161235b565b6000602082840312156125b6578081fd5b8151801515811461203f578182fd5b600080604083850312156125d7578182fd5b823567ffffffffffffffff8111156125ed578283fd5b6125f9858286016123be565b925050602083013561248e81612de1565b600080600080600060808688031215612621578081fd5b853567ffffffffffffffff80821115612638578283fd5b61264489838a016123be565b96506020880135915080821115612659578283fd5b61266589838a0161235b565b95506040880135915061267782612de1565b9093506060870135908082111561268c578283fd5b818801915088601f83011261269f578283fd5b8135818111156126ad578384fd5b8960208285010111156126be578384fd5b9699959850939650602001949392505050565b6000602082840312156126e2578081fd5b813561203f81612df6565b6000602082840312156126fe578081fd5b815161203f81612df6565b60006020828403121561271a578081fd5b5035919050565b600060208284031215612732578081fd5b5051919050565b6001600160a01b0316815260200190565b60008151808452612762816020860160208601612d2c565b601f01601f19169290920160200192915050565b60008251612788818460208701612d2c565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03851681526060602082018190526000906127f19083018661274a565b82810360408401528381528385602083013781602085830101526020601f19601f86011682010191505095945050505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b604080825283519082018190526000906020906060840190828701845b828110156128a05781516001600160a01b03168452928401929084019060010161287b565b50505092019290925292915050565b6000604082016040835280855480835260608501915086845260209250828420845b828110156128fd5781546128ef9085906001600160a01b0316612739565b9350600191820191016128d1565b50505083810382850152845180825285830191830190845b8181101561234e57835161ffff1683529284019291840191600101612915565b901515815260200190565b60006020825261203f602083018461274a565b600060808252612966608083018761274a565b6001600160a01b0395861660208401529385166040830152509216606090920191909152919050565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b6020808252600390820152624c444d60e81b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526004908201526315d0541360e21b604082015260600190565b6020808252600490820152634d484f3160e01b604082015260600190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b6020808252600d908201526c18dbdcdd081999594819985a5b609a1b604082015260600190565b6020808252600390820152622aa82360e91b604082015260600190565b6020808252600690820152655253213d317760d01b604082015260600190565b60208082526002908201526115d360f21b604082015260600190565b60208082526003908201526257504360e81b604082015260600190565b602080825260049082015263504e495760e01b604082015260600190565b602080825260029082015261494160f01b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526005908201526450523e317760d81b604082015260600190565b602080825260029082015261057560f41b604082015260600190565b602080825260029082015261049560f41b604082015260600190565b60208082526003908201526250494160e81b604082015260600190565b61ffff91909116815260200190565b90815260200190565b60405181810167ffffffffffffffff81118282101715612c4957612c49612dcb565b604052919050565b600067ffffffffffffffff821115612c6b57612c6b612dcb565b5060209081020190565b600061ffff808316818516808303821115612c9257612c92612db5565b01949350505050565b60008219821115612cae57612cae612db5565b500190565b600082612cce57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612ced57612ced612db5565b500290565b600061ffff83811690831681811015612d0d57612d0d612db5565b039392505050565b600082821015612d2757612d27612db5565b500390565b60005b83811015612d47578181015183820152602001612d2f565b838111156120f35750506000910152565b600061ffff80831681811415612d7057612d70612db5565b6001019392505050565b6000600019821415612d8e57612d8e612db5565b5060010190565b600060ff821660ff811415612dac57612dac612db5565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f7a57600080fd5b61ffff81168114610f7a57600080fdfea26469706673582212209951fadf6dbe70739f10f0dcfc5f8254a4fdfc4f035091f654c172344df5776064736f6c63430008000033a2646970667358221220c669da46c0a80cd63dc18b514c98368de9bfe38babc89b68489975505c5745ba64736f6c63430008000033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200003a5760003560e01c806368a94b6e146200003f578063cc83eac5146200006e575b600080fd5b620000566200005036600462000bf8565b62000087565b60405162000065919062000e74565b60405180910390f35b620000856200007f36600462000c5c565b6200009c565b005b60006020819052908152604090205460ff1681565b604051633d200b4560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d200b4590620000ea90869060040162000dbf565b60206040518083038186803b1580156200010357600080fd5b505afa15801562000118573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013e919062000c3d565b620001665760405162461bcd60e51b81526004016200015d9062000eb4565b60405180910390fd5b60006001600160a01b038816620002c85750604051633d200b4560e01b81526001985088906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d200b4590620001cc908a9060040162000dbf565b60206040518083038186803b158015620001e557600080fd5b505afa158015620001fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000220919062000c3d565b6200023f5760405162461bcd60e51b81526004016200015d9062000f05565b604051633120db1b60e01b81526001600160a01b03881690633120db1b906200026f908990899060040162000e96565b602060405180830381600087803b1580156200028a57600080fd5b505af11580156200029f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c5919062000c1e565b97505b6000337f00000000000000000000000000000000000000000000000000000000000000008a878d604051620002fd9062000ba0565b6200030d95949392919062000ded565b604051809103906000f0801580156200032a573d6000803e3d6000fd5b50905081156200040d57886001600160a01b0316632f2ff15d8a6001600160a01b031663d53913936040518163ffffffff1660e01b815260040160206040518083038186803b1580156200037d57600080fd5b505afa15801562000392573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003b8919062000d24565b836040518363ffffffff1660e01b8152600401620003d892919062000e7f565b600060405180830381600087803b158015620003f357600080fd5b505af115801562000408573d6000803e3d6000fd5b505050505b604051631da3ddcd60e31b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee68906200045c9060040162000f6c565b60206040518083038186803b1580156200047557600080fd5b505afa1580156200048a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b0919062000d24565b1115620008ed57604051631da3ddcd60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee6890620005039060040162000f6c565b60206040518083038186803b1580156200051c57600080fd5b505afa15801562000531573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000557919062000d24565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c10bde0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620005b157600080fd5b505afa158015620005c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005ec919062000c1e565b6001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b81526004016200061b92919062000dd3565b60206040518083038186803b1580156200063457600080fd5b505afa15801562000649573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200066f919062000d24565b1015620006905760405162461bcd60e51b81526004016200015d9062000f4e565b620008657f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c10bde0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620006ee57600080fd5b505afa15801562000703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000729919062000c1e565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633b19e84a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200078457600080fd5b505afa15801562000799573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007bf919062000c1e565b604051631da3ddcd60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed1eee68906200080b9060040162000f6c565b60206040518083038186803b1580156200082457600080fd5b505afa15801562000839573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200085f919062000d24565b62000a65565b60405163038815f360e41b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338815f3090620008b8908490600090339060040162000f86565b600060405180830381600087803b158015620008d357600080fd5b505af1158015620008e8573d6000803e3d6000fd5b505050505b604051635a6c95f560e01b81526001600160a01b03861690635a6c95f5906200091f9084908890889060040162000e44565b602060405180830381600087803b1580156200093a57600080fd5b505af11580156200094f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000975919062000c3d565b50604051631f1a022360e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637c68088c90620009c490849060040162000dbf565b600060405180830381600087803b158015620009df57600080fd5b505af1158015620009f4573d6000803e3d6000fd5b5050506001600160a01b03821660008181526020819052604090819020805460ff191660011790555190915033907fa1d5744e33f2d9cf5537c7ea77603378e4dbda6a0bebd8d33a3e613a4d401bb79062000a51908d9062000dbf565b60405180910390a350505050505050505050565b8362000a748185858562000a7b565b5050505050565b62000ad7846323b872dd60e01b85858560405160240162000a9f9392919062000e20565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262000add565b50505050565b600080836001600160a01b03168360405162000afa919062000d83565b6000604051808303816000865af19150503d806000811462000b39576040519150601f19603f3d011682016040523d82523d6000602084013e62000b3e565b606091505b50915091508162000b635760405162461bcd60e51b81526004016200015d9062000f22565b80511562000ad7578080602001905181019062000b81919062000c3d565b62000ad75760405162461bcd60e51b81526004016200015d9062000ed0565b6131c78062000fea83390190565b60008083601f84011262000bc0578182fd5b50813567ffffffffffffffff81111562000bd8578182fd5b60208301915083602082850101111562000bf157600080fd5b9250929050565b60006020828403121562000c0a578081fd5b813562000c178162000fc1565b9392505050565b60006020828403121562000c30578081fd5b815162000c178162000fc1565b60006020828403121562000c4f578081fd5b815162000c178162000fda565b60008060008060008060008060c0898b03121562000c78578384fd5b883562000c858162000fda565b9750602089013562000c978162000fc1565b9650604089013562000ca98162000fc1565b9550606089013567ffffffffffffffff8082111562000cc6578586fd5b62000cd48c838d0162000bae565b909750955060808b0135915062000ceb8262000fc1565b90935060a08a0135908082111562000d01578384fd5b5062000d108b828c0162000bae565b999c989b5096995094979396929594505050565b60006020828403121562000d36578081fd5b5051919050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6009815268434f4d4d554e49545960b81b602082015260400190565b60008251815b8181101562000da5576020818601810151858301520162000d89565b8181111562000db45782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039586168152938516602085015291841660408401529092166060820152901515608082015260a00190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038416815260406020820181905260009062000e6b908301848662000d3d565b95945050505050565b901515815260200190565b9182526001600160a01b0316602082015260400190565b60006020825262000eac60208301848662000d3d565b949350505050565b602080825260029082015261554360f01b604082015260600190565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b60208082526003908201526255544360e81b604082015260600190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b6020808252600490820152631b99595960e21b604082015260600190565b60006020825262000f806020830162000d67565b92915050565b60006080825262000f9a6080830162000d67565b6001600160a01b039586166020840152938516604083015250921660609092019190915290565b6001600160a01b038116811462000fd757600080fd5b50565b801515811462000fd757600080fdfe60e0604052604051620031c7380380620031c7833981016040819052620000269162000212565b6200003a62000034620000cc565b620000d0565b620000458562000120565b600280546001600160a01b038088166001600160a01b0319928316811790935560018054918816919092161790556001600160601b0319606085811b821660805284901b1660c05281151560f81b60a0526040516000907f5d777218f34a12264a9fec685df1868059eeec6d632b17a1775a00089e57533a908290a350505050506200031a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200012a62000184565b6001600160a01b03811662000176576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016d9062000288565b60405180910390fd5b6200018181620000d0565b50565b6200018e620000cc565b6001600160a01b0316620001a1620001e6565b6001600160a01b031614620001e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016d90620002e5565b565b6000546001600160a01b031690565b80516001600160a01b03811681146200020d57600080fd5b919050565b600080600080600060a086880312156200022a578081fd5b6200023586620001f5565b94506200024560208701620001f5565b93506200025560408701620001f5565b92506200026560608701620001f5565b9150608086015180151581146200027a578182fd5b809150509295509295909350565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60805160601c60a05160f81c60c05160601c612e3c6200038b60003960008181610f92015281816115530152611bfb015260008181611012015281816114ed015261206c015260008181610fd40152818161104f0152818161116a0152818161209501526120c50152612e3c6000f3fe6080604052600436106101a05760003560e01c8063a1970fa8116100ec578063d26273831161008a578063f2fde38b11610064578063f2fde38b14610459578063f739a52914610479578063fa32ddd814610499578063fd0c94e3146104ae576101a7565b8063d262738314610404578063d864e74014610424578063ef9b720814610439576101a7565b8063a8c478ba116100c6578063a8c478ba14610391578063af3bd4f2146103b1578063bf16c3c2146103c4578063c10b3aee146103e4576101a7565b8063a1970fa814610331578063a1a89dbc14610351578063a2a00ed614610371576101a7565b80637942016c1161015957806396769e891161013357806396769e89146102c557806398f69e9a146102da57806399efcaec146103075780639af2e5ef1461031c576101a7565b80637942016c1461027b5780638ae63d6d1461028e5780638da5cb5b146102b0576101a7565b80630924004e146101ac578063207cbd95146101ce57806341744dd4146101ee57806354054370146102195780635f78debd14610239578063715018a614610266576101a7565b366101a757005b600080fd5b3480156101b857600080fd5b506101cc6101c7366004612499565b6104ce565b005b3480156101da57600080fd5b506101cc6101e936600461260a565b6106a0565b3480156101fa57600080fd5b50610203610902565b6040516102109190612c0f565b60405180910390f35b34801561022557600080fd5b506101cc610234366004612429565b610913565b34801561024557600080fd5b50610259610254366004612709565b61099d565b6040516102109190612795565b34801561027257600080fd5b506101cc6109c7565b6101cc610289366004612537565b6109db565b34801561029a57600080fd5b506102a3610f7d565b6040516102109190612c1e565b3480156102bc57600080fd5b50610259610f81565b3480156102d157600080fd5b50610259610f90565b3480156102e657600080fd5b506102fa6102f5366004612429565b610fb4565b6040516102109190612935565b34801561031357600080fd5b50610259610fd2565b34801561032857600080fd5b506101cc610ff6565b34801561033d57600080fd5b506101cc61034c366004612709565b61115d565b34801561035d57600080fd5b506102a361036c366004612429565b611190565b34801561037d57600080fd5b506102a361038c366004612461565b6111ab565b34801561039d57600080fd5b506102a36103ac366004612429565b6111d8565b6101cc6103bf3660046125c5565b611253565b3480156103d057600080fd5b506101cc6103df36600461250c565b611291565b3480156103f057600080fd5b506101cc6103ff3660046126d1565b6112ea565b34801561041057600080fd5b5061025961041f366004612709565b6113a1565b34801561043057600080fd5b506102596113b1565b34801561044557600080fd5b506101cc61045436600461250c565b6113c0565b34801561046557600080fd5b506101cc610474366004612429565b61144b565b34801561048557600080fd5b506101cc610494366004612572565b611482565b3480156104a557600080fd5b506102fa6114eb565b3480156104ba57600080fd5b506102a36104c9366004612461565b61150f565b6104d6611815565b6001600160a01b03831660009081526004602052604090205460ff166105175760405162461bcd60e51b815260040161050e90612bf2565b60405180910390fd5b600a5461052690600190612d15565b8251146105455760405162461bcd60e51b815260040161050e90612a27565b80518251146105665760405162461bcd60e51b815260040161050e906129c4565b60005b82518110156105eb576004600084838151811061059657634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166105d95760405162461bcd60e51b815260040161050e90612bba565b806105e381612d7a565b915050610569565b506105f581611854565b61062860405180604001604052806009815260200168434f4d4d554e49545960b81b815250610622610f81565b856118e1565b6001600160a01b0383166000908152600460209081526040909120805460ff19169055825161065d91600a919085019061226c565b5061066781611eff565b6040516001600160a01b038416907fd9ddc9dcfa963ac8b810758254dfcbdd868ce81331581e7cfe5686f80cc0ed2090600090a2505050565b6106a8611815565b8351600a546106b8906001612c9b565b146106d55760405162461bcd60e51b815260040161050e90612b0f565b600154604051633d200b4560e01b81526001600160a01b0390911690633d200b4590610705908690600401612795565b60206040518083038186803b15801561071d57600080fd5b505afa158015610731573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075591906125a5565b6107715760405162461bcd60e51b815260040161050e90612ab6565b61077a84611854565b604051635c41e61560e11b81526000906001600160a01b0385169063b883cc2a906107af9030908a90889088906004016127cd565b602060405180830381600087803b1580156107c957600080fd5b505af11580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108019190612445565b905061083660405180604001604052806009815260200168434f4d4d554e49545960b81b815250610830610f81565b836118e1565b6001600160a01b03811660008181526004602090815260408083208054600160ff1991821681179092556008845282852080549091168217905560059092528220829055600a80548083019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b03199081168517909155600b805492830181559092527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901805490911690911790556108fa85611eff565b505050505050565b600154600160a01b900461ffff1681565b61091b611815565b6001600160a01b0381166109415760405162461bcd60e51b815260040161050e90612b4a565b6002546040516001600160a01b038084169216907f5d777218f34a12264a9fec685df1868059eeec6d632b17a1775a00089e57533a90600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b600a81815481106109ad57600080fd5b6000918252602090912001546001600160a01b0316905081565b6109cf611815565b6109d96000611fe3565b565b600c546109e757610f7a565b6000815111610a085760405162461bcd60e51b815260040161050e90612a45565b600c54610a13610f7d565b1115610a6857610a68604051806040016040528060048152602001632aa9a2a960e11b8152503383600081518110610a5b57634e487b7160e01b600052603260045260246000fd5b60200260200101516118e1565b6000806000600160009054906101000a90046001600160a01b03166001600160a01b031663f2803f036040518163ffffffff1660e01b815260040160206040518083038186803b158015610abb57600080fd5b505afa158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af39190612445565b905060005b84518160ff161015610f18576000858260ff1681518110610b2957634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0381166000908152600890925260409091205490915060ff16610b715760405162461bcd60e51b815260040161050e90612bd6565b6040516394465b2160e01b81526000906001600160a01b038316906394465b2190610ba0903390600401612795565b60206040518083038186803b158015610bb857600080fd5b505afa158015610bcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf09190612721565b6001600160a01b0383166000818152600760209081526040808320338452825280832054938352600590915281205492935091610c4a9190610c449064e8d4a5100090610c3e908790612033565b90612046565b90612052565b905060006001600160a01b03861615801590610cdf5750604051632b6d7e0f60e21b81526001600160a01b0387169063adb5f83c90610c8d908790600401612795565b602060405180830381600087803b158015610ca757600080fd5b505af1158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf91906125a5565b15610d88576000866001600160a01b031663328686f66040518163ffffffff1660e01b815260040160206040518083038186803b158015610d1f57600080fd5b505afa158015610d33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5791906126ed565b905061ffff811615610d8657610d77612710610c3e8561ffff8516612033565b9150610d838389612052565b92505b505b8015610e065760405163330ff7b560e21b81526001600160a01b0387169063cc3fded490610dbe903090889086906004016127a9565b600060405180830381600087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b50505050610e03818861205e90919063ffffffff16565b96505b8115610e5f576001600160a01b0384166000908152600660209081526040808320338452909152902054610e3a908361205e565b6001600160a01b03851660009081526006602090815260408083203384529091529020555b6001600160a01b0384166000908152600660209081526040808320338452909152902054610e8e90899061205e565b6001600160a01b038516600090815260056020526040902054909850610ec09064e8d4a5100090610c3e908690612033565b6001600160a01b0390941660008181526007602090815260408083203380855290835281842098909855928252600681528282209682529590955284209390935550829150610f10905081612d95565b915050610af8565b508115610f2957610f29818361206a565b610f33338461206a565b336001600160a01b03167f6ef8cf0d66677b36d11ee4e51dbd733fcd95070b8c2eb524fb96952f26115cb28585604051610f6e92919061285e565b60405180910390a25050505b50565b4390565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b031660009081526004602052604090205460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000090565b610ffe611815565b60006003541161100d57600080fd5b6003547f00000000000000000000000000000000000000000000000000000000000000006110ed576040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190611084903090600401612795565b60206040518083038186803b15801561109c57600080fd5b505afa1580156110b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d49190612721565b905060035481106110e7576003546110e9565b805b9150505b600254611103906001600160a01b03168261206a565b6003546111109082612052565b6003556002546040516001600160a01b03909116907f86a5cc8fe9af9ae68fb50f62885307a7755a30cbd290131644377f0bd94a718190611152908490612c1e565b60405180910390a250565b611165611815565b610f7a7f000000000000000000000000000000000000000000000000000000000000000033836120e7565b6001600160a01b031660009081526005602052604090205490565b6001600160a01b038083166000908152600760209081526040808320938516835292905220545b92915050565b600080805b600b5461ffff8216101561124c57611238611231600b8361ffff168154811061121657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03168661150f565b839061205e565b91508061124481612d58565b9150506111dd565b5092915050565b3360009081526008602052604090205460ff166112825760405162461bcd60e51b815260040161050e90612b2c565b61128d8282336118e1565b5050565b3360009081526008602052604090205460ff166112c05760405162461bcd60e51b815260040161050e90612b2c565b3360009081526007602090815260408083206001600160a01b039590951683529390529190912055565b6112f2611815565b61271061ffff821611156113185760405162461bcd60e51b815260040161050e90612b9b565b61134c60405180604001604052806009815260200168434f4d4d554e49545960b81b815250611345610f81565b60006118e1565b6001805461ffff60a01b1916600160a01b61ffff8416021790556040517fb5ea2431f5202daeb0439a80df086a35ec0abfd105e20f5564a824062596c09e90611396908390612c0f565b60405180910390a150565b600b81815481106109ad57600080fd5b6001546001600160a01b031681565b3360009081526008602052604090205460ff166113ef5760405162461bcd60e51b815260040161050e90612b2c565b3360009081526006602090815260408083206001600160a01b038616845290915290205461141d908261205e565b3360009081526006602090815260408083206001600160a01b03969096168352949052929092209190915550565b611453611815565b6001600160a01b0381166114795760405162461bcd60e51b815260040161050e906129e1565b610f7a81611fe3565b61148a611815565b8051600a54146114ac5760405162461bcd60e51b815260040161050e90612af3565b6114b581611854565b6114e260405180604001604052806009815260200168434f4d4d554e49545960b81b815250611345610f81565b610f7a81611eff565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600c5460001415611524575060006111d2565b600061160c612710610c3e600160149054906101000a900461ffff1661271061154d9190612cf2565b61ffff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c32c36030600c5460016115909190612c9b565b611598610f7d565b6040518463ffffffff1660e01b81526004016115b69392919061283d565b60206040518083038186803b1580156115ce57600080fd5b505afa1580156115e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116069190612721565b90612033565b90506000846001600160a01b03166394465b21856040518263ffffffff1660e01b815260040161163c9190612795565b60206040518083038186803b15801561165457600080fd5b505afa158015611668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168c9190612721565b9050806116c1575050506001600160a01b038083166000908152600660209081526040808320938516835292905220546111d2565b6000856001600160a01b03166338adb6f06040518163ffffffff1660e01b815260040160206040518083038186803b1580156116fc57600080fd5b505afa158015611710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117349190612721565b6001600160a01b0387166000908152600960205260408120549192509061179390611774908490610c3e906305f5e10090611606908a9061ffff16612033565b6001600160a01b0389166000908152600560205260409020549061205e565b6001600160a01b038089166000908152600760209081526040808320938b16835292905290812054919250906117d690610c4464e8d4a51000610c3e8887612033565b6001600160a01b03808a166000908152600660209081526040808320938c1683529290522054909150611809908261205e565b98975050505050505050565b61181d6120f9565b6001600160a01b031661182e610f81565b6001600160a01b0316146109d95760405162461bcd60e51b815260040161050e90612b66565b6000805b82518160ff1610156118ae57828160ff168151811061188757634e487b7160e01b600052603260045260246000fd5b60200260200101518261189a9190612c75565b9150806118a681612d95565b915050611858565b5061ffff811661271014806118c5575061ffff8116155b61128d5760405162461bcd60e51b815260040161050e90612ad3565b600154604051634ca1a91960e01b81526001600160a01b0390911690634ca1a91990611911908590600401612795565b60206040518083038186803b15801561192957600080fd5b505afa15801561193d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196191906125a5565b1580156119ec5750600154604051631da3ddcd60e31b81526000916001600160a01b03169063ed1eee689061199a908790600401612940565b60206040518083038186803b1580156119b257600080fd5b505afa1580156119c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ea9190612721565b115b15611bcb5760015460408051631d8cf42560e11b815290516000926001600160a01b031691633b19e84a916004808301926020929190829003018186803b158015611a3657600080fd5b505afa158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6e9190612445565b600154604051631da3ddcd60e31b81526001600160a01b03928316929091169063ed1eee6890611aa2908890600401612940565b60206040518083038186803b158015611aba57600080fd5b505afa158015611ace573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af29190612721565b604051611afe90612792565b60006040518083038185875af1925050503d8060008114611b3b576040519150601f19603f3d011682016040523d82523d6000602084013e611b40565b606091505b5050905080611b615760405162461bcd60e51b815260040161050e90612a8f565b60015460405163038815f360e41b81526001600160a01b03909116906338815f3090611b97908790309087908990600401612953565b600060405180830381600087803b158015611bb157600080fd5b505af1158015611bc5573d6000803e3d6000fd5b50505050505b600080611bd6610f7d565b9050600c5460001415611be957600c8190555b600c548111611bf9575050611efa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632c32c36030600c546001611c389190612c9b565b846040518463ffffffff1660e01b8152600401611c579392919061283d565b60206040518083038186803b158015611c6f57600080fd5b505afa158015611c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca79190612721565b91508115611d6a57600154600160a01b900461ffff1615611d6a57600154600090611ce69061271090610c3e908690600160a01b900461ffff16612033565b600354909150611cf6908261205e565b600355600154611d259061271090610c3e90611d1e908390600160a01b900461ffff16612052565b8690612033565b9250846001600160a01b03167f2f4ae87a584f00dc35b043dd1c5ac839c1f41cd3a66e834d4e13faa6251634e682604051611d609190612c1e565b60405180910390a2505b60005b600a5461ffff82161015611ef4576000600a8261ffff1681548110611da257634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546040805163038adb6f60e41b815290516001600160a01b03909216945084926338adb6f092600480840193829003018186803b158015611def57600080fd5b505afa158015611e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e279190612721565b9050801580611e5057506001600160a01b03821660009081526009602052604090205461ffff16155b15611e5c575050611ee2565b6001600160a01b038216600090815260096020526040812054611e949061271090610c3e9061ffff166116068a64e8d4a51000612033565b9050611ec2611ea38284612046565b6001600160a01b0385166000908152600560205260409020549061205e565b6001600160a01b0390931660009081526005602052604090209290925550505b80611eec81612d58565b915050611d6d565b50600c55505b505050565b60005b600a5461ffff82161015611fb057818161ffff1681518110611f3457634e487b7160e01b600052603260045260246000fd5b602002602001015160096000600a8461ffff1681548110611f6557634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805461ffff191661ffff9290921691909117905580611fa881612d58565b915050611f02565b507f5b904beeb70c84b12d4105e0582a752c5a2705717790e1a648a27ba8622b9786600a826040516113969291906128af565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061203f8284612cd3565b9392505050565b600061203f8284612cb3565b600061203f8284612d15565b600061203f8284612c9b565b7f0000000000000000000000000000000000000000000000000000000000000000156120c0576120bb7f000000000000000000000000000000000000000000000000000000000000000083836120fd565b61128d565b61128d7f000000000000000000000000000000000000000000000000000000000000000083835b826120f3818484612165565b50505050565b3390565b6040516340c10f1960e01b815283906001600160a01b038216906340c10f199061212d9086908690600401612824565b600060405180830381600087803b15801561214757600080fd5b505af115801561215b573d6000803e3d6000fd5b5050505050505050565b611efa8363a9059cbb60e01b8484604051602401612184929190612824565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600080836001600160a01b0316836040516121d19190612776565b6000604051808303816000865af19150503d806000811461220e576040519150601f19603f3d011682016040523d82523d6000602084013e612213565b606091505b5091509150816122355760405162461bcd60e51b815260040161050e90612a63565b8051156120f3578080602001905181019061225091906125a5565b6120f35760405162461bcd60e51b815260040161050e9061298f565b8280548282559060005260206000209081019282156122c1579160200282015b828111156122c157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061228c565b506122cd9291506122d1565b5090565b5b808211156122cd57600081556001016122d2565b600082601f8301126122f6578081fd5b8135602061230b61230683612c51565b612c27565b8281528181019085830183850287018401881015612327578586fd5b855b8581101561234e57813561233c81612de1565b84529284019290840190600101612329565b5090979650505050505050565b600082601f83011261236b578081fd5b8135602061237b61230683612c51565b8281528181019085830183850287018401881015612397578586fd5b855b8581101561234e5781356123ac81612df6565b84529284019290840190600101612399565b600082601f8301126123ce578081fd5b813567ffffffffffffffff8111156123e8576123e8612dcb565b6123fb601f8201601f1916602001612c27565b81815284602083860101111561240f578283fd5b816020850160208301379081016020019190915292915050565b60006020828403121561243a578081fd5b813561203f81612de1565b600060208284031215612456578081fd5b815161203f81612de1565b60008060408385031215612473578081fd5b823561247e81612de1565b9150602083013561248e81612de1565b809150509250929050565b6000806000606084860312156124ad578081fd5b83356124b881612de1565b9250602084013567ffffffffffffffff808211156124d4578283fd5b6124e0878388016122e6565b935060408601359150808211156124f5578283fd5b506125028682870161235b565b9150509250925092565b6000806040838503121561251e578182fd5b823561252981612de1565b946020939093013593505050565b600060208284031215612548578081fd5b813567ffffffffffffffff81111561255e578182fd5b61256a848285016122e6565b949350505050565b600060208284031215612583578081fd5b813567ffffffffffffffff811115612599578182fd5b61256a8482850161235b565b6000602082840312156125b6578081fd5b8151801515811461203f578182fd5b600080604083850312156125d7578182fd5b823567ffffffffffffffff8111156125ed578283fd5b6125f9858286016123be565b925050602083013561248e81612de1565b600080600080600060808688031215612621578081fd5b853567ffffffffffffffff80821115612638578283fd5b61264489838a016123be565b96506020880135915080821115612659578283fd5b61266589838a0161235b565b95506040880135915061267782612de1565b9093506060870135908082111561268c578283fd5b818801915088601f83011261269f578283fd5b8135818111156126ad578384fd5b8960208285010111156126be578384fd5b9699959850939650602001949392505050565b6000602082840312156126e2578081fd5b813561203f81612df6565b6000602082840312156126fe578081fd5b815161203f81612df6565b60006020828403121561271a578081fd5b5035919050565b600060208284031215612732578081fd5b5051919050565b6001600160a01b0316815260200190565b60008151808452612762816020860160208601612d2c565b601f01601f19169290920160200192915050565b60008251612788818460208701612d2c565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03851681526060602082018190526000906127f19083018661274a565b82810360408401528381528385602083013781602085830101526020601f19601f86011682010191505095945050505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b604080825283519082018190526000906020906060840190828701845b828110156128a05781516001600160a01b03168452928401929084019060010161287b565b50505092019290925292915050565b6000604082016040835280855480835260608501915086845260209250828420845b828110156128fd5781546128ef9085906001600160a01b0316612739565b9350600191820191016128d1565b50505083810382850152845180825285830191830190845b8181101561234e57835161ffff1683529284019291840191600101612915565b901515815260200190565b60006020825261203f602083018461274a565b600060808252612966608083018761274a565b6001600160a01b0395861660208401529385166040830152509216606090920191909152919050565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b6020808252600390820152624c444d60e81b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526004908201526315d0541360e21b604082015260600190565b6020808252600490820152634d484f3160e01b604082015260600190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b6020808252600d908201526c18dbdcdd081999594819985a5b609a1b604082015260600190565b6020808252600390820152622aa82360e91b604082015260600190565b6020808252600690820152655253213d317760d01b604082015260600190565b60208082526002908201526115d360f21b604082015260600190565b60208082526003908201526257504360e81b604082015260600190565b602080825260049082015263504e495760e01b604082015260600190565b602080825260029082015261494160f01b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526005908201526450523e317760d81b604082015260600190565b602080825260029082015261057560f41b604082015260600190565b602080825260029082015261049560f41b604082015260600190565b60208082526003908201526250494160e81b604082015260600190565b61ffff91909116815260200190565b90815260200190565b60405181810167ffffffffffffffff81118282101715612c4957612c49612dcb565b604052919050565b600067ffffffffffffffff821115612c6b57612c6b612dcb565b5060209081020190565b600061ffff808316818516808303821115612c9257612c92612db5565b01949350505050565b60008219821115612cae57612cae612db5565b500190565b600082612cce57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612ced57612ced612db5565b500290565b600061ffff83811690831681811015612d0d57612d0d612db5565b039392505050565b600082821015612d2757612d27612db5565b500390565b60005b83811015612d47578181015183820152602001612d2f565b838111156120f35750506000910152565b600061ffff80831681811415612d7057612d70612db5565b6001019392505050565b6000600019821415612d8e57612d8e612db5565b5060010190565b600060ff821660ff811415612dac57612dac612db5565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f7a57600080fd5b61ffff81168114610f7a57600080fdfea26469706673582212209951fadf6dbe70739f10f0dcfc5f8254a4fdfc4f035091f654c172344df5776064736f6c63430008000033a2646970667358221220c669da46c0a80cd63dc18b514c98368de9bfe38babc89b68489975505c5745ba64736f6c63430008000033",
  "immutableReferences": {
    "2014": [
      {
        "length": 32,
        "start": 179
      },
      {
        "length": 32,
        "start": 405
      },
      {
        "length": 32,
        "start": 717
      },
      {
        "length": 32,
        "start": 1063
      },
      {
        "length": 32,
        "start": 1230
      },
      {
        "length": 32,
        "start": 1369
      },
      {
        "length": 32,
        "start": 1686
      },
      {
        "length": 32,
        "start": 1836
      },
      {
        "length": 32,
        "start": 2006
      },
      {
        "length": 32,
        "start": 2172
      },
      {
        "length": 32,
        "start": 2445
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:672:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:67",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:67",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:67"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:67",
                "type": ""
              }
            ],
            "src": "14:310:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:167:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "520:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "531:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "513:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "554:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "565:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "550:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "550:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:2:67",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "543:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "543:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "609:19:67",
                        "type": "",
                        "value": "Invalid committee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "582:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:47:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:47:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "638:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "650:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "661:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "646:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "646:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "638:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "480:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "494:4:67",
                "type": ""
              }
            ],
            "src": "329:341:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid committee\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9109:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "88:303:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "137:30:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "146:8:67"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "156:8:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "139:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "139:26:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "139:26:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "116:6:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "124:4:67",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "112:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "112:17:67"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "131:3:67"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "108:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "108:27:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "101:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "101:35:67"
                  },
                  "nodeType": "YulIf",
                  "src": "98:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "176:30:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "199:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "186:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "186:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "176:6:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "249:30:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "258:8:67"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "268:8:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "251:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "251:26:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "251:26:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "221:6:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "229:18:67",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "218:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:30:67"
                  },
                  "nodeType": "YulIf",
                  "src": "215:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "288:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "304:6:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "312:4:67",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "300:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "300:17:67"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "288:8:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "369:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "378:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "381:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "371:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "371:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "371:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "340:6:67"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "348:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "336:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "336:19:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "357:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "332:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "332:30:67"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "364:3:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "329:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "329:39:67"
                  },
                  "nodeType": "YulIf",
                  "src": "326:2:67"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "51:6:67",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "59:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "67:8:67",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "77:6:67",
                "type": ""
              }
            ],
            "src": "14:377:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "466:189:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "512:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "521:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "529:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "514:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "514:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "514:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "487:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "496:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "483:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "483:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "479:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "479:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "476:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "547:36:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "573:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "560:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "560:23:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "551:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "619:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "592:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "592:33:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "634:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "644:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "634:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "432:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "443:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "455:6:67",
                "type": ""
              }
            ],
            "src": "396:259:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:182:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "762:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "771:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "758:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "758:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "783:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "754:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "751:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "822:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "841:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "835:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:16:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "826:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "887:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "860:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "860:33:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "902:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "912:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "902:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "707:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "718:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "730:6:67",
                "type": ""
              }
            ],
            "src": "660:263:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1006:179:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1052:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1061:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1069:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1054:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1054:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1054:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1027:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1036:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1048:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1019:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1016:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1087:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1106:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1100:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:16:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1091:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1149:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1125:23:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1125:30:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1164:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1174:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1164:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "972:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "983:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "995:6:67",
                "type": ""
              }
            ],
            "src": "928:257:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1380:1124:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1427:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1436:6:67"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1444:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1429:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1429:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1429:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1401:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1410:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1397:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1397:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1422:3:67",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1393:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1393:33:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1390:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1462:36:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1488:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1475:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1475:23:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1466:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1531:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1507:23:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1507:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1507:30:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1546:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1556:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1546:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1570:47:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1602:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1613:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1598:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1598:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1585:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:32:67"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1574:7:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1653:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1626:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1626:35:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1626:35:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1670:17:67",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1680:7:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1696:47:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1728:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1739:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1724:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1724:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1711:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:32:67"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "1700:7:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1779:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1752:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:35:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1752:35:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1796:17:67",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1806:7:67"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1796:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1822:46:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1853:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1864:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1849:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1849:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1836:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:32:67"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1826:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1877:28:67",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1887:18:67",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1881:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1932:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1941:6:67"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1949:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1934:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1934:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1934:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1920:6:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1928:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1917:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1917:14:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1914:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1967:86:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2025:9:67"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2036:6:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2021:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:22:67"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2045:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1993:27:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1993:60:67"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "1971:8:67",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "1981:8:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2062:18:67",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2072:8:67"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2062:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2089:18:67",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "2099:8:67"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2089:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2116:48:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2148:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2159:3:67",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2144:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2144:19:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2131:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2131:33:67"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "2120:7:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "2200:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2173:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2173:35:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2173:35:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2217:17:67",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "2227:7:67"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2217:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2243:49:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2276:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2287:3:67",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2272:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2272:19:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2259:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2259:33:67"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2247:8:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2321:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value6",
                              "nodeType": "YulIdentifier",
                              "src": "2330:6:67"
                            },
                            {
                              "name": "value6",
                              "nodeType": "YulIdentifier",
                              "src": "2338:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2323:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2323:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2323:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2307:8:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2317:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2304:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2304:16:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2301:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2356:88:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2414:9:67"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2425:8:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2410:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2410:24:67"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2436:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2382:27:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2382:62:67"
                  },
                  "variables": [
                    {
                      "name": "value6_1",
                      "nodeType": "YulTypedName",
                      "src": "2360:8:67",
                      "type": ""
                    },
                    {
                      "name": "value7_1",
                      "nodeType": "YulTypedName",
                      "src": "2370:8:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2453:18:67",
                  "value": {
                    "name": "value6_1",
                    "nodeType": "YulIdentifier",
                    "src": "2463:8:67"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "2453:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2480:18:67",
                  "value": {
                    "name": "value7_1",
                    "nodeType": "YulIdentifier",
                    "src": "2490:8:67"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "2480:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_boolt_addresst_addresst_bytes_calldata_ptrt_addresst_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1290:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1301:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1313:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1321:6:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1329:6:67",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1337:6:67",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1345:6:67",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1353:6:67",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "1361:6:67",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "1369:6:67",
                "type": ""
              }
            ],
            "src": "1190:1314:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2590:113:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2636:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2645:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2653:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2638:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2638:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2638:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2611:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2620:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2607:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2607:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2632:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2603:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2603:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2600:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2671:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2687:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2681:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:16:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2671:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2556:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2567:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2579:6:67",
                "type": ""
              }
            ],
            "src": "2509:194:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2789:113:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2835:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2844:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2852:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2837:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2837:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2837:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2810:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2819:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2806:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2806:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2831:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2802:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2802:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2799:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2870:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2886:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2880:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2880:16:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2870:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2755:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2766:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2778:6:67",
                "type": ""
              }
            ],
            "src": "2708:194:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2975:202:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2992:3:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2997:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2985:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2985:19:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2985:19:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3030:3:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3035:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3026:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3026:14:67"
                      },
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "3042:5:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3049:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3013:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3013:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3013:43:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3080:3:67"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3085:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3076:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3076:16:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3094:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3072:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3072:27:67"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3101:3:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3065:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3065:40:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3065:40:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3114:57:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3129:3:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3142:6:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3150:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3138:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3138:15:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3159:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3155:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3155:7:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3134:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3134:29:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3125:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3125:39:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3166:4:67",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3121:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3121:50:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3114:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "2944:5:67",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2951:6:67",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2959:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2967:3:67",
                "type": ""
              }
            ],
            "src": "2907:270:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3239:102:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3256:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3261:1:67",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3249:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:14:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3249:14:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3283:3:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3288:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3279:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3279:14:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3295:11:67",
                        "type": "",
                        "value": "COMMUNITY"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3272:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3272:35:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3272:35:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3316:19:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3327:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3332:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3323:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3323:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3316:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e94d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3223:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3231:3:67",
                "type": ""
              }
            ],
            "src": "3182:159:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3483:293:67",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3493:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3513:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3507:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3507:13:67"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3497:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3529:12:67",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "3538:3:67"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3533:1:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3602:77:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3627:3:67"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3632:1:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3623:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3623:11:67"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3650:6:67"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3658:1:67"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3646:3:67"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3646:14:67"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3662:4:67",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3642:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3642:25:67"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3636:5:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3636:32:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3616:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3616:53:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3616:53:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3561:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3564:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3558:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3558:13:67"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3572:21:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3574:17:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3583:1:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3586:4:67",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3579:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3579:12:67"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3574:1:67"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3554:3:67",
                    "statements": []
                  },
                  "src": "3550:129:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3705:33:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3718:3:67"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3723:6:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3714:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3714:16:67"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "3732:3:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3707:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3707:29:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3707:29:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3694:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3697:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3691:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3691:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "3688:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3747:23:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3758:3:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3763:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3754:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3754:16:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3747:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3459:3:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3464:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3475:3:67",
                "type": ""
              }
            ],
            "src": "3346:430:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3882:102:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3892:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3904:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3915:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3900:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3900:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3892:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3934:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3949:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3965:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3970:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3961:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3961:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3974:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3957:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3957:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3945:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3945:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3927:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3927:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3927:51:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3851:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3862:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3873:4:67",
                "type": ""
              }
            ],
            "src": "3781:203:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4118:175:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4128:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4140:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4151:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4136:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4128:4:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4163:29:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4181:3:67",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4186:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4177:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4177:11:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4190:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4173:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4173:19:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4167:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4208:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4223:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4231:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4219:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4219:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4201:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4201:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4201:34:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4255:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4266:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4251:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4251:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4275:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4283:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4271:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4271:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4244:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4244:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4244:43:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4079:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4090:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4098:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4109:4:67",
                "type": ""
              }
            ],
            "src": "3989:304:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4505:340:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4515:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4527:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4538:3:67",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4523:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4523:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4515:4:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4551:29:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4569:3:67",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4574:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4565:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4565:11:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4578:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4561:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4561:19:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4555:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4596:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4611:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4619:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4607:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4607:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4589:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4589:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4589:34:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4643:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4654:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4639:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4639:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4663:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4671:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4659:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4659:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4632:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4632:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4632:43:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4695:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4706:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4691:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4691:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4715:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4723:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4711:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4711:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4684:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4684:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4684:43:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4747:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4758:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4743:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4743:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4767:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4775:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4763:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4763:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4736:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4736:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4736:43:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4799:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4810:3:67",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4795:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4795:19:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "4830:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4823:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4823:14:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4816:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4816:22:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4788:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4788:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4788:51:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4442:9:67",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4453:6:67",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4461:6:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4469:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4477:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4485:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4496:4:67",
                "type": ""
              }
            ],
            "src": "4298:547:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5007:218:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5017:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5029:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5040:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5025:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5025:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5017:4:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5052:29:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5070:3:67",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5075:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5066:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5066:11:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5079:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5062:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5062:19:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5056:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5097:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5112:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5120:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5108:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5108:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5090:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5090:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5090:34:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5144:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5155:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5140:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5140:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5164:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5172:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5160:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5160:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5133:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5133:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5133:43:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5196:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5207:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5192:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5192:18:67"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5212:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5185:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5185:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5185:34:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4960:9:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4971:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4979:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4987:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4998:4:67",
                "type": ""
              }
            ],
            "src": "4850:375:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5387:186:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5404:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5419:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5435:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5440:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5431:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5431:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5444:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5427:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5427:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5415:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5415:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5397:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5397:51:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5468:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5479:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5464:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5464:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5484:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5457:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5457:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5457:30:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5496:71:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5532:6:67"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5540:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5552:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5563:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5548:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5548:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5504:27:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5504:63:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5496:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5340:9:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5351:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5359:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5367:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5378:4:67",
                "type": ""
              }
            ],
            "src": "5230:343:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5673:92:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5683:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5695:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5706:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5691:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5691:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5683:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5725:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5750:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5743:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5743:14:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5736:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5736:22:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5718:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5718:41:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5718:41:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5642:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5653:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5664:4:67",
                "type": ""
              }
            ],
            "src": "5578:187:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5899:145:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5909:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5921:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5932:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5917:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5917:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5909:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5951:9:67"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5962:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5944:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5944:25:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5944:25:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5989:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6000:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5985:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5985:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6009:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6025:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6030:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6021:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6021:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6034:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6017:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6017:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6005:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6005:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5978:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5978:60:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5978:60:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5860:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5871:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5879:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5890:4:67",
                "type": ""
              }
            ],
            "src": "5770:274:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6178:117:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6195:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6206:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6188:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6188:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6188:21:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6218:71:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6254:6:67"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6262:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6274:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6285:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6270:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6270:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "6226:27:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6226:63:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6218:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6139:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6150:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6158:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6169:4:67",
                "type": ""
              }
            ],
            "src": "6049:246:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6474:151:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6491:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6502:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6484:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6484:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6484:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6525:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6536:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6521:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6521:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6541:1:67",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6514:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6514:29:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6514:29:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6563:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6574:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6559:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6559:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6579:4:67",
                        "type": "",
                        "value": "UC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6552:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6552:32:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6552:32:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6593:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6605:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6616:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6601:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6601:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6593:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6451:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6465:4:67",
                "type": ""
              }
            ],
            "src": "6300:325:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6804:182:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6821:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6832:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6814:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6814:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6814:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6855:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6866:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6851:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6851:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6871:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6844:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6844:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6844:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6894:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6905:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6890:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6890:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6910:34:67",
                        "type": "",
                        "value": "ERC20: operation did not succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6883:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6883:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6883:62:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6954:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6966:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6977:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6962:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6962:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6954:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e070c5d84d2ce64f06a55372ede71bea348c7746469ec289c4aba299bc05fdc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6781:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6795:4:67",
                "type": ""
              }
            ],
            "src": "6630:356:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7165:152:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7182:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7193:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7175:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7175:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7175:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7216:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7227:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7212:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7212:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7232:1:67",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7205:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7205:29:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7205:29:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7254:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7265:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7250:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7250:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7270:5:67",
                        "type": "",
                        "value": "UTC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7243:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7243:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7243:33:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7285:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7297:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7308:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7293:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7293:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7285:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7142:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7156:4:67",
                "type": ""
              }
            ],
            "src": "6991:326:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7496:168:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7513:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7524:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7506:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7506:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7506:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7547:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7558:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7543:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7543:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7563:2:67",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7536:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7536:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7536:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7586:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7597:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7582:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7582:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7602:20:67",
                        "type": "",
                        "value": "ERC20: call failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7575:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7575:48:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7575:48:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7632:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7644:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7655:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7640:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7640:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7632:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3576d6dfb5a800b5f7598d3cc3220135845acd27db3901a5c3c655559195efba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7473:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7487:4:67",
                "type": ""
              }
            ],
            "src": "7322:342:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7843:153:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7860:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7871:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7853:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7853:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7853:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7894:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7905:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7890:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7890:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7910:1:67",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7883:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7883:29:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7883:29:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7932:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7943:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7928:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7928:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7948:6:67",
                        "type": "",
                        "value": "need"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7921:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7921:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7921:34:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7964:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7976:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7987:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7972:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7972:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7964:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7820:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7834:4:67",
                "type": ""
              }
            ],
            "src": "7669:327:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8175:105:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8192:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8203:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8185:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8185:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8185:21:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8215:59:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8259:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8270:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8255:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8255:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e94d",
                      "nodeType": "YulIdentifier",
                      "src": "8223:31:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8223:51:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8215:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8152:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8166:4:67",
                "type": ""
              }
            ],
            "src": "8001:279:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8543:301:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8560:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8571:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8553:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8553:22:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8553:22:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8584:60:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8628:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8639:3:67",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8624:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8624:19:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e94d",
                      "nodeType": "YulIdentifier",
                      "src": "8592:31:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8592:52:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8584:4:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8653:29:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8671:3:67",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8676:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8667:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8667:11:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8680:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8663:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8663:19:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8657:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8702:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8713:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8698:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8698:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8722:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8730:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8718:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8718:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8691:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8691:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8691:43:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8754:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8765:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8750:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8750:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8774:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8782:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8770:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8770:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8743:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8743:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8743:43:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8806:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8817:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8802:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8802:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8826:6:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8834:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8822:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8822:15:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8795:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8795:43:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8795:43:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074_t_address_t_address_t_address__to_t_string_memory_ptr_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8496:9:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8507:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8515:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8523:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8534:4:67",
                "type": ""
              }
            ],
            "src": "8285:559:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8896:86:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8960:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8969:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8972:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8962:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8962:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8962:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8919:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8930:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8945:3:67",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8950:1:67",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8941:3:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8941:11:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8954:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8937:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8937:19:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8926:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8926:31:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8916:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8916:42:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8909:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8909:50:67"
                  },
                  "nodeType": "YulIf",
                  "src": "8906:2:67"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8885:5:67",
                "type": ""
              }
            ],
            "src": "8849:133:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9031:76:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9085:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9094:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9097:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9087:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9087:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9087:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9054:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9075:5:67"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9068:6:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9068:13:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9061:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9061:21:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9051:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9051:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9044:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9044:40:67"
                  },
                  "nodeType": "YulIf",
                  "src": "9041:2:67"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9020:5:67",
                "type": ""
              }
            ],
            "src": "8987:120:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_boolt_addresst_addresst_bytes_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_2)\n        value2 := value_2\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_t_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let value_3 := calldataload(add(headStart, 128))\n        validator_revert_t_address(value_3)\n        value5 := value_3\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(value6, value6) }\n        let value6_1, value7_1 := abi_decode_t_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), end)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_t_stringliteral_e94d(pos) -> end\n    {\n        mstore(pos, 9)\n        mstore(add(pos, 0x20), \"COMMUNITY\")\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), end) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_address_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_t_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes_calldata(value0, value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"UC\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0e070c5d84d2ce64f06a55372ede71bea348c7746469ec289c4aba299bc05fdc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC20: operation did not succeed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"UTC\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3576d6dfb5a800b5f7598d3cc3220135845acd27db3901a5c3c655559195efba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"ERC20: call failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"need\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_stringliteral_e94d(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074_t_address_t_address_t_address__to_t_string_memory_ptr_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        tail := abi_encode_t_stringliteral_e94d(add(headStart, 128))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value0, _1))\n        mstore(add(headStart, 64), and(value1, _1))\n        mstore(add(headStart, 96), and(value2, _1))\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "474:2817:2:-:0;;;716:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;766:24:2;;758:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;822:22;;-1:-1:-1;;;;;;822:22:2;;;474:2817;;14:310:67;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:67;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:67:o;329:341::-;531:2;513:21;;;570:2;550:18;;;543:30;609:19;604:2;589:18;;582:47;661:2;646:18;;503:167::o;:::-;474:2817:2;;;;;;;;;;;;",
  "deployedSourceMap": "474:2817:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:49;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1009:2280;;;;;;:::i;:::-;;:::i;:::-;;555:49;;;;;;;;;;;;;;;;:::o;1009:2280::-;1275:54;;-1:-1:-1;;;1275:54:2;;-1:-1:-1;;;;;1286:9:2;1275:36;;;;:54;;1312:16;;1275:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1267:69;;;;-1:-1:-1;;;1267:69:2;;;;;;;:::i;:::-;;;;;;;;;1435:18;-1:-1:-1;;;;;1475:28:2;;1471:335;;-1:-1:-1;1591:59:2;;-1:-1:-1;;;1591:59:2;;1534:4;;-1:-1:-1;1534:4:2;;-1:-1:-1;;;;;1602:9:2;1591:36;;;;:59;;1628:21;;1591:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1583:75;;;;-1:-1:-1;;;1583:75:2;;;;;;;:::i;:::-;1718:77;;-1:-1:-1;;;1718:77:2;;-1:-1:-1;;;;;1718:66:2;;;;;:77;;1785:9;;;;1718:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:94;;1471:335;1816:19;1852:10;1864:9;1875:14;1891:16;1909:10;1838:82;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1816:104;;1942:13;1938:457;;;2094:14;-1:-1:-1;;;;;2080:39:2;;2134:14;-1:-1:-1;;;;;2120:41:2;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2173:9;2080:104;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:457;2408:41;;-1:-1:-1;;;2408:41:2;;2452:1;;-1:-1:-1;;;;;2419:9:2;2408:28;;;;:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;2405:462;;;2554:41;;-1:-1:-1;;;2554:41:2;;-1:-1:-1;;;;;2565:9:2;2554:28;;;;:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2493:9;-1:-1:-1;;;;;2482:28:2;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2476:47:2;;2524:10;2544:4;2476:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:119;;2468:136;;;;-1:-1:-1;;;2468:136:2;;;;;;;:::i;:::-;2618:133;2639:9;-1:-1:-1;;;;;2628:28:2;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2660:10;2683:9;-1:-1:-1;;;;;2672:33:2;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2709:41;;-1:-1:-1;;;2709:41:2;;-1:-1:-1;;;;;2720:9:2;2709:28;;;;:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2618:9;:133::i;:::-;2765:91;;-1:-1:-1;;;2765:91:2;;-1:-1:-1;;;;;2776:9:2;2765:34;;;;:91;;2821:9;;2841:1;;2845:10;;2765:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2405:462;2946:88;;-1:-1:-1;;;2946:88:2;;-1:-1:-1;;;;;2946:48:2;;;;;:88;;3003:9;;3015:18;;;;2946:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3095:53:2;;-1:-1:-1;;;3095:53:2;;-1:-1:-1;;;;;3106:9:2;3095:33;;;;:53;;3137:9;;3095:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;3159:36:2;;:16;:36;;;;;;;;;;;;:43;;-1:-1:-1;;3159:43:2;3198:4;3159:43;;;3218:64;3159:36;;-1:-1:-1;3235:10:2;;3218:64;;;;3267:14;;3218:64;:::i;:::-;;;;;;;;1009:2280;;;;;;;;;;:::o;725:250:4:-;895:12;918:50;895:12;943:5;950:9;961:6;918:17;:50::i;:::-;725:250;;;;;:::o;3029:265::-;3167:120;3190:5;3232:27;;;3261:4;3267:2;3271:5;3209:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3209:68:4;;;;;;;;;;;;;;-1:-1:-1;;;;;3209:68:4;-1:-1:-1;;;;;;3209:68:4;;;;;;;;;;3167:9;:120::i;:::-;3029:265;;;;:::o;3455:375::-;3526:12;3540:23;3575:5;-1:-1:-1;;;;;3567:19:4;3587:4;3567:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3525:67;;;;3610:7;3602:38;;;;-1:-1:-1;;;3602:38:4;;;;;;;:::i;:::-;3655:17;;:21;3651:173;;3728:10;3717:30;;;;;;;;;;;;:::i;:::-;3692:121;;;;-1:-1:-1;;;3692:121:4;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:377:67:-;;;131:3;124:4;116:6;112:17;108:27;98:2;;156:8;146;139:26;98:2;-1:-1:-1;186:20:67;;229:18;218:30;;215:2;;;268:8;258;251:26;215:2;312:4;304:6;300:17;288:29;;364:3;357:4;348:6;340;336:19;332:30;329:39;326:2;;;381:1;378;371:12;326:2;88:303;;;;;:::o;396:259::-;;508:2;496:9;487:7;483:23;479:32;476:2;;;529:6;521;514:22;476:2;573:9;560:23;592:33;619:5;592:33;:::i;:::-;644:5;466:189;-1:-1:-1;;;466:189:67:o;660:263::-;;783:2;771:9;762:7;758:23;754:32;751:2;;;804:6;796;789:22;751:2;841:9;835:16;860:33;887:5;860:33;:::i;928:257::-;;1048:2;1036:9;1027:7;1023:23;1019:32;1016:2;;;1069:6;1061;1054:22;1016:2;1106:9;1100:16;1125:30;1149:5;1125:30;:::i;1190:1314::-;;;;;;;;;1422:3;1410:9;1401:7;1397:23;1393:33;1390:2;;;1444:6;1436;1429:22;1390:2;1488:9;1475:23;1507:30;1531:5;1507:30;:::i;:::-;1556:5;-1:-1:-1;1613:2:67;1598:18;;1585:32;1626:35;1585:32;1626:35;:::i;:::-;1680:7;-1:-1:-1;1739:2:67;1724:18;;1711:32;1752:35;1711:32;1752:35;:::i;:::-;1806:7;-1:-1:-1;1864:2:67;1849:18;;1836:32;1887:18;1917:14;;;1914:2;;;1949:6;1941;1934:22;1914:2;1993:60;2045:7;2036:6;2025:9;2021:22;1993:60;:::i;:::-;2072:8;;-1:-1:-1;1967:86:67;-1:-1:-1;2159:3:67;2144:19;;2131:33;;-1:-1:-1;2173:35:67;2131:33;2173:35;:::i;:::-;2227:7;;-1:-1:-1;2287:3:67;2272:19;;2259:33;;2304:16;;;2301:2;;;2338:6;2330;2323:22;2301:2;;2382:62;2436:7;2425:8;2414:9;2410:24;2382:62;:::i;:::-;1380:1124;;;;-1:-1:-1;1380:1124:67;;-1:-1:-1;1380:1124:67;;;;;;2463:8;-1:-1:-1;;;1380:1124:67:o;2509:194::-;;2632:2;2620:9;2611:7;2607:23;2603:32;2600:2;;;2653:6;2645;2638:22;2600:2;-1:-1:-1;2681:16:67;;2590:113;-1:-1:-1;2590:113:67:o;2907:270::-;;2997:6;2992:3;2985:19;3049:6;3042:5;3035:4;3030:3;3026:14;3013:43;3101:3;3094:4;3085:6;3080:3;3076:16;3072:27;3065:40;3166:4;3159:2;3155:7;3150:2;3142:6;3138:15;3134:29;3129:3;3125:39;3121:50;3114:57;;2975:202;;;;;:::o;3182:159::-;3261:1;3249:14;;-1:-1:-1;;;3288:4:67;3279:14;;3272:35;3332:2;3323:12;;3239:102::o;3346:430::-;;3513:6;3507:13;3538:3;3550:129;3564:6;3561:1;3558:13;3550:129;;;3662:4;3646:14;;;3642:25;;3636:32;3623:11;;;3616:53;3579:12;3550:129;;;3697:6;3694:1;3691:13;3688:2;;;3732:3;3723:6;3718:3;3714:16;3707:29;3688:2;-1:-1:-1;3754:16:67;;;;;3483:293;-1:-1:-1;;3483:293:67:o;3781:203::-;-1:-1:-1;;;;;3945:32:67;;;;3927:51;;3915:2;3900:18;;3882:102::o;3989:304::-;-1:-1:-1;;;;;4219:15:67;;;4201:34;;4271:15;;4266:2;4251:18;;4244:43;4151:2;4136:18;;4118:175::o;4298:547::-;-1:-1:-1;;;;;4607:15:67;;;4589:34;;4659:15;;;4654:2;4639:18;;4632:43;4711:15;;;4706:2;4691:18;;4684:43;4763:15;;;4758:2;4743:18;;4736:43;4823:14;;4816:22;4810:3;4795:19;;4788:51;4538:3;4523:19;;4505:340::o;4850:375::-;-1:-1:-1;;;;;5108:15:67;;;5090:34;;5160:15;;;;5155:2;5140:18;;5133:43;5207:2;5192:18;;5185:34;;;;5040:2;5025:18;;5007:218::o;5230:343::-;-1:-1:-1;;;;;5415:32:67;;5397:51;;5484:2;5479;5464:18;;5457:30;;;5230:343;;5504:63;;5548:18;;5540:6;5532;5504:63;:::i;:::-;5496:71;5387:186;-1:-1:-1;;;;;5387:186:67:o;5578:187::-;5743:14;;5736:22;5718:41;;5706:2;5691:18;;5673:92::o;5770:274::-;5944:25;;;-1:-1:-1;;;;;6005:32:67;6000:2;5985:18;;5978:60;5932:2;5917:18;;5899:145::o;6049:246::-;;6206:2;6195:9;6188:21;6226:63;6285:2;6274:9;6270:18;6262:6;6254;6226:63;:::i;:::-;6218:71;6178:117;-1:-1:-1;;;;6178:117:67:o;6300:325::-;6502:2;6484:21;;;6541:1;6521:18;;;6514:29;-1:-1:-1;;;6574:2:67;6559:18;;6552:32;6616:2;6601:18;;6474:151::o;6630:356::-;6832:2;6814:21;;;6851:18;;;6844:30;6910:34;6905:2;6890:18;;6883:62;6977:2;6962:18;;6804:182::o;6991:326::-;7193:2;7175:21;;;7232:1;7212:18;;;7205:29;-1:-1:-1;;;7265:2:67;7250:18;;7243:33;7308:2;7293:18;;7165:152::o;7322:342::-;7524:2;7506:21;;;7563:2;7543:18;;;7536:30;-1:-1:-1;;;7597:2:67;7582:18;;7575:48;7655:2;7640:18;;7496:168::o;7669:327::-;7871:2;7853:21;;;7910:1;7890:18;;;7883:29;-1:-1:-1;;;7943:2:67;7928:18;;7921:34;7987:2;7972:18;;7843:153::o;8001:279::-;;8203:2;8192:9;8185:21;8223:51;8270:2;8259:9;8255:18;8223:51;:::i;:::-;8215:59;8175:105;-1:-1:-1;;8175:105:67:o;8285:559::-;;8571:3;8560:9;8553:22;8592:52;8639:3;8628:9;8624:19;8592:52;:::i;:::-;-1:-1:-1;;;;;8718:15:67;;;8713:2;8698:18;;8691:43;8770:15;;;8765:2;8750:18;;8743:43;-1:-1:-1;8822:15:67;;8817:2;8802:18;;;8795:43;;;;8584:60;8543:301::o;8849:133::-;-1:-1:-1;;;;;8926:31:67;;8916:42;;8906:2;;8972:1;8969;8962:12;8906:2;8896:86;:::o;8987:120::-;9075:5;9068:13;9061:21;9054:5;9051:32;9041:2;;9097:1;9094;9087:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\npragma experimental ABIEncoderV2;\n\nimport './Community.sol';\nimport './interfaces/ICalculator.sol';\nimport './interfaces/ICommittee.sol';\nimport \"./interfaces/ICommunityTokenFactory.sol\";\nimport \"./ERC20Helper.sol\";\nimport \"./community-token/MintableERC20.sol\";\n\n/**\n * @dev Factory contract to create an StakingTemplate entity\n *\n * This is the entry contract that user start to create their own staking economy.\n */\ncontract CommunityFactory is ERC20Helper {\n\n    address immutable committee;\n    mapping (address => bool) public createdCommunity;\n\n    event CommunityCreated(address indexed creator, address indexed community, address communityToken);\n\n    constructor(address _committee) {\n        require(_committee != address(0), \"Invalid committee\");\n        committee = _committee;\n    }\n\n    // If communityToken == address(0), we would create a mintable token for cummunity by token factory,\n    // thus caller should give arguments bytes\n    function createCommunity (\n        bool isMintable,\n        address communityToken,\n        address communityTokenFactory,\n        bytes calldata tokenMeta,\n        address rewardCalculator,\n        bytes calldata distributionPolicy\n    ) external {\n        require(ICommittee(committee).verifyContract(rewardCalculator), 'UC'); // Unsupported calculator\n\n        // we would create a new mintable token for community\n        bool needGrantRole = false;\n        if (communityToken == address(0)){\n            needGrantRole = true;\n            isMintable = true;\n            require(ICommittee(committee).verifyContract(communityTokenFactory), 'UTC'); // Unsupported token factory\n            communityToken = ICommunityTokenFactory(communityTokenFactory).createCommunityToken(tokenMeta);\n        }\n\n        Community community = new Community(msg.sender, committee, communityToken, rewardCalculator, isMintable);\n       \n        if (needGrantRole){\n            // Token deployed by walnut need to grant mint role from community factory to sepecify community.\n            MintableERC20(communityToken).grantRole(MintableERC20(communityToken).MINTER_ROLE(), address(community));\n            // Token provided by user need user to grant mint role to community\n            // if user set isMintable to true,\n            // this action will be executed after this method completed.\n        }\n\n        if(ICommittee(committee).getFee('COMMUNITY') > 0){\n            require(ERC20(ICommittee(committee).getNut()).allowance(msg.sender, address(this)) >= ICommittee(committee).getFee('COMMUNITY'), \"need\");\n            lockERC20(ICommittee(committee).getNut(), msg.sender, ICommittee(committee).getTreasury(), ICommittee(committee).getFee('COMMUNITY'));\n            ICommittee(committee).updateLedger('COMMUNITY', address(community), address(0), msg.sender);\n        }\n\n        // set staking feast rewarad distribution distributionPolicy\n        ICalculator(rewardCalculator).setDistributionEra(address(community), distributionPolicy);\n\n        // add community to fee payment whitelist\n        ICommittee(committee).setFeePayer(address(community));\n\n        createdCommunity[address(community)] = true;\n\n        emit CommunityCreated(msg.sender, address(community), communityToken);\n    }\n}\n",
  "sourcePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol",
  "ast": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        11986
      ],
      "AccessControlEnumerable": [
        12111
      ],
      "ArbSys": [
        11427
      ],
      "Community": [
        2000
      ],
      "CommunityFactory": [
        2258
      ],
      "Context": [
        15470
      ],
      "ERC165": [
        15723
      ],
      "ERC20": [
        14798
      ],
      "ERC20Burnable": [
        14920
      ],
      "ERC20Helper": [
        2481
      ],
      "ERC20Pausable": [
        14957
      ],
      "ERC20PresetMinterPauser": [
        15118
      ],
      "EnumerableSet": [
        17631
      ],
      "IAccessControl": [
        12184
      ],
      "IAccessControlEnumerable": [
        12209
      ],
      "ICalculator": [
        11466
      ],
      "ICommittee": [
        11537
      ],
      "ICommunity": [
        11591
      ],
      "ICommunityTokenFactory": [
        11603
      ],
      "IERC165": [
        15735
      ],
      "IERC20": [
        14876
      ],
      "IERC20Metadata": [
        14982
      ],
      "IGauge": [
        11627
      ],
      "IPool": [
        11654
      ],
      "IPoolFactory": [
        11670
      ],
      "Math": [
        16601
      ],
      "MintableERC20": [
        7480
      ],
      "Ownable": [
        12322
      ],
      "Pausable": [
        12430
      ],
      "SafeMath": [
        16913
      ],
      "SignedMath": [
        17018
      ],
      "Strings": [
        15699
      ]
    },
    "id": 2259,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2002,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:2"
      },
      {
        "id": 2003,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/Community.sol",
        "file": "./Community.sol",
        "id": 2004,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 2001,
        "src": "91:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICalculator.sol",
        "file": "./interfaces/ICalculator.sol",
        "id": 2005,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 11467,
        "src": "117:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommittee.sol",
        "file": "./interfaces/ICommittee.sol",
        "id": 2006,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 11538,
        "src": "156:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunityTokenFactory.sol",
        "file": "./interfaces/ICommunityTokenFactory.sol",
        "id": 2007,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 11604,
        "src": "194:49:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/ERC20Helper.sol",
        "file": "./ERC20Helper.sol",
        "id": 2008,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 2482,
        "src": "244:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/community-token/MintableERC20.sol",
        "file": "./community-token/MintableERC20.sol",
        "id": 2009,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 7481,
        "src": "272:45:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2011,
              "name": "ERC20Helper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2481,
              "src": "503:11:2"
            },
            "id": 2012,
            "nodeType": "InheritanceSpecifier",
            "src": "503:11:2"
          }
        ],
        "contractDependencies": [
          2000,
          2481
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2010,
          "nodeType": "StructuredDocumentation",
          "src": "319:154:2",
          "text": " @dev Factory contract to create an StakingTemplate entity\n This is the entry contract that user start to create their own staking economy."
        },
        "fullyImplemented": true,
        "id": 2258,
        "linearizedBaseContracts": [
          2258,
          2481
        ],
        "name": "CommunityFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2014,
            "mutability": "immutable",
            "name": "committee",
            "nodeType": "VariableDeclaration",
            "scope": 2258,
            "src": "522:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2013,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "68a94b6e",
            "id": 2018,
            "mutability": "mutable",
            "name": "createdCommunity",
            "nodeType": "VariableDeclaration",
            "scope": 2258,
            "src": "555:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2017,
              "keyType": {
                "id": 2015,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "564:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "555:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2016,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "575:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2026,
            "name": "CommunityCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2026,
                  "src": "634:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2022,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 2026,
                  "src": "659:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2024,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "communityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2026,
                  "src": "686:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "633:76:2"
            },
            "src": "611:99:2"
          },
          {
            "body": {
              "id": 2045,
              "nodeType": "Block",
              "src": "748:103:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2032,
                          "name": "_committee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "766:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "788:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "780:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2033,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "780:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "780:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "766:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6d6d6974746565",
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "792:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5",
                          "typeString": "literal_string \"Invalid committee\""
                        },
                        "value": "Invalid committee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5",
                          "typeString": "literal_string \"Invalid committee\""
                        }
                      ],
                      "id": 2031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "758:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "758:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2040,
                  "nodeType": "ExpressionStatement",
                  "src": "758:54:2"
                },
                {
                  "expression": {
                    "id": 2043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2041,
                      "name": "committee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2014,
                      "src": "822:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2042,
                      "name": "_committee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2028,
                      "src": "834:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "822:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2044,
                  "nodeType": "ExpressionStatement",
                  "src": "822:22:2"
                }
              ]
            },
            "id": 2046,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "_committee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2046,
                  "src": "728:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:20:2"
            },
            "returnParameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:2"
            },
            "scope": 2258,
            "src": "716:135:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2256,
              "nodeType": "Block",
              "src": "1257:2032:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2066,
                            "name": "rewardCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2056,
                            "src": "1312:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2063,
                                "name": "committee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2014,
                                "src": "1286:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2062,
                              "name": "ICommittee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11537,
                              "src": "1275:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                "typeString": "type(contract ICommittee)"
                              }
                            },
                            "id": 2064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1275:21:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICommittee_$11537",
                              "typeString": "contract ICommittee"
                            }
                          },
                          "id": 2065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11522,
                          "src": "1275:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 2067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1275:54:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5543",
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1331:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527",
                          "typeString": "literal_string \"UC\""
                        },
                        "value": "UC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527",
                          "typeString": "literal_string \"UC\""
                        }
                      ],
                      "id": 2061,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1267:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:69:2"
                },
                {
                  "assignments": [
                    2072
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2072,
                      "mutability": "mutable",
                      "name": "needGrantRole",
                      "nodeType": "VariableDeclaration",
                      "scope": 2256,
                      "src": "1435:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2071,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1435:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2074,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1456:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1435:26:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2075,
                      "name": "communityToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "1475:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1501:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1493:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2076,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1493:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1493:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1475:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2109,
                  "nodeType": "IfStatement",
                  "src": "1471:335:2",
                  "trueBody": {
                    "id": 2108,
                    "nodeType": "Block",
                    "src": "1504:302:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 2083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2081,
                            "name": "needGrantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2072,
                            "src": "1518:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1534:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1518:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2084,
                        "nodeType": "ExpressionStatement",
                        "src": "1518:20:2"
                      },
                      {
                        "expression": {
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2085,
                            "name": "isMintable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2048,
                            "src": "1552:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1565:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1552:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2088,
                        "nodeType": "ExpressionStatement",
                        "src": "1552:17:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2094,
                                  "name": "communityTokenFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2052,
                                  "src": "1628:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2091,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2014,
                                      "src": "1602:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2090,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11537,
                                    "src": "1591:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 2092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1591:21:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$11537",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 2093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verifyContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11522,
                                "src": "1591:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 2095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1591:59:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "555443",
                              "id": 2096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1652:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f",
                                "typeString": "literal_string \"UTC\""
                              },
                              "value": "UTC"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f",
                                "typeString": "literal_string \"UTC\""
                              }
                            ],
                            "id": 2089,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1583:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1583:75:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2098,
                        "nodeType": "ExpressionStatement",
                        "src": "1583:75:2"
                      },
                      {
                        "expression": {
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2099,
                            "name": "communityToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "1701:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2104,
                                "name": "tokenMeta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2054,
                                "src": "1785:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2101,
                                    "name": "communityTokenFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2052,
                                    "src": "1741:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2100,
                                  "name": "ICommunityTokenFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11603,
                                  "src": "1718:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICommunityTokenFactory_$11603_$",
                                    "typeString": "type(contract ICommunityTokenFactory)"
                                  }
                                },
                                "id": 2102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1718:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICommunityTokenFactory_$11603",
                                  "typeString": "contract ICommunityTokenFactory"
                                }
                              },
                              "id": 2103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "createCommunityToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11602,
                              "src": "1718:66:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes memory) external returns (address)"
                              }
                            },
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1718:77:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1701:94:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2107,
                        "nodeType": "ExpressionStatement",
                        "src": "1701:94:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2112,
                      "mutability": "mutable",
                      "name": "community",
                      "nodeType": "VariableDeclaration",
                      "scope": 2256,
                      "src": "1816:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Community_$2000",
                        "typeString": "contract Community"
                      },
                      "typeName": {
                        "id": 2111,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2110,
                          "name": "Community",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2000,
                          "src": "1816:9:2"
                        },
                        "referencedDeclaration": 2000,
                        "src": "1816:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Community_$2000",
                          "typeString": "contract Community"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2123,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1852:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1852:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2118,
                        "name": "committee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "1864:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2119,
                        "name": "communityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "1875:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2120,
                        "name": "rewardCalculator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "1891:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2121,
                        "name": "isMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "1909:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1838:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$returns$_t_contract$_Community_$2000_$",
                        "typeString": "function (address,address,address,address,bool) payable returns (contract Community)"
                      },
                      "typeName": {
                        "id": 2114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2113,
                          "name": "Community",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2000,
                          "src": "1842:9:2"
                        },
                        "referencedDeclaration": 2000,
                        "src": "1842:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Community_$2000",
                          "typeString": "contract Community"
                        }
                      }
                    },
                    "id": 2122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:82:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Community_$2000",
                      "typeString": "contract Community"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1816:104:2"
                },
                {
                  "condition": {
                    "id": 2124,
                    "name": "needGrantRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2072,
                    "src": "1942:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2141,
                  "nodeType": "IfStatement",
                  "src": "1938:457:2",
                  "trueBody": {
                    "id": 2140,
                    "nodeType": "Block",
                    "src": "1956:439:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2130,
                                      "name": "communityToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2050,
                                      "src": "2134:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2129,
                                    "name": "MintableERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7480,
                                    "src": "2120:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MintableERC20_$7480_$",
                                      "typeString": "type(contract MintableERC20)"
                                    }
                                  },
                                  "id": 2131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2120:29:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MintableERC20_$7480",
                                    "typeString": "contract MintableERC20"
                                  }
                                },
                                "id": 2132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "MINTER_ROLE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7407,
                                "src": "2120:41:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                  "typeString": "function () view external returns (bytes32)"
                                }
                              },
                              "id": 2133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2120:43:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2136,
                                  "name": "community",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2112,
                                  "src": "2173:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Community_$2000",
                                    "typeString": "contract Community"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Community_$2000",
                                    "typeString": "contract Community"
                                  }
                                ],
                                "id": 2135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2165:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2134,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2165:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2165:18:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2126,
                                  "name": "communityToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2050,
                                  "src": "2094:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2125,
                                "name": "MintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7480,
                                "src": "2080:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MintableERC20_$7480_$",
                                  "typeString": "type(contract MintableERC20)"
                                }
                              },
                              "id": 2127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2080:29:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableERC20_$7480",
                                "typeString": "contract MintableERC20"
                              }
                            },
                            "id": 2128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11837,
                            "src": "2080:39:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2080:104:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2139,
                        "nodeType": "ExpressionStatement",
                        "src": "2080:104:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "hexValue": "434f4d4d554e495459",
                          "id": 2146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2437:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                            "typeString": "literal_string \"COMMUNITY\""
                          },
                          "value": "COMMUNITY"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                            "typeString": "literal_string \"COMMUNITY\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2143,
                              "name": "committee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2014,
                              "src": "2419:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2142,
                            "name": "ICommittee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11537,
                            "src": "2408:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                              "typeString": "type(contract ICommittee)"
                            }
                          },
                          "id": 2144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2408:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICommittee_$11537",
                            "typeString": "contract ICommittee"
                          }
                        },
                        "id": 2145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11482,
                        "src": "2408:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) view external returns (uint256)"
                        }
                      },
                      "id": 2147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2408:41:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2452:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2408:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2215,
                  "nodeType": "IfStatement",
                  "src": "2405:462:2",
                  "trueBody": {
                    "id": 2214,
                    "nodeType": "Block",
                    "src": "2454:413:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2159,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2524:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2160,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2524:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2163,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "2544:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CommunityFactory_$2258",
                                          "typeString": "contract CommunityFactory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CommunityFactory_$2258",
                                          "typeString": "contract CommunityFactory"
                                        }
                                      ],
                                      "id": 2162,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2536:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2161,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2536:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2536:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 2153,
                                                "name": "committee",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2014,
                                                "src": "2493:9:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 2152,
                                              "name": "ICommittee",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11537,
                                              "src": "2482:10:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                                "typeString": "type(contract ICommittee)"
                                              }
                                            },
                                            "id": 2154,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2482:21:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ICommittee_$11537",
                                              "typeString": "contract ICommittee"
                                            }
                                          },
                                          "id": 2155,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "getNut",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 11487,
                                          "src": "2482:28:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 2156,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2482:30:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2151,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14798,
                                      "src": "2476:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$14798_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 2157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2476:37:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$14798",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 2158,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14353,
                                  "src": "2476:47:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 2165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2476:74:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "434f4d4d554e495459",
                                    "id": 2170,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2583:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                      "typeString": "literal_string \"COMMUNITY\""
                                    },
                                    "value": "COMMUNITY"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                      "typeString": "literal_string \"COMMUNITY\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2167,
                                        "name": "committee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2014,
                                        "src": "2565:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2166,
                                      "name": "ICommittee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11537,
                                      "src": "2554:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                        "typeString": "type(contract ICommittee)"
                                      }
                                    },
                                    "id": 2168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2554:21:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommittee_$11537",
                                      "typeString": "contract ICommittee"
                                    }
                                  },
                                  "id": 2169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11482,
                                  "src": "2554:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (string memory) view external returns (uint256)"
                                  }
                                },
                                "id": 2171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2554:41:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2476:119:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e656564",
                              "id": 2173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2597:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934",
                                "typeString": "literal_string \"need\""
                              },
                              "value": "need"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934",
                                "typeString": "literal_string \"need\""
                              }
                            ],
                            "id": 2150,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2468:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2468:136:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2175,
                        "nodeType": "ExpressionStatement",
                        "src": "2468:136:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2178,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2014,
                                      "src": "2639:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2177,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11537,
                                    "src": "2628:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 2179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2628:21:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$11537",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 2180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getNut",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11487,
                                "src": "2628:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2628:30:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2182,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2660:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2660:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2185,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2014,
                                      "src": "2683:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2184,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11537,
                                    "src": "2672:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 2186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2672:21:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$11537",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 2187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getTreasury",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11492,
                                "src": "2672:33:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2672:35:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "434f4d4d554e495459",
                                  "id": 2193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2738:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                    "typeString": "literal_string \"COMMUNITY\""
                                  },
                                  "value": "COMMUNITY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                    "typeString": "literal_string \"COMMUNITY\""
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2190,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2014,
                                      "src": "2720:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2189,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11537,
                                    "src": "2709:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 2191,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2709:21:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$11537",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 2192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getFee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11482,
                                "src": "2709:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (string memory) view external returns (uint256)"
                                }
                              },
                              "id": 2194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2709:41:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2176,
                            "name": "lockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2311,
                            "src": "2618:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2618:133:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2196,
                        "nodeType": "ExpressionStatement",
                        "src": "2618:133:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "434f4d4d554e495459",
                              "id": 2201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2800:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                "typeString": "literal_string \"COMMUNITY\""
                              },
                              "value": "COMMUNITY"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2204,
                                  "name": "community",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2112,
                                  "src": "2821:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Community_$2000",
                                    "typeString": "contract Community"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Community_$2000",
                                    "typeString": "contract Community"
                                  }
                                ],
                                "id": 2203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2813:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2202,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2813:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2813:18:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2208,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2841:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2833:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2206,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2833:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2833:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2210,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2845:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2845:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                "typeString": "literal_string \"COMMUNITY\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2198,
                                  "name": "committee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2014,
                                  "src": "2776:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2197,
                                "name": "ICommittee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11537,
                                "src": "2765:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                  "typeString": "type(contract ICommittee)"
                                }
                              },
                              "id": 2199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2765:21:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICommittee_$11537",
                                "typeString": "contract ICommittee"
                              }
                            },
                            "id": 2200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateLedger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11508,
                            "src": "2765:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address,address,address) external"
                            }
                          },
                          "id": 2212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2765:91:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2213,
                        "nodeType": "ExpressionStatement",
                        "src": "2765:91:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2222,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "3003:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 2221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2995:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2220,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2995:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2995:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2224,
                        "name": "distributionPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2058,
                        "src": "3015:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2217,
                            "name": "rewardCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2056,
                            "src": "2958:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2216,
                          "name": "ICalculator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11466,
                          "src": "2946:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICalculator_$11466_$",
                            "typeString": "type(contract ICalculator)"
                          }
                        },
                        "id": 2218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2946:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICalculator_$11466",
                          "typeString": "contract ICalculator"
                        }
                      },
                      "id": 2219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDistributionEra",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11451,
                      "src": "2946:48:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2946:88:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "2946:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2233,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "3137:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3129:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2231,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3129:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3129:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2228,
                            "name": "committee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2014,
                            "src": "3106:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2227,
                          "name": "ICommittee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11537,
                          "src": "3095:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                            "typeString": "type(contract ICommittee)"
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3095:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommittee_$11537",
                          "typeString": "contract ICommittee"
                        }
                      },
                      "id": 2230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFeePayer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11475,
                      "src": "3095:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3095:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2236,
                  "nodeType": "ExpressionStatement",
                  "src": "3095:53:2"
                },
                {
                  "expression": {
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2237,
                        "name": "createdCommunity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2018,
                        "src": "3159:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2242,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 2240,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "3184:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 2239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3176:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2238,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3176:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3176:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3159:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3198:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3159:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
                  "src": "3159:43:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2247,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3235:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3235:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2251,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "3255:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3247:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2249,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3247:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3247:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2253,
                        "name": "communityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "3267:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2246,
                      "name": "CommunityCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2026,
                      "src": "3218:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 2254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3218:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2255,
                  "nodeType": "EmitStatement",
                  "src": "3213:69:2"
                }
              ]
            },
            "functionSelector": "cc83eac5",
            "id": 2257,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCommunity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "isMintable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1044:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2050,
                  "mutability": "mutable",
                  "name": "communityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1069:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "mutability": "mutable",
                  "name": "communityTokenFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1101:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2054,
                  "mutability": "mutable",
                  "name": "tokenMeta",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1140:24:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "mutability": "mutable",
                  "name": "rewardCalculator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1174:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2058,
                  "mutability": "mutable",
                  "name": "distributionPolicy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1208:33:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2057,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1034:213:2"
            },
            "returnParameters": {
              "id": 2060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:0:2"
            },
            "scope": 2258,
            "src": "1009:2280:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2259,
        "src": "474:2817:2"
      }
    ],
    "src": "33:3259:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/CommunityFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        11986
      ],
      "AccessControlEnumerable": [
        12111
      ],
      "ArbSys": [
        11427
      ],
      "Community": [
        2000
      ],
      "CommunityFactory": [
        2258
      ],
      "Context": [
        15470
      ],
      "ERC165": [
        15723
      ],
      "ERC20": [
        14798
      ],
      "ERC20Burnable": [
        14920
      ],
      "ERC20Helper": [
        2481
      ],
      "ERC20Pausable": [
        14957
      ],
      "ERC20PresetMinterPauser": [
        15118
      ],
      "EnumerableSet": [
        17631
      ],
      "IAccessControl": [
        12184
      ],
      "IAccessControlEnumerable": [
        12209
      ],
      "ICalculator": [
        11466
      ],
      "ICommittee": [
        11537
      ],
      "ICommunity": [
        11591
      ],
      "ICommunityTokenFactory": [
        11603
      ],
      "IERC165": [
        15735
      ],
      "IERC20": [
        14876
      ],
      "IERC20Metadata": [
        14982
      ],
      "IGauge": [
        11627
      ],
      "IPool": [
        11654
      ],
      "IPoolFactory": [
        11670
      ],
      "Math": [
        16601
      ],
      "MintableERC20": [
        7480
      ],
      "Ownable": [
        12322
      ],
      "Pausable": [
        12430
      ],
      "SafeMath": [
        16913
      ],
      "SignedMath": [
        17018
      ],
      "Strings": [
        15699
      ]
    },
    "id": 2259,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2002,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:2"
      },
      {
        "id": 2003,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/Community.sol",
        "file": "./Community.sol",
        "id": 2004,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 2001,
        "src": "91:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICalculator.sol",
        "file": "./interfaces/ICalculator.sol",
        "id": 2005,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 11467,
        "src": "117:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommittee.sol",
        "file": "./interfaces/ICommittee.sol",
        "id": 2006,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 11538,
        "src": "156:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/interfaces/ICommunityTokenFactory.sol",
        "file": "./interfaces/ICommunityTokenFactory.sol",
        "id": 2007,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 11604,
        "src": "194:49:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/ERC20Helper.sol",
        "file": "./ERC20Helper.sol",
        "id": 2008,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 2482,
        "src": "244:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wangxi/work/Walnut-V2/nutbox-contract/contracts/community-token/MintableERC20.sol",
        "file": "./community-token/MintableERC20.sol",
        "id": 2009,
        "nodeType": "ImportDirective",
        "scope": 2259,
        "sourceUnit": 7481,
        "src": "272:45:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2011,
              "name": "ERC20Helper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2481,
              "src": "503:11:2"
            },
            "id": 2012,
            "nodeType": "InheritanceSpecifier",
            "src": "503:11:2"
          }
        ],
        "contractDependencies": [
          2000,
          2481
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2010,
          "nodeType": "StructuredDocumentation",
          "src": "319:154:2",
          "text": " @dev Factory contract to create an StakingTemplate entity\n This is the entry contract that user start to create their own staking economy."
        },
        "fullyImplemented": true,
        "id": 2258,
        "linearizedBaseContracts": [
          2258,
          2481
        ],
        "name": "CommunityFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2014,
            "mutability": "immutable",
            "name": "committee",
            "nodeType": "VariableDeclaration",
            "scope": 2258,
            "src": "522:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2013,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "68a94b6e",
            "id": 2018,
            "mutability": "mutable",
            "name": "createdCommunity",
            "nodeType": "VariableDeclaration",
            "scope": 2258,
            "src": "555:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2017,
              "keyType": {
                "id": 2015,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "564:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "555:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2016,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "575:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2026,
            "name": "CommunityCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2026,
                  "src": "634:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2022,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "community",
                  "nodeType": "VariableDeclaration",
                  "scope": 2026,
                  "src": "659:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2024,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "communityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2026,
                  "src": "686:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "633:76:2"
            },
            "src": "611:99:2"
          },
          {
            "body": {
              "id": 2045,
              "nodeType": "Block",
              "src": "748:103:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2032,
                          "name": "_committee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "766:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "788:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "780:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2033,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "780:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "780:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "766:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6d6d6974746565",
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "792:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5",
                          "typeString": "literal_string \"Invalid committee\""
                        },
                        "value": "Invalid committee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bef7e6a5eea4288202d4c1c8eef0c7b4d819eeedd5fde7da02a2474274f76f5",
                          "typeString": "literal_string \"Invalid committee\""
                        }
                      ],
                      "id": 2031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "758:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "758:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2040,
                  "nodeType": "ExpressionStatement",
                  "src": "758:54:2"
                },
                {
                  "expression": {
                    "id": 2043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2041,
                      "name": "committee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2014,
                      "src": "822:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2042,
                      "name": "_committee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2028,
                      "src": "834:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "822:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2044,
                  "nodeType": "ExpressionStatement",
                  "src": "822:22:2"
                }
              ]
            },
            "id": 2046,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "_committee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2046,
                  "src": "728:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:20:2"
            },
            "returnParameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:2"
            },
            "scope": 2258,
            "src": "716:135:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2256,
              "nodeType": "Block",
              "src": "1257:2032:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2066,
                            "name": "rewardCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2056,
                            "src": "1312:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2063,
                                "name": "committee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2014,
                                "src": "1286:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2062,
                              "name": "ICommittee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11537,
                              "src": "1275:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                "typeString": "type(contract ICommittee)"
                              }
                            },
                            "id": 2064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1275:21:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICommittee_$11537",
                              "typeString": "contract ICommittee"
                            }
                          },
                          "id": 2065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11522,
                          "src": "1275:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 2067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1275:54:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5543",
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1331:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527",
                          "typeString": "literal_string \"UC\""
                        },
                        "value": "UC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_024b0b255bf8d6869d7d1e61f2cc997345035476bfbd200addff7e9f7171b527",
                          "typeString": "literal_string \"UC\""
                        }
                      ],
                      "id": 2061,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1267:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:69:2"
                },
                {
                  "assignments": [
                    2072
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2072,
                      "mutability": "mutable",
                      "name": "needGrantRole",
                      "nodeType": "VariableDeclaration",
                      "scope": 2256,
                      "src": "1435:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2071,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1435:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2074,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1456:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1435:26:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2075,
                      "name": "communityToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "1475:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1501:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1493:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2076,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1493:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1493:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1475:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2109,
                  "nodeType": "IfStatement",
                  "src": "1471:335:2",
                  "trueBody": {
                    "id": 2108,
                    "nodeType": "Block",
                    "src": "1504:302:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 2083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2081,
                            "name": "needGrantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2072,
                            "src": "1518:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1534:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1518:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2084,
                        "nodeType": "ExpressionStatement",
                        "src": "1518:20:2"
                      },
                      {
                        "expression": {
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2085,
                            "name": "isMintable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2048,
                            "src": "1552:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1565:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1552:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2088,
                        "nodeType": "ExpressionStatement",
                        "src": "1552:17:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2094,
                                  "name": "communityTokenFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2052,
                                  "src": "1628:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2091,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2014,
                                      "src": "1602:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2090,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11537,
                                    "src": "1591:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 2092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1591:21:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$11537",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 2093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verifyContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11522,
                                "src": "1591:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 2095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1591:59:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "555443",
                              "id": 2096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1652:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f",
                                "typeString": "literal_string \"UTC\""
                              },
                              "value": "UTC"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1342d6bae5996559e1ee76e855c6ae6b97405b44a7834be9f805f0b51676713f",
                                "typeString": "literal_string \"UTC\""
                              }
                            ],
                            "id": 2089,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1583:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1583:75:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2098,
                        "nodeType": "ExpressionStatement",
                        "src": "1583:75:2"
                      },
                      {
                        "expression": {
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2099,
                            "name": "communityToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "1701:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2104,
                                "name": "tokenMeta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2054,
                                "src": "1785:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2101,
                                    "name": "communityTokenFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2052,
                                    "src": "1741:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2100,
                                  "name": "ICommunityTokenFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11603,
                                  "src": "1718:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICommunityTokenFactory_$11603_$",
                                    "typeString": "type(contract ICommunityTokenFactory)"
                                  }
                                },
                                "id": 2102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1718:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICommunityTokenFactory_$11603",
                                  "typeString": "contract ICommunityTokenFactory"
                                }
                              },
                              "id": 2103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "createCommunityToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11602,
                              "src": "1718:66:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes memory) external returns (address)"
                              }
                            },
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1718:77:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1701:94:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2107,
                        "nodeType": "ExpressionStatement",
                        "src": "1701:94:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2112,
                      "mutability": "mutable",
                      "name": "community",
                      "nodeType": "VariableDeclaration",
                      "scope": 2256,
                      "src": "1816:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Community_$2000",
                        "typeString": "contract Community"
                      },
                      "typeName": {
                        "id": 2111,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2110,
                          "name": "Community",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2000,
                          "src": "1816:9:2"
                        },
                        "referencedDeclaration": 2000,
                        "src": "1816:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Community_$2000",
                          "typeString": "contract Community"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2123,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1852:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1852:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2118,
                        "name": "committee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "1864:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2119,
                        "name": "communityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "1875:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2120,
                        "name": "rewardCalculator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "1891:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2121,
                        "name": "isMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "1909:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1838:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$returns$_t_contract$_Community_$2000_$",
                        "typeString": "function (address,address,address,address,bool) payable returns (contract Community)"
                      },
                      "typeName": {
                        "id": 2114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2113,
                          "name": "Community",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2000,
                          "src": "1842:9:2"
                        },
                        "referencedDeclaration": 2000,
                        "src": "1842:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Community_$2000",
                          "typeString": "contract Community"
                        }
                      }
                    },
                    "id": 2122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:82:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Community_$2000",
                      "typeString": "contract Community"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1816:104:2"
                },
                {
                  "condition": {
                    "id": 2124,
                    "name": "needGrantRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2072,
                    "src": "1942:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2141,
                  "nodeType": "IfStatement",
                  "src": "1938:457:2",
                  "trueBody": {
                    "id": 2140,
                    "nodeType": "Block",
                    "src": "1956:439:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2130,
                                      "name": "communityToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2050,
                                      "src": "2134:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2129,
                                    "name": "MintableERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7480,
                                    "src": "2120:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MintableERC20_$7480_$",
                                      "typeString": "type(contract MintableERC20)"
                                    }
                                  },
                                  "id": 2131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2120:29:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MintableERC20_$7480",
                                    "typeString": "contract MintableERC20"
                                  }
                                },
                                "id": 2132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "MINTER_ROLE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7407,
                                "src": "2120:41:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                  "typeString": "function () view external returns (bytes32)"
                                }
                              },
                              "id": 2133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2120:43:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2136,
                                  "name": "community",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2112,
                                  "src": "2173:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Community_$2000",
                                    "typeString": "contract Community"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Community_$2000",
                                    "typeString": "contract Community"
                                  }
                                ],
                                "id": 2135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2165:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2134,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2165:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2165:18:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2126,
                                  "name": "communityToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2050,
                                  "src": "2094:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2125,
                                "name": "MintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7480,
                                "src": "2080:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MintableERC20_$7480_$",
                                  "typeString": "type(contract MintableERC20)"
                                }
                              },
                              "id": 2127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2080:29:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableERC20_$7480",
                                "typeString": "contract MintableERC20"
                              }
                            },
                            "id": 2128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11837,
                            "src": "2080:39:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2080:104:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2139,
                        "nodeType": "ExpressionStatement",
                        "src": "2080:104:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "hexValue": "434f4d4d554e495459",
                          "id": 2146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2437:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                            "typeString": "literal_string \"COMMUNITY\""
                          },
                          "value": "COMMUNITY"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                            "typeString": "literal_string \"COMMUNITY\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2143,
                              "name": "committee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2014,
                              "src": "2419:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2142,
                            "name": "ICommittee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11537,
                            "src": "2408:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                              "typeString": "type(contract ICommittee)"
                            }
                          },
                          "id": 2144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2408:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICommittee_$11537",
                            "typeString": "contract ICommittee"
                          }
                        },
                        "id": 2145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11482,
                        "src": "2408:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) view external returns (uint256)"
                        }
                      },
                      "id": 2147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2408:41:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2452:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2408:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2215,
                  "nodeType": "IfStatement",
                  "src": "2405:462:2",
                  "trueBody": {
                    "id": 2214,
                    "nodeType": "Block",
                    "src": "2454:413:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2159,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2524:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2160,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2524:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 2163,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "2544:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CommunityFactory_$2258",
                                          "typeString": "contract CommunityFactory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CommunityFactory_$2258",
                                          "typeString": "contract CommunityFactory"
                                        }
                                      ],
                                      "id": 2162,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2536:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2161,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2536:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2536:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 2153,
                                                "name": "committee",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2014,
                                                "src": "2493:9:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 2152,
                                              "name": "ICommittee",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11537,
                                              "src": "2482:10:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                                "typeString": "type(contract ICommittee)"
                                              }
                                            },
                                            "id": 2154,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2482:21:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ICommittee_$11537",
                                              "typeString": "contract ICommittee"
                                            }
                                          },
                                          "id": 2155,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "getNut",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 11487,
                                          "src": "2482:28:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 2156,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2482:30:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2151,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14798,
                                      "src": "2476:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$14798_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 2157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2476:37:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$14798",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 2158,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14353,
                                  "src": "2476:47:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 2165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2476:74:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "434f4d4d554e495459",
                                    "id": 2170,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2583:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                      "typeString": "literal_string \"COMMUNITY\""
                                    },
                                    "value": "COMMUNITY"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                      "typeString": "literal_string \"COMMUNITY\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2167,
                                        "name": "committee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2014,
                                        "src": "2565:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2166,
                                      "name": "ICommittee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11537,
                                      "src": "2554:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                        "typeString": "type(contract ICommittee)"
                                      }
                                    },
                                    "id": 2168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2554:21:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICommittee_$11537",
                                      "typeString": "contract ICommittee"
                                    }
                                  },
                                  "id": 2169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11482,
                                  "src": "2554:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (string memory) view external returns (uint256)"
                                  }
                                },
                                "id": 2171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2554:41:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2476:119:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e656564",
                              "id": 2173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2597:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934",
                                "typeString": "literal_string \"need\""
                              },
                              "value": "need"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e20530883490c80aab30693634c379a4e647f5fb166bd107bd1a79756fb8934",
                                "typeString": "literal_string \"need\""
                              }
                            ],
                            "id": 2150,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2468:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2468:136:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2175,
                        "nodeType": "ExpressionStatement",
                        "src": "2468:136:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2178,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2014,
                                      "src": "2639:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2177,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11537,
                                    "src": "2628:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 2179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2628:21:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$11537",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 2180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getNut",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11487,
                                "src": "2628:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2628:30:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2182,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2660:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2660:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2185,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2014,
                                      "src": "2683:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2184,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11537,
                                    "src": "2672:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 2186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2672:21:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$11537",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 2187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getTreasury",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11492,
                                "src": "2672:33:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2672:35:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "434f4d4d554e495459",
                                  "id": 2193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2738:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                    "typeString": "literal_string \"COMMUNITY\""
                                  },
                                  "value": "COMMUNITY"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                    "typeString": "literal_string \"COMMUNITY\""
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2190,
                                      "name": "committee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2014,
                                      "src": "2720:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2189,
                                    "name": "ICommittee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11537,
                                    "src": "2709:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                      "typeString": "type(contract ICommittee)"
                                    }
                                  },
                                  "id": 2191,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2709:21:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICommittee_$11537",
                                    "typeString": "contract ICommittee"
                                  }
                                },
                                "id": 2192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getFee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11482,
                                "src": "2709:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (string memory) view external returns (uint256)"
                                }
                              },
                              "id": 2194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2709:41:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2176,
                            "name": "lockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2311,
                            "src": "2618:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2618:133:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2196,
                        "nodeType": "ExpressionStatement",
                        "src": "2618:133:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "434f4d4d554e495459",
                              "id": 2201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2800:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                "typeString": "literal_string \"COMMUNITY\""
                              },
                              "value": "COMMUNITY"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2204,
                                  "name": "community",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2112,
                                  "src": "2821:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Community_$2000",
                                    "typeString": "contract Community"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Community_$2000",
                                    "typeString": "contract Community"
                                  }
                                ],
                                "id": 2203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2813:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2202,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2813:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2813:18:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2208,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2841:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2833:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2206,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2833:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2833:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2210,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2845:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2845:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e94d78b6d8fb99b2c21131eb4552924a60f564d8515a3cc90ef300fc9735c074",
                                "typeString": "literal_string \"COMMUNITY\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2198,
                                  "name": "committee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2014,
                                  "src": "2776:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2197,
                                "name": "ICommittee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11537,
                                "src": "2765:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                                  "typeString": "type(contract ICommittee)"
                                }
                              },
                              "id": 2199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2765:21:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICommittee_$11537",
                                "typeString": "contract ICommittee"
                              }
                            },
                            "id": 2200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateLedger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11508,
                            "src": "2765:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address,address,address) external"
                            }
                          },
                          "id": 2212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2765:91:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2213,
                        "nodeType": "ExpressionStatement",
                        "src": "2765:91:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2222,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "3003:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 2221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2995:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2220,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2995:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2995:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2224,
                        "name": "distributionPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2058,
                        "src": "3015:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2217,
                            "name": "rewardCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2056,
                            "src": "2958:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2216,
                          "name": "ICalculator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11466,
                          "src": "2946:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICalculator_$11466_$",
                            "typeString": "type(contract ICalculator)"
                          }
                        },
                        "id": 2218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2946:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICalculator_$11466",
                          "typeString": "contract ICalculator"
                        }
                      },
                      "id": 2219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDistributionEra",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11451,
                      "src": "2946:48:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2946:88:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "2946:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2233,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "3137:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3129:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2231,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3129:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3129:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2228,
                            "name": "committee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2014,
                            "src": "3106:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2227,
                          "name": "ICommittee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11537,
                          "src": "3095:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICommittee_$11537_$",
                            "typeString": "type(contract ICommittee)"
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3095:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICommittee_$11537",
                          "typeString": "contract ICommittee"
                        }
                      },
                      "id": 2230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFeePayer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11475,
                      "src": "3095:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3095:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2236,
                  "nodeType": "ExpressionStatement",
                  "src": "3095:53:2"
                },
                {
                  "expression": {
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2237,
                        "name": "createdCommunity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2018,
                        "src": "3159:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2242,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 2240,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "3184:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 2239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3176:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2238,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3176:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3176:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3159:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3198:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3159:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
                  "src": "3159:43:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2247,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3235:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3235:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2251,
                            "name": "community",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "3255:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Community_$2000",
                              "typeString": "contract Community"
                            }
                          ],
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3247:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2249,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3247:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3247:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2253,
                        "name": "communityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "3267:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2246,
                      "name": "CommunityCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2026,
                      "src": "3218:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 2254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3218:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2255,
                  "nodeType": "EmitStatement",
                  "src": "3213:69:2"
                }
              ]
            },
            "functionSelector": "cc83eac5",
            "id": 2257,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCommunity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "isMintable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1044:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2050,
                  "mutability": "mutable",
                  "name": "communityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1069:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "mutability": "mutable",
                  "name": "communityTokenFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1101:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2054,
                  "mutability": "mutable",
                  "name": "tokenMeta",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1140:24:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "mutability": "mutable",
                  "name": "rewardCalculator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1174:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2058,
                  "mutability": "mutable",
                  "name": "distributionPolicy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1208:33:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2057,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1034:213:2"
            },
            "returnParameters": {
              "id": 2060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:0:2"
            },
            "scope": 2258,
            "src": "1009:2280:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2259,
        "src": "474:2817:2"
      }
    ],
    "src": "33:3259:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2024-06-25T04:23:12.190Z",
  "devdoc": {
    "details": "Factory contract to create an StakingTemplate entity This is the entry contract that user start to create their own staking economy.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}