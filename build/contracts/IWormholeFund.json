{
  "contractName": "IWormholeFund",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "twitterId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "pushAward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"twitterId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pushAward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pushAward(uint256,address,uint256)\":{\"details\":\"Add an unclaimed reward, this method can only be called by the Task contract. When calling, the corresponding Token must be transferred.\",\"params\":{\"amount\":\"reward amount\",\"token\":\"reward token address\",\"twitterId\":\"user twitter id\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IWormholeFund.sol\":\"IWormholeFund\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IWormholeFund.sol\":{\"keccak256\":\"0x99c68973a6bcc2565cd57812bc839b0698ad5a7ffc1ca8e98683a0ee1b7cb018\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1b874478f2e676265adcc3c1b6d215caf06f106769fda0c63f18caa4478fa79\",\"dweb:/ipfs/QmWFMvRVZn9PUVMPxri2DbLBJkbTh4d6y1u9j72M54e1hv\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IWormholeFund {\n    /**\n    @dev Add an unclaimed reward, this method can only be called by the Task contract.\n    When calling, the corresponding Token must be transferred.\n    @param twitterId user twitter id\n    @param token reward token address\n    @param amount reward amount\n    */\n    function pushAward(\n        uint256 twitterId,\n        address token,\n        uint256 amount\n    ) external;\n}",
  "sourcePath": "/Users/necklace/work/nutbox/nutbox-contract/contracts/interfaces/IWormholeFund.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IWormholeFund.sol",
    "exportedSymbols": {
      "IWormholeFund": [
        14780
      ]
    },
    "id": 14781,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14769,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:54"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IWormholeFund",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 14780,
        "linearizedBaseContracts": [
          14780
        ],
        "name": "IWormholeFund",
        "nameLocation": "67:13:54",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 14770,
              "nodeType": "StructuredDocumentation",
              "src": "87:267:54",
              "text": "@dev Add an unclaimed reward, this method can only be called by the Task contract.\nWhen calling, the corresponding Token must be transferred.\n@param twitterId user twitter id\n@param token reward token address\n@param amount reward amount"
            },
            "functionSelector": "b34d3353",
            "id": 14779,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pushAward",
            "nameLocation": "368:9:54",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14772,
                  "mutability": "mutable",
                  "name": "twitterId",
                  "nameLocation": "395:9:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 14779,
                  "src": "387:17:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14774,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "422:5:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 14779,
                  "src": "414:13:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14776,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "445:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 14779,
                  "src": "437:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "377:80:54"
            },
            "returnParameters": {
              "id": 14778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:54"
            },
            "scope": 14780,
            "src": "359:108:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14781,
        "src": "57:412:54",
        "usedErrors": []
      }
    ],
    "src": "32:437:54"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-04-13T15:38:45.753Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "pushAward(uint256,address,uint256)": {
        "details": "Add an unclaimed reward, this method can only be called by the Task contract. When calling, the corresponding Token must be transferred.",
        "params": {
          "amount": "reward amount",
          "token": "reward token address",
          "twitterId": "user twitter id"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}