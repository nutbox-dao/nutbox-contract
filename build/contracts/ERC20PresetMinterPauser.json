{
  "contractName": "ERC20PresetMinterPauser",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC20} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts. _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":\"ERC20PresetMinterPauser\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001f4838038062001f488339810160408190526200003491620003ce565b8151829082906200004d9060059060208501906200027d565b508051620000639060069060208401906200027d565b50506007805460ff191690555062000086600062000080620000ec565b620000f0565b620000b57f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a662000080620000ec565b620000e47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a62000080620000ec565b5050620004ba565b3390565b620000fc828262000100565b5050565b6200011782826200014360201b620008321760201c565b60008281526001602090815260409091206200013e918390620008b7620001cd821b17901c565b505050565b6200014f8282620001ed565b620000fc576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905562000189620000ec565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001e4836001600160a01b03841662000216565b90505b92915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600062000224838362000265565b6200025c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001e7565b506000620001e7565b60009081526001919091016020526040902054151590565b8280546200028b9062000435565b90600052602060002090601f016020900481019282620002af5760008555620002fa565b82601f10620002ca57805160ff1916838001178555620002fa565b82800160010185558215620002fa579182015b82811115620002fa578251825591602001919060010190620002dd565b50620003089291506200030c565b5090565b5b808211156200030857600081556001016200030d565b600082601f83011262000334578081fd5b81516001600160401b03808211156200035157620003516200048b565b6040516020601f8401601f19168201810183811183821017156200037957620003796200048b565b604052838252858401810187101562000390578485fd5b8492505b83831015620003b3578583018101518284018201529182019162000394565b83831115620003c457848185840101525b5095945050505050565b60008060408385031215620003e1578182fd5b82516001600160401b0380821115620003f8578384fd5b620004068683870162000323565b935060208501519150808211156200041c578283fd5b506200042b8582860162000323565b9150509250929050565b6002810460018216806200044a57607f821691505b6020821081141562000485577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a7e80620004ca6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d539139314610385578063d547741f1461038d578063dd62ed3e146103a0578063e63ab1e9146103b3576101c4565b8063a457c2d71461034c578063a9059cbb1461035f578063ca15c87314610372576101c4565b80639010d07c116100d35780639010d07c1461030957806391d148541461032957806395d89b411461033c578063a217fddf14610344576101c4565b806370a08231146102db57806379cc6790146102ee5780638456cb5914610301576101c4565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102a557806340c10f19146102ad57806342966c68146102c05780635c975abb146102d3576101c4565b8063313ce5671461026a57806336568abe1461027f5780633950935114610292576101c4565b806318160ddd116101a257806318160ddd1461021a57806323b872dd1461022f578063248a9ca3146102425780632f2ff15d14610255576101c4565b806301ffc9a7146101c957806306fdde03146101f2578063095ea7b314610207575b600080fd5b6101dc6101d73660046113a0565b6103bb565b6040516101e99190611451565b60405180910390f35b6101fa6103e8565b6040516101e99190611465565b6101dc61021536600461131c565b61047a565b61022261049e565b6040516101e9919061145c565b6101dc61023d3660046112e1565b6104a4565b610222610250366004611345565b6104d2565b61026861026336600461135d565b6104e7565b005b610272610508565b6040516101e99190611958565b61026861028d36600461135d565b61050d565b6101dc6102a036600461131c565b61055c565b610268610588565b6102686102bb36600461131c565b6105da565b6102686102ce366004611345565b61062c565b6101dc610640565b6102226102e9366004611295565b610649565b6102686102fc36600461131c565b610664565b610268610680565b61031c61031736600461137f565b6106d0565b6040516101e9919061143d565b6101dc61033736600461135d565b6106ef565b6101fa610718565b610222610727565b6101dc61035a36600461131c565b61072c565b6101dc61036d36600461131c565b610774565b610222610380366004611345565b61078c565b6102226107a3565b61026861039b36600461135d565b6107c7565b6102226103ae3660046112af565b6107e3565b61022261080e565b60006001600160e01b03198216635a05180f60e01b14806103e057506103e0826108cc565b90505b919050565b6060600580546103f7906119f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610423906119f7565b80156104705780601f1061044557610100808354040283529160200191610470565b820191906000526020600020905b81548152906001019060200180831161045357829003601f168201915b5050505050905090565b6000806104856108f1565b90506104928185856108f5565b60019150505b92915050565b60045490565b6000806104af6108f1565b90506104bc8582856109a9565b6104c78585856109f3565b506001949350505050565b60009081526020819052604090206001015490565b6104f0826104d2565b6104f981610af4565b6105038383610b05565b505050565b601290565b6105156108f1565b6001600160a01b0316816001600160a01b03161461054e5760405162461bcd60e51b815260040161054590611888565b60405180910390fd5b6105588282610b27565b5050565b6000806105676108f1565b905061049281858561057985896107e3565b6105839190611966565b6108f5565b6105b47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6103376108f1565b6105d05760405162461bcd60e51b815260040161054590611580565b6105d8610b49565b565b6106067f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66103376108f1565b6106225760405162461bcd60e51b8152600401610545906116c6565b6105588282610b9b565b61063d6106376108f1565b82610c45565b50565b60075460ff1690565b6001600160a01b031660009081526002602052604090205490565b610676826106706108f1565b836109a9565b6105588282610c45565b6106ac7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6103376108f1565b6106c85760405162461bcd60e51b8152600401610545906117e6565b6105d8610d1c565b60008281526001602052604081206106e89083610d5a565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546103f7906119f7565b600081565b6000806107376108f1565b9050600061074582866107e3565b9050838110156107675760405162461bcd60e51b815260040161054590611843565b6104c782868684036108f5565b60008061077f6108f1565b90506104928185856109f3565b60008181526001602052604081206103e090610d66565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107d0826104d2565b6107d981610af4565b6105038383610b27565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b61083c82826106ef565b610558576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556108736108f1565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006106e8836001600160a01b038416610d71565b60006001600160e01b03198216637965db0b60e01b14806103e057506103e082610dbb565b3390565b6001600160a01b03831661091b5760405162461bcd60e51b8152600401610545906117a2565b6001600160a01b0382166109415760405162461bcd60e51b8152600401610545906115dd565b6001600160a01b0380841660008181526003602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061099c90859061145c565b60405180910390a3505050565b60006109b584846107e3565b905060001981146109ed57818110156109e05760405162461bcd60e51b81526004016105459061161f565b6109ed84848484036108f5565b50505050565b6001600160a01b038316610a195760405162461bcd60e51b81526004016105459061175d565b6001600160a01b038216610a3f5760405162461bcd60e51b8152600401610545906114cd565b610a4a838383610dd4565b6001600160a01b03831660009081526002602052604090205481811015610a835760405162461bcd60e51b815260040161054590611656565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ae190869061145c565b60405180910390a36109ed848484610503565b61063d81610b006108f1565b610ddf565b610b0f8282610832565b600082815260016020526040902061050390826108b7565b610b318282610e38565b60008281526001602052604090206105039082610ebb565b610b51610ed0565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610b846108f1565b604051610b91919061143d565b60405180910390a1565b6001600160a01b038216610bc15760405162461bcd60e51b8152600401610545906118d7565b610bcd60008383610dd4565b8060046000828254610bdf9190611966565b90915550506001600160a01b038216600081815260026020526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c3190859061145c565b60405180910390a361055860008383610503565b6001600160a01b038216610c6b5760405162461bcd60e51b81526004016105459061171c565b610c7782600083610dd4565b6001600160a01b03821660009081526002602052604090205481811015610cb05760405162461bcd60e51b81526004016105459061153e565b6001600160a01b0383166000818152600260205260408082208585039055600480548690039055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d0890869061145c565b60405180910390a361050383600084610503565b610d24610ef4565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b846108f1565b60006106e88383610f19565b60006103e082610f51565b6000610d7d8383610f55565b610db357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610498565b506000610498565b6001600160e01b031981166301ffc9a760e01b14919050565b610503838383610f6d565b610de982826106ef565b61055857610df681610f9d565b610e01836020610faf565b604051602001610e129291906113c8565b60408051601f198184030181529082905262461bcd60e51b825261054591600401611465565b610e4282826106ef565b15610558576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610e776108f1565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006106e8836001600160a01b038416611161565b610ed8610640565b6105d85760405162461bcd60e51b815260040161054590611510565b610efc610640565b156105d85760405162461bcd60e51b81526004016105459061169c565b6000826000018281548110610f3e57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b610f78838383610503565b610f80610640565b156105035760405162461bcd60e51b81526004016105459061190e565b60606103e06001600160a01b03831660145b60606000610fbe83600261197e565b610fc9906002611966565b67ffffffffffffffff811115610fef57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611019576020820181803683370190505b509050600360fc1b8160008151811061104257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061107f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006110a384600261197e565b6110ae906001611966565b90505b6001811115611142576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106110f057634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061111457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361113b816119e0565b90506110b1565b5083156106e85760405162461bcd60e51b815260040161054590611498565b6000818152600183016020526040812054801561127457600061118560018361199d565b85549091506000906111999060019061199d565b905081811461121a5760008660000182815481106111c757634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106111f857634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b855486908061123957634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610498565b6000915050610498565b80356001600160a01b03811681146103e357600080fd5b6000602082840312156112a6578081fd5b6106e88261127e565b600080604083850312156112c1578081fd5b6112ca8361127e565b91506112d86020840161127e565b90509250929050565b6000806000606084860312156112f5578081fd5b6112fe8461127e565b925061130c6020850161127e565b9150604084013590509250925092565b6000806040838503121561132e578182fd5b6113378361127e565b946020939093013593505050565b600060208284031215611356578081fd5b5035919050565b6000806040838503121561136f578182fd5b823591506112d86020840161127e565b60008060408385031215611391578182fd5b50508035926020909101359150565b6000602082840312156113b1578081fd5b81356001600160e01b0319811681146106e8578182fd5b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516114008160178501602088016119b4565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516114318160288401602088016119b4565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b60006020825282518060208401526114848160408501602087016119b4565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526039908201527f45524332305072657365744d696e7465725061757365723a206d75737420686160408201527f76652070617573657220726f6c6520746f20756e706175736500000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526036908201527f45524332305072657365744d696e7465725061757365723a206d7573742068616040820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526037908201527f45524332305072657365744d696e7465725061757365723a206d75737420686160408201527f76652070617573657220726f6c6520746f207061757365000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b60ff91909116815260200190565b6000821982111561197957611979611a32565b500190565b600081600019048311821515161561199857611998611a32565b500290565b6000828210156119af576119af611a32565b500390565b60005b838110156119cf5781810151838201526020016119b7565b838111156109ed5750506000910152565b6000816119ef576119ef611a32565b506000190190565b600281046001821680611a0b57607f821691505b60208210811415611a2c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cb3a2af2811efb5fcbdaeca5947c381c0d41f038d4b195ecc890dffba5fbd30564736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d539139314610385578063d547741f1461038d578063dd62ed3e146103a0578063e63ab1e9146103b3576101c4565b8063a457c2d71461034c578063a9059cbb1461035f578063ca15c87314610372576101c4565b80639010d07c116100d35780639010d07c1461030957806391d148541461032957806395d89b411461033c578063a217fddf14610344576101c4565b806370a08231146102db57806379cc6790146102ee5780638456cb5914610301576101c4565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102a557806340c10f19146102ad57806342966c68146102c05780635c975abb146102d3576101c4565b8063313ce5671461026a57806336568abe1461027f5780633950935114610292576101c4565b806318160ddd116101a257806318160ddd1461021a57806323b872dd1461022f578063248a9ca3146102425780632f2ff15d14610255576101c4565b806301ffc9a7146101c957806306fdde03146101f2578063095ea7b314610207575b600080fd5b6101dc6101d73660046113a0565b6103bb565b6040516101e99190611451565b60405180910390f35b6101fa6103e8565b6040516101e99190611465565b6101dc61021536600461131c565b61047a565b61022261049e565b6040516101e9919061145c565b6101dc61023d3660046112e1565b6104a4565b610222610250366004611345565b6104d2565b61026861026336600461135d565b6104e7565b005b610272610508565b6040516101e99190611958565b61026861028d36600461135d565b61050d565b6101dc6102a036600461131c565b61055c565b610268610588565b6102686102bb36600461131c565b6105da565b6102686102ce366004611345565b61062c565b6101dc610640565b6102226102e9366004611295565b610649565b6102686102fc36600461131c565b610664565b610268610680565b61031c61031736600461137f565b6106d0565b6040516101e9919061143d565b6101dc61033736600461135d565b6106ef565b6101fa610718565b610222610727565b6101dc61035a36600461131c565b61072c565b6101dc61036d36600461131c565b610774565b610222610380366004611345565b61078c565b6102226107a3565b61026861039b36600461135d565b6107c7565b6102226103ae3660046112af565b6107e3565b61022261080e565b60006001600160e01b03198216635a05180f60e01b14806103e057506103e0826108cc565b90505b919050565b6060600580546103f7906119f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610423906119f7565b80156104705780601f1061044557610100808354040283529160200191610470565b820191906000526020600020905b81548152906001019060200180831161045357829003601f168201915b5050505050905090565b6000806104856108f1565b90506104928185856108f5565b60019150505b92915050565b60045490565b6000806104af6108f1565b90506104bc8582856109a9565b6104c78585856109f3565b506001949350505050565b60009081526020819052604090206001015490565b6104f0826104d2565b6104f981610af4565b6105038383610b05565b505050565b601290565b6105156108f1565b6001600160a01b0316816001600160a01b03161461054e5760405162461bcd60e51b815260040161054590611888565b60405180910390fd5b6105588282610b27565b5050565b6000806105676108f1565b905061049281858561057985896107e3565b6105839190611966565b6108f5565b6105b47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6103376108f1565b6105d05760405162461bcd60e51b815260040161054590611580565b6105d8610b49565b565b6106067f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66103376108f1565b6106225760405162461bcd60e51b8152600401610545906116c6565b6105588282610b9b565b61063d6106376108f1565b82610c45565b50565b60075460ff1690565b6001600160a01b031660009081526002602052604090205490565b610676826106706108f1565b836109a9565b6105588282610c45565b6106ac7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6103376108f1565b6106c85760405162461bcd60e51b8152600401610545906117e6565b6105d8610d1c565b60008281526001602052604081206106e89083610d5a565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546103f7906119f7565b600081565b6000806107376108f1565b9050600061074582866107e3565b9050838110156107675760405162461bcd60e51b815260040161054590611843565b6104c782868684036108f5565b60008061077f6108f1565b90506104928185856109f3565b60008181526001602052604081206103e090610d66565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107d0826104d2565b6107d981610af4565b6105038383610b27565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b61083c82826106ef565b610558576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556108736108f1565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006106e8836001600160a01b038416610d71565b60006001600160e01b03198216637965db0b60e01b14806103e057506103e082610dbb565b3390565b6001600160a01b03831661091b5760405162461bcd60e51b8152600401610545906117a2565b6001600160a01b0382166109415760405162461bcd60e51b8152600401610545906115dd565b6001600160a01b0380841660008181526003602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061099c90859061145c565b60405180910390a3505050565b60006109b584846107e3565b905060001981146109ed57818110156109e05760405162461bcd60e51b81526004016105459061161f565b6109ed84848484036108f5565b50505050565b6001600160a01b038316610a195760405162461bcd60e51b81526004016105459061175d565b6001600160a01b038216610a3f5760405162461bcd60e51b8152600401610545906114cd565b610a4a838383610dd4565b6001600160a01b03831660009081526002602052604090205481811015610a835760405162461bcd60e51b815260040161054590611656565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ae190869061145c565b60405180910390a36109ed848484610503565b61063d81610b006108f1565b610ddf565b610b0f8282610832565b600082815260016020526040902061050390826108b7565b610b318282610e38565b60008281526001602052604090206105039082610ebb565b610b51610ed0565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610b846108f1565b604051610b91919061143d565b60405180910390a1565b6001600160a01b038216610bc15760405162461bcd60e51b8152600401610545906118d7565b610bcd60008383610dd4565b8060046000828254610bdf9190611966565b90915550506001600160a01b038216600081815260026020526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c3190859061145c565b60405180910390a361055860008383610503565b6001600160a01b038216610c6b5760405162461bcd60e51b81526004016105459061171c565b610c7782600083610dd4565b6001600160a01b03821660009081526002602052604090205481811015610cb05760405162461bcd60e51b81526004016105459061153e565b6001600160a01b0383166000818152600260205260408082208585039055600480548690039055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d0890869061145c565b60405180910390a361050383600084610503565b610d24610ef4565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b846108f1565b60006106e88383610f19565b60006103e082610f51565b6000610d7d8383610f55565b610db357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610498565b506000610498565b6001600160e01b031981166301ffc9a760e01b14919050565b610503838383610f6d565b610de982826106ef565b61055857610df681610f9d565b610e01836020610faf565b604051602001610e129291906113c8565b60408051601f198184030181529082905262461bcd60e51b825261054591600401611465565b610e4282826106ef565b15610558576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610e776108f1565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006106e8836001600160a01b038416611161565b610ed8610640565b6105d85760405162461bcd60e51b815260040161054590611510565b610efc610640565b156105d85760405162461bcd60e51b81526004016105459061169c565b6000826000018281548110610f3e57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b610f78838383610503565b610f80610640565b156105035760405162461bcd60e51b81526004016105459061190e565b60606103e06001600160a01b03831660145b60606000610fbe83600261197e565b610fc9906002611966565b67ffffffffffffffff811115610fef57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611019576020820181803683370190505b509050600360fc1b8160008151811061104257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061107f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006110a384600261197e565b6110ae906001611966565b90505b6001811115611142576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106110f057634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061111457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361113b816119e0565b90506110b1565b5083156106e85760405162461bcd60e51b815260040161054590611498565b6000818152600183016020526040812054801561127457600061118560018361199d565b85549091506000906111999060019061199d565b905081811461121a5760008660000182815481106111c757634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106111f857634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b855486908061123957634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610498565b6000915050610498565b80356001600160a01b03811681146103e357600080fd5b6000602082840312156112a6578081fd5b6106e88261127e565b600080604083850312156112c1578081fd5b6112ca8361127e565b91506112d86020840161127e565b90509250929050565b6000806000606084860312156112f5578081fd5b6112fe8461127e565b925061130c6020850161127e565b9150604084013590509250925092565b6000806040838503121561132e578182fd5b6113378361127e565b946020939093013593505050565b600060208284031215611356578081fd5b5035919050565b6000806040838503121561136f578182fd5b823591506112d86020840161127e565b60008060408385031215611391578182fd5b50508035926020909101359150565b6000602082840312156113b1578081fd5b81356001600160e01b0319811681146106e8578182fd5b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516114008160178501602088016119b4565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516114318160288401602088016119b4565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b60006020825282518060208401526114848160408501602087016119b4565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526039908201527f45524332305072657365744d696e7465725061757365723a206d75737420686160408201527f76652070617573657220726f6c6520746f20756e706175736500000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526036908201527f45524332305072657365744d696e7465725061757365723a206d7573742068616040820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526037908201527f45524332305072657365744d696e7465725061757365723a206d75737420686160408201527f76652070617573657220726f6c6520746f207061757365000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b60ff91909116815260200190565b6000821982111561197957611979611a32565b500190565b600081600019048311821515161561199857611998611a32565b500290565b6000828210156119af576119af611a32565b500390565b60005b838110156119cf5781810151838201526020016119b7565b838111156109ed5750506000910152565b6000816119ef576119ef611a32565b506000190190565b600281046001821680611a0b57607f821691505b60208210811415611a2c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cb3a2af2811efb5fcbdaeca5947c381c0d41f038d4b195ecc890dffba5fbd30564736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2129:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "80:815:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:24:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "138:5:67"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "145:5:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:20:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:20:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "108:6:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "116:4:67",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "104:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "104:17:67"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "123:3:67"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:27:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "93:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:35:67"
                  },
                  "nodeType": "YulIf",
                  "src": "90:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "162:23:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "172:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:13:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "166:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "194:28:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "212:2:67",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "216:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "208:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "208:10:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "220:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "204:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:18:67"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "198:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "247:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "237:2:67"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "241:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "234:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "234:10:67"
                  },
                  "nodeType": "YulIf",
                  "src": "231:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "276:23:67",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "296:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "290:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "290:9:67"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "280:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "308:14:67",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "318:4:67",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "312:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "331:67:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "357:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "373:2:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "377:4:67",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "369:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "369:13:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "388:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "384:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "384:7:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:27:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "353:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "353:40:67"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "395:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "349:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "349:49:67"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "335:10:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "457:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "459:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "459:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "459:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "416:10:67"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "428:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "413:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "413:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "436:10:67"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "448:6:67"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "433:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "433:22:67"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "410:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "410:46:67"
                  },
                  "nodeType": "YulIf",
                  "src": "407:2:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "495:2:67",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "499:10:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "488:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:22:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "488:22:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "526:6:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "534:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "519:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:18:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "519:18:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "583:24:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "592:5:67"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "599:5:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "585:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "585:20:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "585:20:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "560:6:67"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "568:2:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "556:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "556:15:67"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "573:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "552:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "552:24:67"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "578:3:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "549:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "549:33:67"
                  },
                  "nodeType": "YulIf",
                  "src": "546:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "616:14:67",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "625:5:67"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "620:1:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "685:87:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "714:6:67"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "722:1:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "710:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "710:14:67"
                                },
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "726:2:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "706:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "706:23:67"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "745:6:67"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "753:1:67"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "741:3:67"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "741:14:67"
                                    },
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "757:2:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "737:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "737:23:67"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "731:5:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "731:30:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "699:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "699:63:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "699:63:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "650:1:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "653:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "647:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:9:67"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "657:19:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "659:15:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "668:1:67"
                            },
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "671:2:67"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "664:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "664:10:67"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "659:1:67"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "643:3:67",
                    "statements": []
                  },
                  "src": "639:133:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:63:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "831:6:67"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "839:2:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "827:15:67"
                                },
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "844:2:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "823:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "823:24:67"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "849:5:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "816:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "816:39:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "816:39:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "787:1:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "790:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "784:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:9:67"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "874:15:67",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "883:6:67"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "874:5:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "54:6:67",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "62:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "70:5:67",
                "type": ""
              }
            ],
            "src": "14:881:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1018:478:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1064:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1073:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1081:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1066:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1066:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1066:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1039:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1048:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1035:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1035:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1060:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1031:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1031:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1028:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1099:30:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1119:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1113:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1113:16:67"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1103:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1138:28:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1156:2:67",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1160:1:67",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1152:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1152:10:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1164:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1148:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:18:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1142:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1193:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1202:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1210:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1195:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1195:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1195:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1181:6:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1189:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1178:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1178:14:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1175:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1228:73:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1273:9:67"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1284:6:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1269:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1269:22:67"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1293:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1238:30:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1238:63:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1228:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1310:41:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1336:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1347:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1332:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1332:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1326:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1326:25:67"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1314:8:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1380:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1389:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1397:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1382:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1382:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1382:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1366:8:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1376:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1363:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1363:16:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1360:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1415:75:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1460:9:67"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1471:8:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1456:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1456:24:67"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1482:7:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1425:30:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1425:65:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1415:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "976:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "987:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "999:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1007:6:67",
                "type": ""
              }
            ],
            "src": "900:596:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1556:382:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1566:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1580:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1586:1:67",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1576:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1576:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1566:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1597:38:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1627:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1633:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1623:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1623:12:67"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1601:18:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1674:31:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1676:27:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1690:6:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1698:4:67",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1686:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1686:17:67"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1676:6:67"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1654:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1647:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1647:26:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1644:2:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1764:168:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1785:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1788:77:67",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1778:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1778:88:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1778:88:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1886:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1889:4:67",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1879:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1879:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1879:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1914:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1917:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1907:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1907:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1907:15:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1720:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1743:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1751:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1740:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1740:14:67"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1717:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1717:38:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1714:2:67"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1536:4:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1545:6:67",
                "type": ""
              }
            ],
            "src": "1501:437:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1975:152:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1992:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1995:77:67",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1985:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1985:88:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1985:88:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2089:1:67",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2092:4:67",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2082:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2082:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2082:15:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2113:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2116:4:67",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2106:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2106:15:67"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1943:184:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13124:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:67",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:67",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:67"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:67"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:67",
                "type": ""
              }
            ],
            "src": "14:175:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:67",
                "type": ""
              }
            ],
            "src": "194:198:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:67",
                "type": ""
              }
            ],
            "src": "397:274:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:238:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:67"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:41:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "892:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "871:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:31:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "911:50:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "957:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "921:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:40:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:42:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "980:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:67"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "741:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "761:6:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "769:6:67",
                "type": ""
              }
            ],
            "src": "676:342:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1110:179:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1156:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1165:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1173:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1158:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1158:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1158:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1131:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1140:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1127:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1127:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1152:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1123:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1120:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:41:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1222:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1201:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:31:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1191:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1241:42:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1268:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1279:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1251:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:32:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1241:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1079:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1091:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1099:6:67",
                "type": ""
              }
            ],
            "src": "1023:266:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1364:120:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1410:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1419:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1427:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1412:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1412:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1412:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1385:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1394:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1381:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1381:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1406:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1377:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1377:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1374:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1445:33:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1468:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1455:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1455:23:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1445:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1330:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1341:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1353:6:67",
                "type": ""
              }
            ],
            "src": "1294:190:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1576:179:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1622:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1631:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1639:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1624:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1624:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1624:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1597:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1606:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1593:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1593:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1618:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1589:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1586:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1657:33:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1680:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1667:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:23:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1657:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1699:50:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1734:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1745:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1730:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1709:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1709:40:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1699:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1534:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1545:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1557:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1565:6:67",
                "type": ""
              }
            ],
            "src": "1489:266:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1847:171:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1893:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1902:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1910:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1895:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1895:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1895:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1868:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1877:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1864:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1864:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1889:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1860:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1860:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1857:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1928:33:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1951:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1938:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1938:23:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1928:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1970:42:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1997:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2008:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1993:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1980:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:32:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1970:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1805:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1816:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1828:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1836:6:67",
                "type": ""
              }
            ],
            "src": "1760:258:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2092:237:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2138:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2147:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2155:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2140:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2140:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2140:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2113:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2122:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2109:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2109:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2134:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2105:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2102:2:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2173:36:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2199:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2186:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2186:23:67"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2177:5:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2273:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2282:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2290:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2275:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2275:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2275:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2231:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2242:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2253:3:67",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2258:10:67",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2249:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2249:20:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2238:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2238:32:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2228:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2228:43:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2221:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2221:51:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2218:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2308:15:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2318:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2308:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2058:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2069:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2081:6:67",
                "type": ""
              }
            ],
            "src": "2023:306:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2404:120:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2450:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2459:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2467:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2452:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2452:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2452:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2425:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2434:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2421:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2421:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2446:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2417:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2417:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2414:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2485:33:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2508:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2495:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2495:23:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2485:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2370:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2381:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2393:6:67",
                "type": ""
              }
            ],
            "src": "2334:190:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2918:397:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2935:3:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2940:25:67",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2928:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2928:38:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2928:38:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2975:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2995:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2989:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2989:13:67"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2979:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3037:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3045:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3033:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3033:17:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3056:3:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3061:2:67",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3052:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3052:12:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3066:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3011:21:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3011:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3011:62:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3082:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3096:3:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3101:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3092:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3092:16:67"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3086:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3128:2:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3132:2:67",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3124:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3124:11:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3137:19:67",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3117:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3117:40:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3117:40:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3166:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3188:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3182:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3182:13:67"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "3170:8:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3230:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3238:4:67",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3226:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3226:17:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3249:2:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3253:2:67",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3245:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3245:11:67"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "3258:8:67"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3204:21:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3204:63:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3204:63:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3276:33:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3291:2:67"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "3295:8:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3287:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3287:17:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3306:2:67",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3283:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3283:26:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3276:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2886:3:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2891:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2899:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2910:3:67",
                "type": ""
              }
            ],
            "src": "2529:786:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3421:102:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3431:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3443:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3454:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3439:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3439:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3431:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3473:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3488:6:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3504:3:67",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3509:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3500:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3500:11:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3513:1:67",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3496:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3496:19:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3484:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3484:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3466:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3466:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3466:51:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3390:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3401:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3412:4:67",
                "type": ""
              }
            ],
            "src": "3320:203:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3623:92:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3633:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3645:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3656:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3641:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3633:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3675:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3700:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3693:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3693:14:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3686:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3686:22:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3668:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3668:41:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3668:41:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3592:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3603:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3614:4:67",
                "type": ""
              }
            ],
            "src": "3528:187:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3821:76:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3831:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3843:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3854:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3839:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3839:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3831:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3873:9:67"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3884:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3866:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3866:25:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3866:25:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3790:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3801:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3812:4:67",
                "type": ""
              }
            ],
            "src": "3720:177:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4023:262:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4040:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4051:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4033:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4033:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4033:21:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4063:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4083:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4077:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4077:13:67"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4067:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4110:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4121:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4106:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4106:18:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4126:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4099:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4099:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4099:34:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4168:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4176:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4164:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4164:15:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4185:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4196:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4181:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4181:18:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4201:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4142:21:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4142:66:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4142:66:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4217:62:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4233:9:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4252:6:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4260:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4248:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4248:15:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4269:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4265:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4265:7:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4244:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4244:29:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4229:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4229:45:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4276:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4225:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4225:54:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4217:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3992:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4003:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4014:4:67",
                "type": ""
              }
            ],
            "src": "3902:383:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4464:182:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4481:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4492:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4474:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4474:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4474:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4515:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4526:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4511:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4511:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4531:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4504:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4504:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4504:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4554:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4565:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4550:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4550:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4570:34:67",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4543:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4543:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4543:62:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4614:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4626:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4637:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4622:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4622:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4614:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4441:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4455:4:67",
                "type": ""
              }
            ],
            "src": "4290:356:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4825:225:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4842:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4853:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4835:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4835:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4835:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4876:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4887:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4872:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4872:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4892:2:67",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4865:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4865:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4865:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4915:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4926:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4911:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4911:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4931:34:67",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4904:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4904:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4904:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4986:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4997:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4982:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4982:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5002:5:67",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4975:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4975:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4975:33:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5017:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5029:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5040:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5025:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5025:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5017:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4802:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4816:4:67",
                "type": ""
              }
            ],
            "src": "4651:399:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5229:170:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5246:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5257:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5239:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5239:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5239:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5280:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5291:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5276:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5276:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5296:2:67",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5269:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5269:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5269:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5319:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5330:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5315:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5315:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5335:22:67",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5308:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5308:50:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5308:50:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5367:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5379:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5390:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5375:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5375:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5367:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5206:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5220:4:67",
                "type": ""
              }
            ],
            "src": "5055:344:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5578:224:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5595:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5606:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5588:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5588:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5588:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5629:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5640:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5625:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5625:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5645:2:67",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5618:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5618:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5618:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5668:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5679:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5664:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5664:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5684:34:67",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5657:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5657:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5657:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5739:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5750:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5735:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5735:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5755:4:67",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5728:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5728:32:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5728:32:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5769:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5781:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5792:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5777:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5777:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5769:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5555:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5569:4:67",
                "type": ""
              }
            ],
            "src": "5404:398:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5981:247:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5998:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6009:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5991:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5991:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5991:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6032:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6043:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6028:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6028:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6048:2:67",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6021:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6021:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6021:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6071:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6082:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6067:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6067:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6087:34:67",
                        "type": "",
                        "value": "ERC20PresetMinterPauser: must ha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6060:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6060:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6060:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6142:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6153:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6138:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6138:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6158:27:67",
                        "type": "",
                        "value": "ve pauser role to unpause"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6131:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6131:55:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6131:55:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6195:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6207:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6218:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6203:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6203:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6195:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5958:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5972:4:67",
                "type": ""
              }
            ],
            "src": "5807:421:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6407:224:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6424:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6435:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6417:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6417:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6417:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6458:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6469:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6454:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6454:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6474:2:67",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6447:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6447:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6447:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6497:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6508:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6493:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6493:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6513:34:67",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6486:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6486:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6486:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6568:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6579:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6564:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6564:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6584:4:67",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6557:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6557:32:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6557:32:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6598:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6610:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6621:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6606:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6606:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6598:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6384:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6398:4:67",
                "type": ""
              }
            ],
            "src": "6233:398:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6810:179:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6827:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6838:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6820:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6820:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6820:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6861:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6872:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6857:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6857:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6877:2:67",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6850:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6850:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6850:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6900:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6911:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6896:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6896:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6916:31:67",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6889:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6889:59:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6889:59:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6957:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6969:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6980:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6965:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6965:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6957:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6787:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6801:4:67",
                "type": ""
              }
            ],
            "src": "6636:353:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7168:228:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7185:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7196:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7178:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7178:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7178:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7219:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7230:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7215:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7215:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7235:2:67",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7208:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7208:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7208:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7258:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7269:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7254:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7254:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7274:34:67",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7247:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7247:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7247:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7329:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7340:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7325:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7325:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7345:8:67",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7318:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7318:36:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7318:36:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7363:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7375:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7386:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7371:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7371:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7363:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7145:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7159:4:67",
                "type": ""
              }
            ],
            "src": "6994:402:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7575:166:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7592:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7603:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7585:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7585:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7585:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7626:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7637:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7622:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7622:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7642:2:67",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7615:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7615:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7615:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7665:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7676:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7661:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7661:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7681:18:67",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7654:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7654:46:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7654:46:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7709:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7721:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7732:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7717:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7717:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7709:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7552:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7566:4:67",
                "type": ""
              }
            ],
            "src": "7401:340:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7920:244:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7937:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7948:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7930:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7930:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7930:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7971:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7982:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7967:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7967:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7987:2:67",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7960:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7960:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7960:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8010:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8021:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8006:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8006:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8026:34:67",
                        "type": "",
                        "value": "ERC20PresetMinterPauser: must ha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7999:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7999:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7999:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8081:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8092:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8077:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8077:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8097:24:67",
                        "type": "",
                        "value": "ve minter role to mint"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8070:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8070:52:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8070:52:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8131:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8143:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8154:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8139:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8139:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8131:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7897:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7911:4:67",
                "type": ""
              }
            ],
            "src": "7746:418:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8343:223:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8360:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8371:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8353:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8353:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8353:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8394:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8405:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8390:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8390:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8410:2:67",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8383:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8383:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8383:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8433:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8444:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8429:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8429:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8449:34:67",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8422:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8422:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8422:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8504:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8515:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8500:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8500:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8520:3:67",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8493:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8493:31:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8493:31:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8533:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8545:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8556:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8541:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8541:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8533:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8320:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8334:4:67",
                "type": ""
              }
            ],
            "src": "8169:397:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8745:227:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8762:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8773:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8755:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8755:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8755:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8796:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8807:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8792:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8792:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8812:2:67",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8785:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8785:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8785:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8835:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8846:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8831:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8831:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8851:34:67",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8824:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8824:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8824:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8906:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8917:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8902:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8902:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8922:7:67",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8895:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8895:35:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8895:35:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8939:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8951:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8962:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8947:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8947:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8939:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8722:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8736:4:67",
                "type": ""
              }
            ],
            "src": "8571:401:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9151:226:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9168:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9179:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9161:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9161:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9161:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9202:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9213:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9198:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9198:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9218:2:67",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9191:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9191:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9191:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9241:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9252:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9237:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9237:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9257:34:67",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9230:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9230:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9230:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9312:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9323:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9308:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9308:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9328:6:67",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9301:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9301:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9301:34:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9344:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9356:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9367:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9352:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9352:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9344:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9128:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9142:4:67",
                "type": ""
              }
            ],
            "src": "8977:400:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9556:245:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9573:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9584:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9566:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9566:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9566:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9607:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9618:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9603:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9603:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9623:2:67",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9596:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9596:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9596:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9646:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9657:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9642:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9642:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9662:34:67",
                        "type": "",
                        "value": "ERC20PresetMinterPauser: must ha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9635:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9635:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9635:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9717:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9728:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9713:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9713:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9733:25:67",
                        "type": "",
                        "value": "ve pauser role to pause"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9706:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9706:53:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9706:53:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9768:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9780:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9791:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9776:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9776:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9768:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9533:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9547:4:67",
                "type": ""
              }
            ],
            "src": "9382:419:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9980:227:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9997:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10008:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9990:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9990:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9990:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10031:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10042:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10027:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10027:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10047:2:67",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10020:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10020:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10020:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10070:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10081:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10066:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10066:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10086:34:67",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10059:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10059:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10059:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10141:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10152:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10137:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10137:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10157:7:67",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10130:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10130:35:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10130:35:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10174:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10186:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10197:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10182:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10182:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10174:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9957:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9971:4:67",
                "type": ""
              }
            ],
            "src": "9806:401:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10386:237:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10403:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10414:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10396:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10396:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10396:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10437:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10448:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10433:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10433:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10453:2:67",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10426:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10426:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10426:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10476:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10487:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10472:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10472:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10492:34:67",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10465:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10465:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10465:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10547:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10558:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10543:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10543:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10563:17:67",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10536:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10536:45:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10536:45:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10590:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10602:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10613:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10598:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10598:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10590:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10363:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10377:4:67",
                "type": ""
              }
            ],
            "src": "10212:411:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10802:181:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10819:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10830:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10812:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10812:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10812:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10853:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10864:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10849:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10849:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10869:2:67",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10842:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10842:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10842:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10892:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10903:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10888:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10888:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10908:33:67",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10881:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10881:61:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10881:61:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10951:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10963:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10974:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10959:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10959:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10951:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10779:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10793:4:67",
                "type": ""
              }
            ],
            "src": "10628:355:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11162:232:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11179:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11190:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11172:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11172:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11172:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11213:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11224:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11209:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11209:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11229:2:67",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11202:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11202:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11202:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11252:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11263:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11248:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11248:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11268:34:67",
                        "type": "",
                        "value": "ERC20Pausable: token transfer wh"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11241:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11241:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11241:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11323:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11334:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11319:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11319:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11339:12:67",
                        "type": "",
                        "value": "ile paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11312:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11312:40:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11312:40:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11361:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11373:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11384:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11369:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11369:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11361:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11139:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11153:4:67",
                "type": ""
              }
            ],
            "src": "10988:406:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11500:76:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11510:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11522:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11533:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11518:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11518:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11510:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11552:9:67"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11563:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11545:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11545:25:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11545:25:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11469:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11480:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11491:4:67",
                "type": ""
              }
            ],
            "src": "11399:177:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11678:87:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11688:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11700:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11711:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11696:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11696:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11688:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11730:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11745:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11753:4:67",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11741:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11741:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11723:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11723:36:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11723:36:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11647:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11658:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11669:4:67",
                "type": ""
              }
            ],
            "src": "11581:184:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11818:80:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11845:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11847:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11847:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11847:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11834:1:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11841:1:67"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11837:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11837:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11831:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11831:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "11828:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11876:16:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11887:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11890:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11883:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11883:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11876:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11801:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11804:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11810:3:67",
                "type": ""
              }
            ],
            "src": "11770:128:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11955:116:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12014:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12016:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12016:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12016:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11986:1:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11979:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11979:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11972:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11972:17:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11994:1:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12005:1:67",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "12001:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12001:6:67"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12009:1:67"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11997:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11997:14:67"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11991:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11991:21:67"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11968:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11968:45:67"
                  },
                  "nodeType": "YulIf",
                  "src": "11965:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12045:20:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12060:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12063:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12056:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12056:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12045:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11934:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11937:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "11943:7:67",
                "type": ""
              }
            ],
            "src": "11903:168:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12125:76:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12147:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12149:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12149:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12149:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12141:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12144:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12138:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12138:8:67"
                  },
                  "nodeType": "YulIf",
                  "src": "12135:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12178:17:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12190:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12193:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12186:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12186:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12178:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12107:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12110:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12116:4:67",
                "type": ""
              }
            ],
            "src": "12076:125:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12259:205:67",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12269:10:67",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12278:1:67",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "12273:1:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12338:63:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12363:3:67"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12368:1:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12359:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12359:11:67"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "12382:3:67"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12387:1:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12378:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12378:11:67"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12372:5:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12372:18:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12352:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12352:39:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12352:39:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12299:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12302:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12296:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12296:13:67"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12310:19:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12312:15:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12321:1:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12324:2:67",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12317:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12317:10:67"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12312:1:67"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12292:3:67",
                    "statements": []
                  },
                  "src": "12288:113:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12427:31:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12440:3:67"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12445:6:67"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12436:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12436:16:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12454:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12429:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12429:27:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12429:27:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12416:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12419:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12413:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12413:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "12410:2:67"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "12237:3:67",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "12242:3:67",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12247:6:67",
                "type": ""
              }
            ],
            "src": "12206:258:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12516:89:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12543:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12545:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12545:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12545:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12536:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12529:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12529:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "12526:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12574:25:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12585:5:67"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12596:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12592:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12592:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12581:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12581:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "12574:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12498:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "12508:3:67",
                "type": ""
              }
            ],
            "src": "12469:136:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12665:325:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12675:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "12689:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12695:1:67",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "12685:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12685:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "12675:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12706:38:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "12736:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12742:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12732:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12732:12:67"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "12710:18:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12783:31:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12785:27:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "12799:6:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12807:4:67",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "12795:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12795:17:67"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12785:6:67"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "12763:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12756:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12756:26:67"
                  },
                  "nodeType": "YulIf",
                  "src": "12753:2:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12873:111:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12894:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12901:3:67",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12906:10:67",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "12897:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12897:20:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12887:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12887:31:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12887:31:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12938:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12941:4:67",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12931:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12931:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12931:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12966:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12969:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12959:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12959:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12959:15:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "12829:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12852:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12860:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "12849:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12849:14:67"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "12826:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12826:38:67"
                  },
                  "nodeType": "YulIf",
                  "src": "12823:2:67"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "12645:4:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12654:6:67",
                "type": ""
              }
            ],
            "src": "12610:380:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13027:95:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13044:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13051:3:67",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13056:10:67",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13047:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13047:20:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13037:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13037:31:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13037:31:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13084:1:67",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13087:4:67",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13077:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13077:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13077:15:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13108:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13111:4:67",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13101:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13101:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13101:15:67"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12995:127:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve pauser role to unpause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve minter role to mint\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve pauser role to pause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Pausable: token transfer wh\")\n        mstore(add(headStart, 96), \"ile paused\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1005:2013:56:-:0;;;1424:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:13:51;;1484:4:56;;1490:6;;2046:13:51;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2069:17:51;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;996:7:42;:15;;-1:-1:-1;;996:15:42;;;-1:-1:-1;1508:44:56::1;1006:5:42::0;1539:12:56::1;:10;:12::i;:::-;1508:10;:44::i;:::-;1563:37;1148:24;1587:12;:10;:12::i;1563:37::-;1610;1216:24;1634:12;:10;:12::i;1610:37::-;1424:230:::0;;1005:2013;;640:96:58;719:10;640:96;:::o;6937:110:37:-;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;1978:166:38:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;7587:233:37:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:37;;;;;;;;;:36;;-1:-1:-1;;7708:36:37;7740:4;7708:36;;;7790:12;:10;:12::i;:::-;-1:-1:-1;;;;;7763:40:37;7781:7;-1:-1:-1;;;;;7763:40:37;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:65:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:65;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;;:::o;3021:145:37:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:37;;;;;;;;;;;;;;;3021:145::o;2214:404:65:-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;-1:-1:-1;2335:23:65;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:65;2589:12;;4255:127;4328:4;4351:19;;;:12;;;;;:19;;;;;;:24;;;4255:127::o;1005:2013:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1005:2013:56;;;-1:-1:-1;1005:2013:56;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:67;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:67;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:67;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:67;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:67;80:815;-1:-1:-1;;;;;80:815:67:o;900:596::-;;;1060:2;1048:9;1039:7;1035:23;1031:32;1028:2;;;1081:6;1073;1066:22;1028:2;1113:16;;-1:-1:-1;;;;;1178:14:67;;;1175:2;;;1210:6;1202;1195:22;1175:2;1238:63;1293:7;1284:6;1273:9;1269:22;1238:63;:::i;:::-;1228:73;;1347:2;1336:9;1332:18;1326:25;1310:41;;1376:2;1366:8;1363:16;1360:2;;;1397:6;1389;1382:22;1360:2;;1425:65;1482:7;1471:8;1460:9;1456:24;1425:65;:::i;:::-;1415:75;;;1018:478;;;;;:::o;1501:437::-;1586:1;1576:12;;1633:1;1623:12;;;1644:2;;1698:4;1690:6;1686:17;1676:27;;1644:2;1751;1743:6;1740:14;1720:18;1717:38;1714:2;;;1788:77;1785:1;1778:88;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1714:2;;1556:382;;;:::o;1943:184::-;1995:77;1992:1;1985:88;2092:4;2089:1;2082:15;2116:4;2113:1;2106:15;1975:152;1005:2013:56;;;;;;",
  "deployedSourceMap": "1005:2013:56:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:38;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98:51;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;:::i;:::-;;:::i;3255:106::-;;;:::i;:::-;;;;;;;:::i;5203:256::-;;;;;;:::i;:::-;;:::i;4504:129:37:-;;;;;;:::i;:::-;;:::i;4929:145::-;;;;;;:::i;:::-;;:::i;:::-;;3104:91:51;;;:::i;:::-;;;;;;;:::i;6038:214:37:-;;;;;;:::i;:::-;;:::i;5854:234:51:-;;;;;;:::i;:::-;;:::i;2624:175:56:-;;;:::i;1843:202::-;;;;;;:::i;:::-;;:::i;578:89:53:-;;;;;;:::i;:::-;;:::i;1615:84:42:-;;;:::i;3419:125:51:-;;;;;;:::i;:::-;;:::i;973:161:53:-;;;;;;:::i;:::-;;:::i;2248:169:56:-;;;:::i;1431:151:38:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3021:145:37:-;;;;;;:::i;:::-;;:::i;2369:102:51:-;;;:::i;2153:49:37:-;;;:::i;6575:427:51:-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;1750:140:38:-;;;;;;:::i;:::-;;:::i;1110:62:56:-;;;:::i;5354:147:37:-;;;;;;:::i;:::-;;:::i;3987:149:51:-;;;;;;:::i;:::-;;:::i;1178:62:56:-;;;:::i;634:212:38:-;719:4;-1:-1:-1;;;;;;742:57:38;;-1:-1:-1;;;742:57:38;;:97;;;803:36;827:11;803:23;:36::i;:::-;735:104;;634:212;;;;:::o;2158:98:51:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;3255:106::-;3342:12;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:51;;5203:256;-1:-1:-1;;;;5203:256:51:o;4504:129:37:-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129::o;4929:145::-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;3104:91:51:-;3186:2;3104:91;:::o;6038:214:37:-;6144:12;:10;:12::i;:::-;-1:-1:-1;;;;;6133:23:37;:7;-1:-1:-1;;;;;6133:23:37;;6125:83;;;;-1:-1:-1;;;6125:83:37;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;5854:234:51:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2624:175:56:-;2676:34;1216:24;2697:12;:10;:12::i;2676:34::-;2668:104;;;;-1:-1:-1;;;2668:104:56;;;;;;;:::i;:::-;2782:10;:8;:10::i;:::-;2624:175::o;1843:202::-;1918:34;1148:24;1939:12;:10;:12::i;1918:34::-;1910:101;;;;-1:-1:-1;;;1910:101:56;;;;;;;:::i;:::-;2021:17;2027:2;2031:6;2021:5;:17::i;578:89:53:-;633:27;639:12;:10;:12::i;:::-;653:6;633:5;:27::i;:::-;578:89;:::o;1615:84:42:-;1685:7;;;;1615:84;:::o;3419:125:51:-;-1:-1:-1;;;;;3519:18:51;3493:7;3519:18;;;:9;:18;;;;;;;3419:125::o;973:161:53:-;1049:46;1065:7;1074:12;:10;:12::i;:::-;1088:6;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2248:169:56:-;2298:34;1216:24;2319:12;:10;:12::i;2298:34::-;2290:102;;;;-1:-1:-1;;;2290:102:56;;;;;;;:::i;:::-;2402:8;:6;:8::i;1431:151:38:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:38:o;3021:145:37:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:37;;;;;;;;;;;;;;;3021:145::o;2369:102:51:-;2425:13;2457:7;2450:14;;;;;:::i;2153:49:37:-;2198:4;2153:49;:::o;6575:427:51:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:51;;;;;;;:::i;:::-;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;1750:140:38:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;1110:62:56:-;1148:24;1110:62;:::o;5354:147:37:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;3987:149:51:-:0;-1:-1:-1;;;;;4102:18:51;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;1178:62:56:-;1216:24;1178:62;:::o;7587:233:37:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:37;;;;;;;;;:36;;-1:-1:-1;;7708:36:37;7740:4;7708:36;;;7790:12;:10;:12::i;:::-;-1:-1:-1;;;;;7763:40:37;7781:7;-1:-1:-1;;;;;7763:40:37;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:65:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:65;;8398:4;:50::i;2732:202:37:-;2817:4;-1:-1:-1;;;;;;2840:47:37;;-1:-1:-1;;;2840:47:37;;:87;;;2891:36;2915:11;2891:23;:36::i;640:96:58:-;719:10;640:96;:::o;10457:340:51:-;-1:-1:-1;;;;;10558:19:51;;10550:68;;;;-1:-1:-1;;;10550:68:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;10636:21:51;;10628:68;;;;-1:-1:-1;;;10628:68:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;10707:18:51;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10758:32;;;;;10737:6;;10758:32;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:51;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:51;;;;;;;:::i;:::-;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11078:411;;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:51;;7544:68;;;;-1:-1:-1;;;7544:68:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;7630:16:51;;7622:64;;;;-1:-1:-1;;;7622:64:51;;;;;;;:::i;:::-;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:51;;7746:19;7768:15;;;:9;:15;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;7899:15:51;;;;;;;:9;:15;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;;;;;7931:6;;8163:26;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;3460:103:37:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;1978:166:38:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;2433:117:42:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:42::1;::::0;;2521:22:::1;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;8520:535:51:-;-1:-1:-1;;;;;8603:21:51;;8595:65;;;;-1:-1:-1;;;8595:65:51;;;;;;;:::i;:::-;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:51;;;;;;:9;:18;;;;;;:28;;;;;;8952:37;;;;;8921:6;;8952:37;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;9375:659::-;-1:-1:-1;;;;;9458:21:51;;9450:67;;;;-1:-1:-1;;;9450:67:51;;;;;;;:::i;:::-;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:51;;9588:22;9613:18;;;:9;:18;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;9746:18:51;;;;;;:9;:18;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;9746:18;;;9931:37;;;;9784:6;;9931:37;:::i;:::-;;;;;;;;9979:48;9999:7;10016:1;10020:6;9979:19;:48::i;2186:115:42:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:42::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;:10;:12::i;9563:156:65:-:0;9637:7;9687:22;9691:3;9703:5;9687:3;:22::i;9106:115::-;9169:7;9195:19;9203:3;9195:7;:19::i;2214:404::-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;-1:-1:-1;2335:23:65;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:65;2589:12;;829:155:60;-1:-1:-1;;;;;;937:40:60;;-1:-1:-1;;;937:40:60;829:155;;;:::o;2805:211:56:-;2965:44;2992:4;2998:2;3002:6;2965:26;:44::i;3844:479:37:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:37;;;;;;;;;;-1:-1:-1;;;3970:336:37;;;;;;;:::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:37;;;;;;;;;:37;;-1:-1:-1;;8112:37:37;;;8195:12;:10;:12::i;:::-;-1:-1:-1;;;;;8168:40:37;8186:7;-1:-1:-1;;;;;8168:40:37;8180:4;8168:40;;;;;;;;;;7991:234;;:::o;8623:156:65:-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:65;;8719:7;:53::i;1945:106:42:-;2011:8;:6;:8::i;:::-;2003:41;;;;-1:-1:-1;;;2003:41:42;;;;;;;:::i;1767:106::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:42;;;;;;;:::i;4912:118:65:-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;-1:-1:-1;;;5005:18:65;;;;;;;;;;;;;;;;;4998:25;;4912:118;;;;:::o;4463:107::-;4545:18;;4463:107::o;4255:127::-;4328:4;4351:19;;;:12;;;;;:19;;;;;;:24;;;4255:127::o;1046:234:54:-;1154:44;1181:4;1187:2;1191:6;1154:26;:44::i;:::-;1218:8;:6;:8::i;:::-;1217:9;1209:64;;;;-1:-1:-1;;;1209:64:54;;;;;;;:::i;2407:149:59:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:59;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;-1:-1:-1;;;1940:25:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:59;;1918:47;;-1:-1:-1;;;1975:6:59;1982:1;1975:9;;;;;;-1:-1:-1;;;1975:9:59;;;;;;;;;;;;:15;-1:-1:-1;;;;;1975:15:59;;;;;;;;;-1:-1:-1;;;2000:6:59;2007:1;2000:9;;;;;;-1:-1:-1;;;2000:9:59;;;;;;;;;;;;:15;-1:-1:-1;;;;;2000:15:59;;;;;;;;-1:-1:-1;2030:9:59;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:59;2113:3;2105:11;2096:21;;;;;-1:-1:-1;;;2096:21:59;;;;;;;;;;;;2084:6;2091:1;2084:9;;;;;;-1:-1:-1;;;2084:9:59;;;;;;;;;;;;:33;-1:-1:-1;;;;;2084:33:59;;;;;;;;-1:-1:-1;2141:1:59;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:59;;2162:55;;;;-1:-1:-1;;;2162:55:59;;;;;;;:::i;2786:1388:65:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:65;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;-1:-1:-1;;;3571:22:65;;;;;;;;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;-1:-1:-1;;;3693:26:65;;;;;;;;;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;-1:-1:-1;;;3977:17:65;;;;;;;;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;14:175:67;84:20;;-1:-1:-1;;;;;133:31:67;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:67:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:67;;1364:120;-1:-1:-1;1364:120:67:o;1489:266::-;;;1618:2;1606:9;1597:7;1593:23;1589:32;1586:2;;;1639:6;1631;1624:22;1586:2;1680:9;1667:23;1657:33;;1709:40;1745:2;1734:9;1730:18;1709:40;:::i;1760:258::-;;;1889:2;1877:9;1868:7;1864:23;1860:32;1857:2;;;1910:6;1902;1895:22;1857:2;-1:-1:-1;;1938:23:67;;;2008:2;1993:18;;;1980:32;;-1:-1:-1;1847:171:67:o;2023:306::-;;2134:2;2122:9;2113:7;2109:23;2105:32;2102:2;;;2155:6;2147;2140:22;2102:2;2186:23;;-1:-1:-1;;;;;;2238:32:67;;2228:43;;2218:2;;2290:6;2282;2275:22;2529:786;;2940:25;2935:3;2928:38;2995:6;2989:13;3011:62;3066:6;3061:2;3056:3;3052:12;3045:4;3037:6;3033:17;3011:62;:::i;:::-;-1:-1:-1;;;3132:2:67;3092:16;;;3124:11;;;3117:40;3182:13;;3204:63;3182:13;3253:2;3245:11;;3238:4;3226:17;;3204:63;:::i;:::-;3287:17;3306:2;3283:26;;2918:397;-1:-1:-1;;;;2918:397:67:o;3320:203::-;-1:-1:-1;;;;;3484:32:67;;;;3466:51;;3454:2;3439:18;;3421:102::o;3528:187::-;3693:14;;3686:22;3668:41;;3656:2;3641:18;;3623:92::o;3720:177::-;3866:25;;;3854:2;3839:18;;3821:76::o;3902:383::-;;4051:2;4040:9;4033:21;4083:6;4077:13;4126:6;4121:2;4110:9;4106:18;4099:34;4142:66;4201:6;4196:2;4185:9;4181:18;4176:2;4168:6;4164:15;4142:66;:::i;:::-;4269:2;4248:15;-1:-1:-1;;4244:29:67;4229:45;;;;4276:2;4225:54;;4023:262;-1:-1:-1;;4023:262:67:o;4290:356::-;4492:2;4474:21;;;4511:18;;;4504:30;4570:34;4565:2;4550:18;;4543:62;4637:2;4622:18;;4464:182::o;4651:399::-;4853:2;4835:21;;;4892:2;4872:18;;;4865:30;4931:34;4926:2;4911:18;;4904:62;-1:-1:-1;;;4997:2:67;4982:18;;4975:33;5040:3;5025:19;;4825:225::o;5055:344::-;5257:2;5239:21;;;5296:2;5276:18;;;5269:30;-1:-1:-1;;;5330:2:67;5315:18;;5308:50;5390:2;5375:18;;5229:170::o;5404:398::-;5606:2;5588:21;;;5645:2;5625:18;;;5618:30;5684:34;5679:2;5664:18;;5657:62;-1:-1:-1;;;5750:2:67;5735:18;;5728:32;5792:3;5777:19;;5578:224::o;5807:421::-;6009:2;5991:21;;;6048:2;6028:18;;;6021:30;6087:34;6082:2;6067:18;;6060:62;6158:27;6153:2;6138:18;;6131:55;6218:3;6203:19;;5981:247::o;6233:398::-;6435:2;6417:21;;;6474:2;6454:18;;;6447:30;6513:34;6508:2;6493:18;;6486:62;-1:-1:-1;;;6579:2:67;6564:18;;6557:32;6621:3;6606:19;;6407:224::o;6636:353::-;6838:2;6820:21;;;6877:2;6857:18;;;6850:30;6916:31;6911:2;6896:18;;6889:59;6980:2;6965:18;;6810:179::o;6994:402::-;7196:2;7178:21;;;7235:2;7215:18;;;7208:30;7274:34;7269:2;7254:18;;7247:62;-1:-1:-1;;;7340:2:67;7325:18;;7318:36;7386:3;7371:19;;7168:228::o;7401:340::-;7603:2;7585:21;;;7642:2;7622:18;;;7615:30;-1:-1:-1;;;7676:2:67;7661:18;;7654:46;7732:2;7717:18;;7575:166::o;7746:418::-;7948:2;7930:21;;;7987:2;7967:18;;;7960:30;8026:34;8021:2;8006:18;;7999:62;-1:-1:-1;;;8092:2:67;8077:18;;8070:52;8154:3;8139:19;;7920:244::o;8169:397::-;8371:2;8353:21;;;8410:2;8390:18;;;8383:30;8449:34;8444:2;8429:18;;8422:62;-1:-1:-1;;;8515:2:67;8500:18;;8493:31;8556:3;8541:19;;8343:223::o;8571:401::-;8773:2;8755:21;;;8812:2;8792:18;;;8785:30;8851:34;8846:2;8831:18;;8824:62;-1:-1:-1;;;8917:2:67;8902:18;;8895:35;8962:3;8947:19;;8745:227::o;8977:400::-;9179:2;9161:21;;;9218:2;9198:18;;;9191:30;9257:34;9252:2;9237:18;;9230:62;-1:-1:-1;;;9323:2:67;9308:18;;9301:34;9367:3;9352:19;;9151:226::o;9382:419::-;9584:2;9566:21;;;9623:2;9603:18;;;9596:30;9662:34;9657:2;9642:18;;9635:62;9733:25;9728:2;9713:18;;9706:53;9791:3;9776:19;;9556:245::o;9806:401::-;10008:2;9990:21;;;10047:2;10027:18;;;10020:30;10086:34;10081:2;10066:18;;10059:62;-1:-1:-1;;;10152:2:67;10137:18;;10130:35;10197:3;10182:19;;9980:227::o;10212:411::-;10414:2;10396:21;;;10453:2;10433:18;;;10426:30;10492:34;10487:2;10472:18;;10465:62;-1:-1:-1;;;10558:2:67;10543:18;;10536:45;10613:3;10598:19;;10386:237::o;10628:355::-;10830:2;10812:21;;;10869:2;10849:18;;;10842:30;10908:33;10903:2;10888:18;;10881:61;10974:2;10959:18;;10802:181::o;10988:406::-;11190:2;11172:21;;;11229:2;11209:18;;;11202:30;11268:34;11263:2;11248:18;;11241:62;-1:-1:-1;;;11334:2:67;11319:18;;11312:40;11384:3;11369:19;;11162:232::o;11581:184::-;11753:4;11741:17;;;;11723:36;;11711:2;11696:18;;11678:87::o;11770:128::-;;11841:1;11837:6;11834:1;11831:13;11828:2;;;11847:18;;:::i;:::-;-1:-1:-1;11883:9:67;;11818:80::o;11903:168::-;;12009:1;12005;12001:6;11997:14;11994:1;11991:21;11986:1;11979:9;11972:17;11968:45;11965:2;;;12016:18;;:::i;:::-;-1:-1:-1;12056:9:67;;11955:116::o;12076:125::-;;12144:1;12141;12138:8;12135:2;;;12149:18;;:::i;:::-;-1:-1:-1;12186:9:67;;12125:76::o;12206:258::-;12278:1;12288:113;12302:6;12299:1;12296:13;12288:113;;;12378:11;;;12372:18;12359:11;;;12352:39;12324:2;12317:10;12288:113;;;12419:6;12416:1;12413:13;12410:2;;;-1:-1:-1;;12454:1:67;12436:16;;12429:27;12259:205::o;12469:136::-;;12536:5;12526:2;;12545:18;;:::i;:::-;-1:-1:-1;;;12581:18:67;;12516:89::o;12610:380::-;12695:1;12685:12;;12742:1;12732:12;;;12753:2;;12807:4;12799:6;12795:17;12785:27;;12753:2;12860;12852:6;12849:14;12829:18;12826:38;12823:2;;;12906:10;12901:3;12897:20;12894:1;12887:31;12941:4;12938:1;12931:15;12969:4;12966:1;12959:15;12823:2;;12665:325;;;:::o;12995:127::-;13056:10;13051:3;13047:20;13044:1;13037:31;13087:4;13084:1;13077:15;13111:4;13108:1;13101:15",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/presets/ERC20PresetMinterPauser.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../extensions/ERC20Burnable.sol\";\nimport \"../extensions/ERC20Pausable.sol\";\nimport \"../../../access/AccessControlEnumerable.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev {ERC20} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n *\n * _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\n */\ncontract ERC20PresetMinterPauser is Context, AccessControlEnumerable, ERC20Burnable, ERC20Pausable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * See {ERC20-constructor}.\n     */\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     *\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 amount) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override(ERC20, ERC20Pausable) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
    "exportedSymbols": {
      "AccessControl": [
        11986
      ],
      "AccessControlEnumerable": [
        12111
      ],
      "Context": [
        15470
      ],
      "ERC165": [
        15723
      ],
      "ERC20": [
        14798
      ],
      "ERC20Burnable": [
        14920
      ],
      "ERC20Pausable": [
        14957
      ],
      "ERC20PresetMinterPauser": [
        15118
      ],
      "EnumerableSet": [
        17631
      ],
      "IAccessControl": [
        12184
      ],
      "IAccessControlEnumerable": [
        12209
      ],
      "IERC165": [
        15735
      ],
      "IERC20": [
        14876
      ],
      "IERC20Metadata": [
        14982
      ],
      "Math": [
        16601
      ],
      "Pausable": [
        12430
      ],
      "SignedMath": [
        17018
      ],
      "Strings": [
        15699
      ]
    },
    "id": 15119,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14984,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "131:23:56"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../ERC20.sol",
        "id": 14985,
        "nodeType": "ImportDirective",
        "scope": 15119,
        "sourceUnit": 14799,
        "src": "156:22:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "../extensions/ERC20Burnable.sol",
        "id": 14986,
        "nodeType": "ImportDirective",
        "scope": 15119,
        "sourceUnit": 14921,
        "src": "179:41:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "file": "../extensions/ERC20Pausable.sol",
        "id": 14987,
        "nodeType": "ImportDirective",
        "scope": 15119,
        "sourceUnit": 14958,
        "src": "221:41:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "file": "../../../access/AccessControlEnumerable.sol",
        "id": 14988,
        "nodeType": "ImportDirective",
        "scope": 15119,
        "sourceUnit": 12112,
        "src": "263:53:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "../../../utils/Context.sol",
        "id": 14989,
        "nodeType": "ImportDirective",
        "scope": 15119,
        "sourceUnit": 15471,
        "src": "317:36:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14991,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15470,
              "src": "1041:7:56"
            },
            "id": 14992,
            "nodeType": "InheritanceSpecifier",
            "src": "1041:7:56"
          },
          {
            "baseName": {
              "id": 14993,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12111,
              "src": "1050:23:56"
            },
            "id": 14994,
            "nodeType": "InheritanceSpecifier",
            "src": "1050:23:56"
          },
          {
            "baseName": {
              "id": 14995,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14920,
              "src": "1075:13:56"
            },
            "id": 14996,
            "nodeType": "InheritanceSpecifier",
            "src": "1075:13:56"
          },
          {
            "baseName": {
              "id": 14997,
              "name": "ERC20Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14957,
              "src": "1090:13:56"
            },
            "id": 14998,
            "nodeType": "InheritanceSpecifier",
            "src": "1090:13:56"
          }
        ],
        "contractDependencies": [
          11986,
          12111,
          12184,
          12209,
          12430,
          14798,
          14876,
          14920,
          14957,
          14982,
          15470,
          15723,
          15735
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 14990,
          "nodeType": "StructuredDocumentation",
          "src": "355:649:56",
          "text": " @dev {ERC20} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts.\n _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._"
        },
        "fullyImplemented": true,
        "id": 15118,
        "linearizedBaseContracts": [
          15118,
          14957,
          12430,
          14920,
          14798,
          14982,
          14876,
          12111,
          11986,
          15723,
          15735,
          12209,
          12184,
          15470
        ],
        "name": "ERC20PresetMinterPauser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 15003,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 15118,
            "src": "1110:62:56",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 14999,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1110:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 15001,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1158:13:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 15000,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1148:9:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 15002,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1148:24:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 15008,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 15118,
            "src": "1178:62:56",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15004,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1178:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 15006,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1226:13:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 15005,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1216:9:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 15007,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1216:24:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 15038,
              "nodeType": "Block",
              "src": "1498:156:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15021,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11698,
                        "src": "1519:18:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15022,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15460,
                          "src": "1539:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:12:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15020,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11894,
                      "src": "1508:10:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 15024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1508:44:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15025,
                  "nodeType": "ExpressionStatement",
                  "src": "1508:44:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15027,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15003,
                        "src": "1574:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15028,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15460,
                          "src": "1587:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1587:12:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15026,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11894,
                      "src": "1563:10:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 15030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1563:37:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15031,
                  "nodeType": "ExpressionStatement",
                  "src": "1563:37:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15033,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15008,
                        "src": "1621:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15034,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15460,
                          "src": "1634:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1634:12:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15032,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11894,
                      "src": "1610:10:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 15036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1610:37:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15037,
                  "nodeType": "ExpressionStatement",
                  "src": "1610:37:56"
                }
              ]
            },
            "documentation": {
              "id": 15009,
              "nodeType": "StructuredDocumentation",
              "src": "1247:172:56",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."
            },
            "id": 15039,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15016,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15011,
                    "src": "1484:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 15017,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15013,
                    "src": "1490:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 15018,
                "modifierName": {
                  "id": 15015,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14798,
                  "src": "1478:5:56"
                },
                "nodeType": "ModifierInvocation",
                "src": "1478:19:56"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15011,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 15039,
                  "src": "1436:18:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15010,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15013,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 15039,
                  "src": "1456:20:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15012,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1435:42:56"
            },
            "returnParameters": {
              "id": 15019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1498:0:56"
            },
            "scope": 15118,
            "src": "1424:230:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15061,
              "nodeType": "Block",
              "src": "1900:145:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15049,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15003,
                            "src": "1926:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 15050,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15460,
                              "src": "1939:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 15051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1939:12:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15048,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11750,
                          "src": "1918:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 15052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1918:34:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 15053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1954:56:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        }
                      ],
                      "id": 15047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1910:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1910:101:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15055,
                  "nodeType": "ExpressionStatement",
                  "src": "1910:101:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15057,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15042,
                        "src": "2027:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15058,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15044,
                        "src": "2031:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15056,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14615,
                      "src": "2021:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2021:17:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15060,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:17:56"
                }
              ]
            },
            "documentation": {
              "id": 15040,
              "nodeType": "StructuredDocumentation",
              "src": "1660:178:56",
              "text": " @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "40c10f19",
            "id": 15062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15042,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 15062,
                  "src": "1857:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1857:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15044,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15062,
                  "src": "1869:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1869:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1856:28:56"
            },
            "returnParameters": {
              "id": 15046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1900:0:56"
            },
            "scope": 15118,
            "src": "1843:202:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15078,
              "nodeType": "Block",
              "src": "2280:137:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15068,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15008,
                            "src": "2306:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 15069,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15460,
                              "src": "2319:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 15070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2319:12:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15067,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11750,
                          "src": "2298:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 15071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2298:34:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 15072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2334:57:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                        },
                        "value": "ERC20PresetMinterPauser: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                        }
                      ],
                      "id": 15066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2290:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:102:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15074,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:102:56"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15075,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12413,
                      "src": "2402:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:8:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15077,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:8:56"
                }
              ]
            },
            "documentation": {
              "id": 15063,
              "nodeType": "StructuredDocumentation",
              "src": "2051:192:56",
              "text": " @dev Pauses all token transfers.\n See {ERC20Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 15079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:2:56"
            },
            "returnParameters": {
              "id": 15065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2280:0:56"
            },
            "scope": 15118,
            "src": "2248:169:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15095,
              "nodeType": "Block",
              "src": "2658:141:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15085,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15008,
                            "src": "2684:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 15086,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15460,
                              "src": "2697:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 15087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2697:12:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15084,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11750,
                          "src": "2676:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 15088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2676:34:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 15089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2712:59:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                        },
                        "value": "ERC20PresetMinterPauser: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                        }
                      ],
                      "id": 15083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2668:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2668:104:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15091,
                  "nodeType": "ExpressionStatement",
                  "src": "2668:104:56"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15092,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12429,
                      "src": "2782:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:10:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15094,
                  "nodeType": "ExpressionStatement",
                  "src": "2782:10:56"
                }
              ]
            },
            "documentation": {
              "id": 15080,
              "nodeType": "StructuredDocumentation",
              "src": "2423:196:56",
              "text": " @dev Unpauses all token transfers.\n See {ERC20Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 15096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2640:2:56"
            },
            "returnParameters": {
              "id": 15082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:0:56"
            },
            "scope": 15118,
            "src": "2624:175:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14786,
              14956
            ],
            "body": {
              "id": 15116,
              "nodeType": "Block",
              "src": "2955:61:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15111,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15098,
                        "src": "2992:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15112,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15100,
                        "src": "2998:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15113,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15102,
                        "src": "3002:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15108,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2965:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20PresetMinterPauser_$15118_$",
                          "typeString": "type(contract super ERC20PresetMinterPauser)"
                        }
                      },
                      "id": 15110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14956,
                      "src": "2965:26:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:44:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15115,
                  "nodeType": "ExpressionStatement",
                  "src": "2965:44:56"
                }
              ]
            },
            "id": 15117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15106,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15104,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14798,
                  "src": "2933:5:56"
                },
                {
                  "id": 15105,
                  "name": "ERC20Pausable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14957,
                  "src": "2940:13:56"
                }
              ],
              "src": "2924:30:56"
            },
            "parameters": {
              "id": 15103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15098,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 15117,
                  "src": "2844:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2844:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15100,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 15117,
                  "src": "2866:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15102,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15117,
                  "src": "2886:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2886:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2834:72:56"
            },
            "returnParameters": {
              "id": 15107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2955:0:56"
            },
            "scope": 15118,
            "src": "2805:211:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 15119,
        "src": "1005:2013:56"
      }
    ],
    "src": "131:2888:56"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
    "exportedSymbols": {
      "AccessControl": [
        11986
      ],
      "AccessControlEnumerable": [
        12111
      ],
      "Context": [
        15470
      ],
      "ERC165": [
        15723
      ],
      "ERC20": [
        14798
      ],
      "ERC20Burnable": [
        14920
      ],
      "ERC20Pausable": [
        14957
      ],
      "ERC20PresetMinterPauser": [
        15118
      ],
      "EnumerableSet": [
        17631
      ],
      "IAccessControl": [
        12184
      ],
      "IAccessControlEnumerable": [
        12209
      ],
      "IERC165": [
        15735
      ],
      "IERC20": [
        14876
      ],
      "IERC20Metadata": [
        14982
      ],
      "Math": [
        16601
      ],
      "Pausable": [
        12430
      ],
      "SignedMath": [
        17018
      ],
      "Strings": [
        15699
      ]
    },
    "id": 15119,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14984,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "131:23:56"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../ERC20.sol",
        "id": 14985,
        "nodeType": "ImportDirective",
        "scope": 15119,
        "sourceUnit": 14799,
        "src": "156:22:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "../extensions/ERC20Burnable.sol",
        "id": 14986,
        "nodeType": "ImportDirective",
        "scope": 15119,
        "sourceUnit": 14921,
        "src": "179:41:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "file": "../extensions/ERC20Pausable.sol",
        "id": 14987,
        "nodeType": "ImportDirective",
        "scope": 15119,
        "sourceUnit": 14958,
        "src": "221:41:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "file": "../../../access/AccessControlEnumerable.sol",
        "id": 14988,
        "nodeType": "ImportDirective",
        "scope": 15119,
        "sourceUnit": 12112,
        "src": "263:53:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "../../../utils/Context.sol",
        "id": 14989,
        "nodeType": "ImportDirective",
        "scope": 15119,
        "sourceUnit": 15471,
        "src": "317:36:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14991,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15470,
              "src": "1041:7:56"
            },
            "id": 14992,
            "nodeType": "InheritanceSpecifier",
            "src": "1041:7:56"
          },
          {
            "baseName": {
              "id": 14993,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12111,
              "src": "1050:23:56"
            },
            "id": 14994,
            "nodeType": "InheritanceSpecifier",
            "src": "1050:23:56"
          },
          {
            "baseName": {
              "id": 14995,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14920,
              "src": "1075:13:56"
            },
            "id": 14996,
            "nodeType": "InheritanceSpecifier",
            "src": "1075:13:56"
          },
          {
            "baseName": {
              "id": 14997,
              "name": "ERC20Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14957,
              "src": "1090:13:56"
            },
            "id": 14998,
            "nodeType": "InheritanceSpecifier",
            "src": "1090:13:56"
          }
        ],
        "contractDependencies": [
          11986,
          12111,
          12184,
          12209,
          12430,
          14798,
          14876,
          14920,
          14957,
          14982,
          15470,
          15723,
          15735
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 14990,
          "nodeType": "StructuredDocumentation",
          "src": "355:649:56",
          "text": " @dev {ERC20} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts.\n _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._"
        },
        "fullyImplemented": true,
        "id": 15118,
        "linearizedBaseContracts": [
          15118,
          14957,
          12430,
          14920,
          14798,
          14982,
          14876,
          12111,
          11986,
          15723,
          15735,
          12209,
          12184,
          15470
        ],
        "name": "ERC20PresetMinterPauser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 15003,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 15118,
            "src": "1110:62:56",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 14999,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1110:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 15001,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1158:13:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 15000,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1148:9:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 15002,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1148:24:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 15008,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 15118,
            "src": "1178:62:56",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15004,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1178:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 15006,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1226:13:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 15005,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1216:9:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 15007,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1216:24:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 15038,
              "nodeType": "Block",
              "src": "1498:156:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15021,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11698,
                        "src": "1519:18:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15022,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15460,
                          "src": "1539:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:12:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15020,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11894,
                      "src": "1508:10:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 15024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1508:44:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15025,
                  "nodeType": "ExpressionStatement",
                  "src": "1508:44:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15027,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15003,
                        "src": "1574:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15028,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15460,
                          "src": "1587:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1587:12:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15026,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11894,
                      "src": "1563:10:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 15030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1563:37:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15031,
                  "nodeType": "ExpressionStatement",
                  "src": "1563:37:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15033,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15008,
                        "src": "1621:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15034,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15460,
                          "src": "1634:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1634:12:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15032,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11894,
                      "src": "1610:10:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 15036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1610:37:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15037,
                  "nodeType": "ExpressionStatement",
                  "src": "1610:37:56"
                }
              ]
            },
            "documentation": {
              "id": 15009,
              "nodeType": "StructuredDocumentation",
              "src": "1247:172:56",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."
            },
            "id": 15039,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15016,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15011,
                    "src": "1484:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 15017,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15013,
                    "src": "1490:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 15018,
                "modifierName": {
                  "id": 15015,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14798,
                  "src": "1478:5:56"
                },
                "nodeType": "ModifierInvocation",
                "src": "1478:19:56"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15011,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 15039,
                  "src": "1436:18:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15010,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15013,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 15039,
                  "src": "1456:20:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15012,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1435:42:56"
            },
            "returnParameters": {
              "id": 15019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1498:0:56"
            },
            "scope": 15118,
            "src": "1424:230:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15061,
              "nodeType": "Block",
              "src": "1900:145:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15049,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15003,
                            "src": "1926:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 15050,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15460,
                              "src": "1939:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 15051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1939:12:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15048,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11750,
                          "src": "1918:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 15052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1918:34:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 15053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1954:56:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        }
                      ],
                      "id": 15047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1910:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1910:101:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15055,
                  "nodeType": "ExpressionStatement",
                  "src": "1910:101:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15057,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15042,
                        "src": "2027:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15058,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15044,
                        "src": "2031:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15056,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14615,
                      "src": "2021:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2021:17:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15060,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:17:56"
                }
              ]
            },
            "documentation": {
              "id": 15040,
              "nodeType": "StructuredDocumentation",
              "src": "1660:178:56",
              "text": " @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "40c10f19",
            "id": 15062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15042,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 15062,
                  "src": "1857:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1857:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15044,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15062,
                  "src": "1869:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1869:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1856:28:56"
            },
            "returnParameters": {
              "id": 15046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1900:0:56"
            },
            "scope": 15118,
            "src": "1843:202:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15078,
              "nodeType": "Block",
              "src": "2280:137:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15068,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15008,
                            "src": "2306:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 15069,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15460,
                              "src": "2319:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 15070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2319:12:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15067,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11750,
                          "src": "2298:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 15071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2298:34:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 15072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2334:57:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                        },
                        "value": "ERC20PresetMinterPauser: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                        }
                      ],
                      "id": 15066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2290:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:102:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15074,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:102:56"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15075,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12413,
                      "src": "2402:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:8:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15077,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:8:56"
                }
              ]
            },
            "documentation": {
              "id": 15063,
              "nodeType": "StructuredDocumentation",
              "src": "2051:192:56",
              "text": " @dev Pauses all token transfers.\n See {ERC20Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 15079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:2:56"
            },
            "returnParameters": {
              "id": 15065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2280:0:56"
            },
            "scope": 15118,
            "src": "2248:169:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15095,
              "nodeType": "Block",
              "src": "2658:141:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15085,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15008,
                            "src": "2684:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 15086,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15460,
                              "src": "2697:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 15087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2697:12:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15084,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11750,
                          "src": "2676:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 15088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2676:34:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 15089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2712:59:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                        },
                        "value": "ERC20PresetMinterPauser: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                        }
                      ],
                      "id": 15083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2668:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2668:104:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15091,
                  "nodeType": "ExpressionStatement",
                  "src": "2668:104:56"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15092,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12429,
                      "src": "2782:8:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:10:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15094,
                  "nodeType": "ExpressionStatement",
                  "src": "2782:10:56"
                }
              ]
            },
            "documentation": {
              "id": 15080,
              "nodeType": "StructuredDocumentation",
              "src": "2423:196:56",
              "text": " @dev Unpauses all token transfers.\n See {ERC20Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 15096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2640:2:56"
            },
            "returnParameters": {
              "id": 15082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:0:56"
            },
            "scope": 15118,
            "src": "2624:175:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14786,
              14956
            ],
            "body": {
              "id": 15116,
              "nodeType": "Block",
              "src": "2955:61:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15111,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15098,
                        "src": "2992:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15112,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15100,
                        "src": "2998:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15113,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15102,
                        "src": "3002:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15108,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2965:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20PresetMinterPauser_$15118_$",
                          "typeString": "type(contract super ERC20PresetMinterPauser)"
                        }
                      },
                      "id": 15110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14956,
                      "src": "2965:26:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:44:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15115,
                  "nodeType": "ExpressionStatement",
                  "src": "2965:44:56"
                }
              ]
            },
            "id": 15117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15106,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15104,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14798,
                  "src": "2933:5:56"
                },
                {
                  "id": 15105,
                  "name": "ERC20Pausable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14957,
                  "src": "2940:13:56"
                }
              ],
              "src": "2924:30:56"
            },
            "parameters": {
              "id": 15103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15098,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 15117,
                  "src": "2844:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2844:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15100,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 15117,
                  "src": "2866:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15102,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15117,
                  "src": "2886:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2886:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2834:72:56"
            },
            "returnParameters": {
              "id": 15107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2955:0:56"
            },
            "scope": 15118,
            "src": "2805:211:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 15119,
        "src": "1005:2013:56"
      }
    ],
    "src": "131:2888:56"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2024-06-25T04:23:12.651Z",
  "devdoc": {
    "details": "{ERC20} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts. _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "constructor": {
        "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}